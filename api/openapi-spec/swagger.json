{
  "swagger": "2.0",
  "info": {
    "title": "Harvester APIs",
    "version": "v1beta1"
  },
  "paths": {
    "/api/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/persistentvolumeclaims": {
      "get": {
        "description": "Get a list of PersistentVolumeClaim objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Volumes"
        ],
        "summary": "List Persistent Volume Claims",
        "operationId": "listNamespacedPersistentVolumeClaim",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a PersistentVolumeClaim object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Volumes"
        ],
        "summary": "Create a Persistent Volume Claim",
        "operationId": "createNamespacedPersistentVolumeClaim",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaim"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaim"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaim"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaim"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/persistentvolumeclaims/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a PersistentVolumeClaim object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Volumes"
        ],
        "summary": "Read a Persistent Volume Claim",
        "operationId": "readNamespacedPersistentVolumeClaim",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaim"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a PersistentVolumeClaim object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Volumes"
        ],
        "summary": "Replace a Persistent Volume Claim",
        "operationId": "replaceNamespacedPersistentVolumeClaim",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaim"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaim"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaim"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a PersistentVolumeClaim object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Volumes"
        ],
        "summary": "Delete a Persistent Volume Claim",
        "operationId": "deleteNamespacedPersistentVolumeClaim",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a PersistentVolumeClaim object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Volumes"
        ],
        "summary": "Patch a Persistent Volume Claim",
        "operationId": "patchNamespacedPersistentVolumeClaim",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaim"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/v1/persistentvolumeclaims": {
      "get": {
        "description": "Get a list of all PersistentVolumeClaim objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Volumes"
        ],
        "summary": "List Persistent Volume Claims For All Namespaces",
        "operationId": "listPersistentVolumeClaimForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/keypairs": {
      "get": {
        "description": "Get a list of all KeyPair objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "SSH Keys"
        ],
        "summary": "List Key Pairs For All Namespaces",
        "operationId": "listKeyPairForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPairList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/keypairs": {
      "get": {
        "description": "Get a list of KeyPair objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "SSH Keys"
        ],
        "summary": "List Key Pairs",
        "operationId": "listNamespacedKeyPair",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPairList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a KeyPair object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "SSH Keys"
        ],
        "summary": "Create a Key Pair",
        "operationId": "createNamespacedKeyPair",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/keypairs/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a KeyPair object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "SSH Keys"
        ],
        "summary": "Read a Key Pair",
        "operationId": "readNamespacedKeyPair",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a KeyPair object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "SSH Keys"
        ],
        "summary": "Replace a Key Pair",
        "operationId": "replaceNamespacedKeyPair",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a KeyPair object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "SSH Keys"
        ],
        "summary": "Delete a Key Pair",
        "operationId": "deleteNamespacedKeyPair",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a KeyPair object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "SSH Keys"
        ],
        "summary": "Patch a Key Pair",
        "operationId": "patchNamespacedKeyPair",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/supportbundles": {
      "get": {
        "description": "Get a list of SupportBundle objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Support Bundles"
        ],
        "summary": "List Support Bundles",
        "operationId": "listNamespacedSupportBundle",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundleList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a SupportBundle object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Support Bundles"
        ],
        "summary": "Create a Support Bundle",
        "operationId": "createNamespacedSupportBundle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/supportbundles/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a SupportBundle object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Support Bundles"
        ],
        "summary": "Read a Support Bundle",
        "operationId": "readNamespacedSupportBundle",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a SupportBundle object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Support Bundles"
        ],
        "summary": "Replace a Support Bundle",
        "operationId": "replaceNamespacedSupportBundle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a SupportBundle object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Support Bundles"
        ],
        "summary": "Delete a Support Bundle",
        "operationId": "deleteNamespacedSupportBundle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a SupportBundle object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Support Bundles"
        ],
        "summary": "Patch a Support Bundle",
        "operationId": "patchNamespacedSupportBundle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/upgrades": {
      "get": {
        "description": "Get a list of Upgrade objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Upgrades"
        ],
        "summary": "List Upgrades",
        "operationId": "listNamespacedUpgrade",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.UpgradeList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a Upgrade object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Upgrades"
        ],
        "summary": "Create an Upgrade",
        "operationId": "createNamespacedUpgrade",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/upgrades/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a Upgrade object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Upgrades"
        ],
        "summary": "Read an Upgrade",
        "operationId": "readNamespacedUpgrade",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a Upgrade object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Upgrades"
        ],
        "summary": "Replace an Upgrade",
        "operationId": "replaceNamespacedUpgrade",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Upgrade object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Upgrades"
        ],
        "summary": "Delete an Upgrade",
        "operationId": "deleteNamespacedUpgrade",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a Upgrade object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Upgrades"
        ],
        "summary": "Patch an Upgrade",
        "operationId": "patchNamespacedUpgrade",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinebackups": {
      "get": {
        "description": "Get a list of VirtualMachineBackup objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Backups"
        ],
        "summary": "List Virtual Machine Backups",
        "operationId": "listNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineBackup object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Backups"
        ],
        "summary": "Create a Virtual Machine Backup",
        "operationId": "createNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinebackups/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineBackup object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Backups"
        ],
        "summary": "Read a Virtual Machine Backup",
        "operationId": "readNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineBackup object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Backups"
        ],
        "summary": "Replace a Virtual Machine Backup",
        "operationId": "replaceNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineBackup object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Backups"
        ],
        "summary": "Delete a Virtual Machine Backup",
        "operationId": "deleteNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineBackup object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "summary": "Patch a Virtual Machine Backup",
        "operationId": "patchNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineimages": {
      "get": {
        "description": "Get a list of VirtualMachineImage objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Images"
        ],
        "summary": "List Virtual Machine Images",
        "operationId": "listNamespacedVirtualMachineImage",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImageList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineImage object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Images"
        ],
        "summary": "Create a Virtual Machine Image",
        "operationId": "createNamespacedVirtualMachineImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineimages/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineImage object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Images"
        ],
        "summary": "Read a Virtual Machine Image",
        "operationId": "readNamespacedVirtualMachineImage",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineImage object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Images"
        ],
        "summary": "Replace a Virtual Machine Image",
        "operationId": "replaceNamespacedVirtualMachineImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineImage object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Images"
        ],
        "summary": "Delete a Virtual Machine Image",
        "operationId": "deleteNamespacedVirtualMachineImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineImage object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Images"
        ],
        "summary": "Patch a Virtual Machine Image",
        "operationId": "patchNamespacedVirtualMachineImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinerestores": {
      "get": {
        "description": "Get a list of VirtualMachineRestore objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Restores"
        ],
        "summary": "List Virtual Machine Restores",
        "operationId": "listNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestoreList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineRestore object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Restores"
        ],
        "summary": "Create a Virtual Machine Restore",
        "operationId": "createNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinerestores/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineRestore object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Restores"
        ],
        "summary": "Read a Virtual Machine Restore",
        "operationId": "readNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineRestore object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Restores"
        ],
        "summary": "Replace a Virtual Machine Restore",
        "operationId": "replaceNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineRestore object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Restores"
        ],
        "summary": "Delete a Virtual Machine Restore",
        "operationId": "deleteNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineRestore object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Restores"
        ],
        "summary": "Patch a Virtual Machine Restore",
        "operationId": "patchNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinetemplates": {
      "get": {
        "description": "Get a list of VirtualMachineTemplate objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "List Virtual Machine Templates",
        "operationId": "listNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineTemplate object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Create a Virtual Machine Template",
        "operationId": "createNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinetemplates/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineTemplate object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Read a Virtual Machine Template",
        "operationId": "readNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineTemplate object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Replace a Virtual Machine Template",
        "operationId": "replaceNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineTemplate object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Delete a Virtual Machine Template",
        "operationId": "deleteNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineTemplate object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Patch a Virtual Machine Template",
        "operationId": "patchNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinetemplateversions": {
      "get": {
        "description": "Get a list of VirtualMachineTemplateVersion objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "List Virtual Machine Template Versions",
        "operationId": "listNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineTemplateVersion object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Create a Virtual Machine Template Version",
        "operationId": "createNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinetemplateversions/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineTemplateVersion object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Read a Virtual Machine Template Version",
        "operationId": "readNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineTemplateVersion object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Replace a Virtual Machine Template Version",
        "operationId": "replaceNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineTemplateVersion object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Delete a Virtual Machine Template Version",
        "operationId": "deleteNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineTemplateVersion object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Patch a Virtual Machine Template Version",
        "operationId": "patchNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/supportbundles": {
      "get": {
        "description": "Get a list of all SupportBundle objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Support Bundles"
        ],
        "summary": "List Support Bundles For All Namespaces",
        "operationId": "listSupportBundleForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundleList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/upgrades": {
      "get": {
        "description": "Get a list of all Upgrade objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Upgrades"
        ],
        "summary": "List Upgrades For All Namespaces",
        "operationId": "listUpgradeForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.UpgradeList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinebackups": {
      "get": {
        "description": "Get a list of all VirtualMachineBackup objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Backups"
        ],
        "summary": "List Virtual Machine Backups For All Namespaces",
        "operationId": "listVirtualMachineBackupForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachineimages": {
      "get": {
        "description": "Get a list of all VirtualMachineImage objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Images"
        ],
        "summary": "List Virtual Machine Images For All Namespaces",
        "operationId": "listVirtualMachineImageForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImageList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinerestores": {
      "get": {
        "description": "Get a list of all VirtualMachineRestore objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Restores"
        ],
        "summary": "List Virtual Machine Restores For All Namespaces",
        "operationId": "listVirtualMachineRestoreForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestoreList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinetemplates": {
      "get": {
        "description": "Get a list of all VirtualMachineTemplate objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "List Virtual Machine Templates For All Namespaces",
        "operationId": "listVirtualMachineTemplateForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinetemplateversions": {
      "get": {
        "description": "Get a list of all VirtualMachineTemplateVersion objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "List Virtual Machine Template Versions For All Namespaces",
        "operationId": "listVirtualMachineTemplateVersionForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/k8s.cni.cncf.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/network-attachment-definitions": {
      "get": {
        "description": "Get a list of NetworkAttachmentDefinition objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "List Network Attachment Definitions",
        "operationId": "listNamespacedNetworkAttachmentDefinition",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a NetworkAttachmentDefinition object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Create a Network Attachment Definition",
        "operationId": "createNamespacedNetworkAttachmentDefinition",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/k8s.cni.cncf.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/network-attachment-definitions/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a NetworkAttachmentDefinition object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Read a Network Attachment Definition",
        "operationId": "readNamespacedNetworkAttachmentDefinition",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a NetworkAttachmentDefinition object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Replace a Network Attachment Definition",
        "operationId": "replaceNamespacedNetworkAttachmentDefinition",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a NetworkAttachmentDefinition object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Delete a Network Attachment Definition",
        "operationId": "deleteNamespacedNetworkAttachmentDefinition",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a NetworkAttachmentDefinition object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Patch a Network Attachment Definition",
        "operationId": "patchNamespacedNetworkAttachmentDefinition",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/k8s.cni.cncf.io/v1/network-attachment-definitions": {
      "get": {
        "description": "Get a list of all NetworkAttachmentDefinition objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "List Network Attachment Definitions For All Namespaces",
        "operationId": "listNetworkAttachmentDefinitionForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineinstancemigrations": {
      "get": {
        "description": "Get a list of VirtualMachineInstanceMigration objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Migrations"
        ],
        "summary": "List Virtual Machine Instance Migrations",
        "operationId": "listNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineInstanceMigration object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Migrations"
        ],
        "summary": "Create a Virtual Machine Instance Migration",
        "operationId": "createNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineinstancemigrations/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineInstanceMigration object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Migrations"
        ],
        "summary": "Read a Virtual Machine Instance Migration",
        "operationId": "readNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineInstanceMigration object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Migrations"
        ],
        "summary": "Replace a Virtual Machine Instance Migration",
        "operationId": "replaceNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineInstanceMigration object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Migrations"
        ],
        "summary": "Delete a Virtual Machine Instance Migration",
        "operationId": "deleteNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineInstanceMigration object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Migrations"
        ],
        "summary": "Patch a Virtual Machine Instance Migration",
        "operationId": "patchNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineinstances": {
      "get": {
        "description": "Get a list of VirtualMachineInstance objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List Virtual Machine Instances",
        "operationId": "listNamespacedVirtualMachineInstance",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineinstances/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineInstance object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Read a Virtual Machine Instance",
        "operationId": "readNamespacedVirtualMachineInstance",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstance"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
          "name": "exact",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Should this value be exported. Export strips fields that a user can not specify.",
          "name": "export",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachines": {
      "get": {
        "description": "Get a list of VirtualMachine objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List Virtual Machines",
        "operationId": "listNamespacedVirtualMachine",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachine object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Create a Virtual Machine",
        "operationId": "createNamespacedVirtualMachine",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachine"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachine"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachine"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachine"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachines/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachine object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Read a Virtual Machine",
        "operationId": "readNamespacedVirtualMachine",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachine"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachine object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Replace a Virtual Machine",
        "operationId": "replaceNamespacedVirtualMachine",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachine"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachine"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachine"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachine object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Delete a Virtual Machine",
        "operationId": "deleteNamespacedVirtualMachine",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachine object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Patch a Virtual Machine",
        "operationId": "patchNamespacedVirtualMachine",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachine"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/kubevirt.io/v1/virtualmachineinstancemigrations": {
      "get": {
        "description": "Get a list of all VirtualMachineInstanceMigration objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Migrations"
        ],
        "summary": "List Virtual Machine Instance Migrations For All Namespaces",
        "operationId": "listVirtualMachineInstanceMigrationForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/v1/virtualmachineinstances": {
      "get": {
        "description": "Get a list of all VirtualMachineInstance objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List Virtual Machine Instances For All Namespaces",
        "operationId": "listVirtualMachineInstanceForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/v1/virtualmachines": {
      "get": {
        "description": "Get a list of all VirtualMachine objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List Virtual Machines For All Namespaces",
        "operationId": "listVirtualMachineForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/network.harvesterhci.io/v1beta1/clusternetworks": {
      "get": {
        "description": "Get a list of ClusterNetwork objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "List Cluster Networks",
        "operationId": "listNamespacedClusterNetwork",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Object name and auth scope, such as for teams and projects",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.ClusterNetworkList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a ClusterNetwork object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Create a Cluster Network",
        "operationId": "createNamespacedClusterNetwork",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.ClusterNetwork"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Object name and auth scope, such as for teams and projects",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.ClusterNetwork"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.ClusterNetwork"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.ClusterNetwork"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/apis/network.harvesterhci.io/v1beta1/clusternetworks/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a ClusterNetwork object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Read a Cluster Network",
        "operationId": "readNamespacedClusterNetwork",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.ClusterNetwork"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a ClusterNetwork object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Replace a Cluster Network",
        "operationId": "replaceNamespacedClusterNetwork",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.ClusterNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.ClusterNetwork"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.ClusterNetwork"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a ClusterNetwork object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Delete a Cluster Network",
        "operationId": "deleteNamespacedClusterNetwork",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a ClusterNetwork object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Patch a Cluster Network",
        "operationId": "patchNamespacedClusterNetwork",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.ClusterNetwork"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/network.harvesterhci.io/v1beta1/nodenetworks": {
      "get": {
        "description": "Get a list of NodeNetwork objects in a namespace.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "List Node Networks",
        "operationId": "listNamespacedNodeNetwork",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Object name and auth scope, such as for teams and projects",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetworkList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a NodeNetwork object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Create a Node Network",
        "operationId": "createNamespacedNodeNetwork",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetwork"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Object name and auth scope, such as for teams and projects",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetwork"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetwork"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetwork"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/apis/network.harvesterhci.io/v1beta1/nodenetworks/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a NodeNetwork object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Read a Node Network",
        "operationId": "readNamespacedNodeNetwork",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetwork"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a NodeNetwork object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Replace a Node Network",
        "operationId": "replaceNamespacedNodeNetwork",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetwork"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetwork"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a NodeNetwork object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Delete a Node Network",
        "operationId": "deleteNamespacedNodeNetwork",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a NodeNetwork object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Networks"
        ],
        "summary": "Patch a Node Network",
        "operationId": "patchNamespacedNodeNetwork",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetwork"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "harvesterhci.io.v1beta1.BackupTarget": {
      "type": "object",
      "properties": {
        "bucketName": {
          "type": "string"
        },
        "bucketRegion": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.Condition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "default": ""
        },
        "type": {
          "type": "string",
          "default": ""
        }
      }
    },
    "harvesterhci.io.v1beta1.Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        }
      }
    },
    "harvesterhci.io.v1beta1.KeyPair": {
      "type": "object",
      "required": [
        "spec",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPairSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPairStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.KeyPairList": {
      "type": "object",
      "required": [
        "metadata",
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.KeyPairSpec": {
      "type": "object",
      "required": [
        "publicKey"
      ],
      "properties": {
        "publicKey": {
          "type": "string",
          "default": ""
        }
      }
    },
    "harvesterhci.io.v1beta1.KeyPairStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "fingerPrint": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.NodeUpgradeStatus": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimSpec"
        }
      }
    },
    "harvesterhci.io.v1beta1.SecretBackup": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.SupportBundle": {
      "type": "object",
      "required": [
        "spec",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundleSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundleStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.SupportBundleList": {
      "type": "object",
      "required": [
        "metadata",
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.SupportBundleSpec": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string",
          "default": ""
        },
        "issueURL": {
          "type": "string",
          "default": ""
        }
      }
    },
    "harvesterhci.io.v1beta1.SupportBundleStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "filename": {
          "type": "string"
        },
        "filesize": {
          "type": "integer",
          "format": "int64"
        },
        "progress": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.Upgrade": {
      "type": "object",
      "required": [
        "spec",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.UpgradeSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.UpgradeStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.UpgradeList": {
      "type": "object",
      "required": [
        "metadata",
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.UpgradeSpec": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        },
        "logEnabled": {
          "type": "boolean",
          "default": false
        },
        "version": {
          "type": "string",
          "default": ""
        }
      }
    },
    "harvesterhci.io.v1beta1.UpgradeStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "imageID": {
          "type": "string"
        },
        "nodeStatuses": {
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.NodeUpgradeStatus"
          }
        },
        "previousVersion": {
          "type": "string"
        },
        "repoInfo": {
          "type": "string"
        },
        "singleNode": {
          "type": "string"
        },
        "upgradeLog": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineBackup": {
      "type": "object",
      "required": [
        "spec",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupSpec"
        },
        "status": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineBackupList": {
      "type": "object",
      "required": [
        "metadata",
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineBackupSpec": {
      "type": "object",
      "required": [
        "source"
      ],
      "properties": {
        "source": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.TypedLocalObjectReference"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineBackupStatus": {
      "type": "object",
      "properties": {
        "backupTarget": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.BackupTarget"
        },
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "creationTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "csiDriverVolumeSnapshotClassNames": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "error": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.Error"
        },
        "readyToUse": {
          "type": "boolean"
        },
        "secretBackups": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.SecretBackup"
          }
        },
        "source": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineSourceSpec"
        },
        "sourceUID": {
          "type": "string"
        },
        "volumeBackups": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VolumeBackup"
          }
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineImage": {
      "type": "object",
      "required": [
        "spec",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImageSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImageStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineImageList": {
      "type": "object",
      "required": [
        "metadata",
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineImageSpec": {
      "type": "object",
      "required": [
        "displayName",
        "sourceType"
      ],
      "properties": {
        "checksum": {
          "type": "string",
          "default": ""
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "default": ""
        },
        "pvcName": {
          "type": "string",
          "default": ""
        },
        "pvcNamespace": {
          "type": "string",
          "default": ""
        },
        "retry": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "sourceType": {
          "type": "string",
          "default": ""
        },
        "storageClassParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "url": {
          "type": "string",
          "default": ""
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineImageStatus": {
      "type": "object",
      "properties": {
        "appliedUrl": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "failed": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "lastFailedTime": {
          "type": "string"
        },
        "progress": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "storageClassName": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineRestore": {
      "type": "object",
      "required": [
        "spec",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestoreSpec"
        },
        "status": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestoreStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineRestoreList": {
      "type": "object",
      "required": [
        "metadata",
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineRestoreSpec": {
      "type": "object",
      "required": [
        "target",
        "virtualMachineBackupName",
        "virtualMachineBackupNamespace"
      ],
      "properties": {
        "deletionPolicy": {
          "type": "string"
        },
        "newVM": {
          "type": "boolean"
        },
        "target": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.TypedLocalObjectReference"
        },
        "virtualMachineBackupName": {
          "type": "string",
          "default": ""
        },
        "virtualMachineBackupNamespace": {
          "type": "string",
          "default": ""
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineRestoreStatus": {
      "type": "object",
      "properties": {
        "complete": {
          "type": "boolean"
        },
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "deletedVolumes": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "restoreTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "restores": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VolumeRestore"
          }
        },
        "targetUID": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineSourceSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineSpec"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplate": {
      "type": "object",
      "required": [
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateList": {
      "type": "object",
      "required": [
        "metadata",
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateSpec": {
      "type": "object",
      "properties": {
        "defaultVersionId": {
          "type": "string",
          "default": ""
        },
        "description": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateStatus": {
      "type": "object",
      "properties": {
        "defaultVersion": {
          "type": "integer",
          "format": "int32"
        },
        "latestVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateVersion": {
      "type": "object",
      "required": [
        "spec",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList": {
      "type": "object",
      "required": [
        "metadata",
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec": {
      "type": "object",
      "required": [
        "templateId"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "imageId": {
          "type": "string"
        },
        "keyPairIds": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "templateId": {
          "type": "string",
          "default": ""
        },
        "vm": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineSourceSpec"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "harvesterhci.io.v1beta1.VolumeBackup": {
      "type": "object",
      "required": [
        "volumeName",
        "csiDriverName",
        "persistentVolumeClaim"
      ],
      "properties": {
        "creationTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "csiDriverName": {
          "type": "string",
          "default": ""
        },
        "error": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.Error"
        },
        "longhornBackupName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "persistentVolumeClaim": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec"
        },
        "readyToUse": {
          "type": "boolean"
        },
        "volumeName": {
          "type": "string",
          "default": ""
        }
      }
    },
    "harvesterhci.io.v1beta1.VolumeRestore": {
      "type": "object",
      "properties": {
        "persistentVolumeClaimSpec": {
          "default": {},
          "$ref": "#/definitions/harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec"
        },
        "volumeBackupName": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      }
    },
    "k8s.cni.cncf.io.v1.NetworkAttachmentDefinition": {
      "type": "object",
      "required": [
        "spec",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionSpec"
        }
      }
    },
    "k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList": {
      "type": "object",
      "required": [
        "metadata",
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionSpec": {
      "type": "object",
      "required": [
        "config"
      ],
      "properties": {
        "config": {
          "type": "string",
          "default": ""
        }
      }
    },
    "k8s.io.apimachinery.pkg.api.resource.Quantity": {
      "type": "string"
    },
    "k8s.io.apimachinery.pkg.util.intstr.IntOrString": {
      "type": "string",
      "format": "int-or-string"
    },
    "k8s.io.v1.Affinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/k8s.io.v1.NodeAffinity"
        },
        "podAffinity": {
          "$ref": "#/definitions/k8s.io.v1.PodAffinity"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/k8s.io.v1.PodAntiAffinity"
        }
      }
    },
    "k8s.io.v1.DeleteOptions": {
      "type": "object",
      "required": [
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "dryRun": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "gracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "kind": {
          "type": "string"
        },
        "orphanDependents": {
          "type": "boolean"
        },
        "preconditions": {
          "$ref": "#/definitions/k8s.io.v1.Preconditions"
        },
        "propagationPolicy": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.DownwardAPIVolumeFile": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/k8s.io.v1.ObjectFieldSelector"
        },
        "mode": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string",
          "default": ""
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/k8s.io.v1.ResourceFieldSelector"
        }
      }
    },
    "k8s.io.v1.ExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "k8s.io.v1.FieldsV1": {
      "type": "object"
    },
    "k8s.io.v1.HTTPGetAction": {
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "host": {
          "type": "string"
        },
        "httpHeaders": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.HTTPHeader"
          }
        },
        "path": {
          "type": "string"
        },
        "port": {
          "default": {},
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.util.intstr.IntOrString"
        },
        "scheme": {
          "type": "string",
          "enum": [
            "HTTP",
            "HTTPS"
          ]
        }
      }
    },
    "k8s.io.v1.HTTPHeader": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "default": ""
        },
        "value": {
          "type": "string",
          "default": ""
        }
      }
    },
    "k8s.io.v1.LabelSelector": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.LabelSelectorRequirement"
          }
        },
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "k8s.io.v1.LabelSelectorRequirement": {
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "type": "string",
          "default": "",
          "x-kubernetes-patch-merge-key": "key",
          "x-kubernetes-patch-strategy": "merge"
        },
        "operator": {
          "type": "string",
          "default": ""
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "k8s.io.v1.ListMeta": {
      "type": "object",
      "properties": {
        "continue": {
          "type": "string"
        },
        "remainingItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "resourceVersion": {
          "type": "string"
        },
        "selfLink": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.LocalObjectReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "k8s.io.v1.ManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldsType": {
          "type": "string"
        },
        "fieldsV1": {
          "$ref": "#/definitions/k8s.io.v1.FieldsV1"
        },
        "manager": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "subresource": {
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        }
      }
    },
    "k8s.io.v1.NodeAffinity": {
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.PreferredSchedulingTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/k8s.io.v1.NodeSelector"
        }
      }
    },
    "k8s.io.v1.NodeSelector": {
      "type": "object",
      "required": [
        "nodeSelectorTerms"
      ],
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.NodeSelectorTerm"
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "k8s.io.v1.NodeSelectorRequirement": {
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "type": "string",
          "default": ""
        },
        "operator": {
          "type": "string",
          "default": "",
          "enum": [
            "DoesNotExist",
            "Exists",
            "Gt",
            "In",
            "Lt",
            "NotIn"
          ]
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "k8s.io.v1.NodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.NodeSelectorRequirement"
          }
        },
        "matchFields": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.NodeSelectorRequirement"
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "k8s.io.v1.ObjectFieldSelector": {
      "type": "object",
      "required": [
        "fieldPath"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldPath": {
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "k8s.io.v1.ObjectMeta": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.OwnerReference": {
      "type": "object",
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string",
          "default": ""
        },
        "blockOwnerDeletion": {
          "type": "boolean"
        },
        "controller": {
          "type": "boolean"
        },
        "kind": {
          "type": "string",
          "default": ""
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "uid": {
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "k8s.io.v1.Patch": {
      "type": "object"
    },
    "k8s.io.v1.PersistentVolumeClaim": {
      "type": "object",
      "required": [
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimStatus"
        }
      }
    },
    "k8s.io.v1.PersistentVolumeClaimCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastProbeTime": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "lastTransitionTime": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "default": ""
        },
        "type": {
          "type": "string",
          "default": ""
        }
      }
    },
    "k8s.io.v1.PersistentVolumeClaimList": {
      "type": "object",
      "required": [
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaim"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "k8s.io.v1.PersistentVolumeClaimSpec": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "dataSource": {
          "$ref": "#/definitions/k8s.io.v1.TypedLocalObjectReference"
        },
        "dataSourceRef": {
          "$ref": "#/definitions/k8s.io.v1.TypedLocalObjectReference"
        },
        "resources": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ResourceRequirements"
        },
        "selector": {
          "$ref": "#/definitions/k8s.io.v1.LabelSelector"
        },
        "storageClassName": {
          "type": "string"
        },
        "volumeMode": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.PersistentVolumeClaimStatus": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "allocatedResources": {
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "capacity": {
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "phase": {
          "type": "string",
          "enum": [
            "Bound",
            "Lost",
            "Pending"
          ]
        },
        "resizeStatus": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.PersistentVolumeClaimVolumeSource": {
      "type": "object",
      "required": [
        "claimName"
      ],
      "properties": {
        "claimName": {
          "type": "string",
          "default": ""
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "k8s.io.v1.PodAffinity": {
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.PodAffinityTerm"
          }
        }
      }
    },
    "k8s.io.v1.PodAffinityTerm": {
      "type": "object",
      "required": [
        "topologyKey"
      ],
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/k8s.io.v1.LabelSelector"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/k8s.io.v1.LabelSelector"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "topologyKey": {
          "type": "string",
          "default": ""
        }
      }
    },
    "k8s.io.v1.PodAntiAffinity": {
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.PodAffinityTerm"
          }
        }
      }
    },
    "k8s.io.v1.PodDNSConfig": {
      "type": "object",
      "properties": {
        "nameservers": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "options": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.PodDNSConfigOption"
          }
        },
        "searches": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "k8s.io.v1.PodDNSConfigOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.Preconditions": {
      "type": "object",
      "properties": {
        "resourceVersion": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.PreferredSchedulingTerm": {
      "type": "object",
      "required": [
        "weight",
        "preference"
      ],
      "properties": {
        "preference": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.NodeSelectorTerm"
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "k8s.io.v1.ResourceFieldSelector": {
      "type": "object",
      "required": [
        "resource"
      ],
      "properties": {
        "containerName": {
          "type": "string"
        },
        "divisor": {
          "default": {},
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
        },
        "resource": {
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "k8s.io.v1.ResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "requests": {
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        }
      }
    },
    "k8s.io.v1.Status": {
      "type": "object",
      "required": [
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "$ref": "#/definitions/k8s.io.v1.StatusDetails"
        },
        "kind": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.StatusCause": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.StatusDetails": {
      "type": "object",
      "properties": {
        "causes": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.StatusCause"
          }
        },
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "retryAfterSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.TCPSocketAction": {
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "default": {},
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "k8s.io.v1.Time": {
      "type": "string",
      "default": ""
    },
    "k8s.io.v1.Toleration": {
      "type": "object",
      "properties": {
        "effect": {
          "type": "string",
          "enum": [
            "NoExecute",
            "NoSchedule",
            "PreferNoSchedule"
          ]
        },
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string",
          "enum": [
            "Equal",
            "Exists"
          ]
        },
        "tolerationSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.TypedLocalObjectReference": {
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": ""
        },
        "name": {
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "k8s.io.v1.WeightedPodAffinityTerm": {
      "type": "object",
      "required": [
        "weight",
        "podAffinityTerm"
      ],
      "properties": {
        "podAffinityTerm": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.PodAffinityTerm"
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "kubevirt.io.api.core.v1.AccessCredential": {
      "type": "object",
      "properties": {
        "sshPublicKey": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential"
        },
        "userPassword": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.UserPasswordAccessCredential"
        }
      }
    },
    "kubevirt.io.api.core.v1.AccessCredentialSecretSource": {
      "type": "object",
      "required": [
        "secretName"
      ],
      "properties": {
        "secretName": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.AddVolumeOptions": {
      "type": "object",
      "required": [
        "name",
        "disk",
        "volumeSource"
      ],
      "properties": {
        "disk": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Disk"
        },
        "dryRun": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          },
          "x-kubernetes-list-type": "atomic"
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "volumeSource": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.HotplugVolumeSource"
        }
      }
    },
    "kubevirt.io.api.core.v1.BIOS": {
      "type": "object",
      "properties": {
        "useSerial": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.BlockSize": {
      "type": "object",
      "properties": {
        "custom": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.CustomBlockSize"
        },
        "matchVolume": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        }
      }
    },
    "kubevirt.io.api.core.v1.Bootloader": {
      "type": "object",
      "properties": {
        "bios": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.BIOS"
        },
        "efi": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.EFI"
        }
      }
    },
    "kubevirt.io.api.core.v1.CDRomTarget": {
      "type": "object",
      "properties": {
        "bus": {
          "type": "string"
        },
        "readonly": {
          "type": "boolean"
        },
        "tray": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.CPU": {
      "type": "object",
      "properties": {
        "cores": {
          "type": "integer",
          "format": "int64"
        },
        "dedicatedCpuPlacement": {
          "type": "boolean"
        },
        "features": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.CPUFeature"
          }
        },
        "isolateEmulatorThread": {
          "type": "boolean"
        },
        "model": {
          "type": "string"
        },
        "numa": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.NUMA"
        },
        "realtime": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Realtime"
        },
        "sockets": {
          "type": "integer",
          "format": "int64"
        },
        "threads": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "kubevirt.io.api.core.v1.CPUFeature": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "default": ""
        },
        "policy": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.Chassis": {
      "type": "object",
      "properties": {
        "asset": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "serial": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.ClientPassthroughDevices": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.Clock": {
      "type": "object",
      "properties": {
        "timer": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Timer"
        },
        "timezone": {
          "type": "string"
        },
        "utc": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.ClockOffsetUTC"
        }
      }
    },
    "kubevirt.io.api.core.v1.ClockOffsetUTC": {
      "type": "object",
      "properties": {
        "offsetSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "kubevirt.io.api.core.v1.CloudInitConfigDriveSource": {
      "type": "object",
      "properties": {
        "networkData": {
          "type": "string"
        },
        "networkDataBase64": {
          "type": "string"
        },
        "networkDataSecretRef": {
          "$ref": "#/definitions/k8s.io.v1.LocalObjectReference"
        },
        "secretRef": {
          "$ref": "#/definitions/k8s.io.v1.LocalObjectReference"
        },
        "userData": {
          "type": "string"
        },
        "userDataBase64": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.CloudInitNoCloudSource": {
      "type": "object",
      "properties": {
        "networkData": {
          "type": "string"
        },
        "networkDataBase64": {
          "type": "string"
        },
        "networkDataSecretRef": {
          "$ref": "#/definitions/k8s.io.v1.LocalObjectReference"
        },
        "secretRef": {
          "$ref": "#/definitions/k8s.io.v1.LocalObjectReference"
        },
        "userData": {
          "type": "string"
        },
        "userDataBase64": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.ConfigMapVolumeSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        },
        "volumeLabel": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.ContainerDiskSource": {
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        },
        "imagePullPolicy": {
          "type": "string",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never"
          ]
        },
        "imagePullSecret": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.CustomBlockSize": {
      "type": "object",
      "required": [
        "logical",
        "physical"
      ],
      "properties": {
        "logical": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "physical": {
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "kubevirt.io.api.core.v1.DHCPOptions": {
      "type": "object",
      "properties": {
        "bootFileName": {
          "type": "string"
        },
        "ntpServers": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "privateOptions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.DHCPPrivateOptions"
          }
        },
        "tftpServerName": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.DHCPPrivateOptions": {
      "type": "object",
      "required": [
        "option",
        "value"
      ],
      "properties": {
        "option": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "value": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.DataVolumeSource": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "hotpluggable": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.DataVolumeTemplateSpec": {
      "type": "object",
      "required": [
        "spec",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec"
        },
        "status": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus"
        }
      }
    },
    "kubevirt.io.api.core.v1.Devices": {
      "type": "object",
      "properties": {
        "autoattachGraphicsDevice": {
          "type": "boolean"
        },
        "autoattachMemBalloon": {
          "type": "boolean"
        },
        "autoattachPodInterface": {
          "type": "boolean"
        },
        "autoattachSerialConsole": {
          "type": "boolean"
        },
        "blockMultiQueue": {
          "type": "boolean"
        },
        "clientPassthrough": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.ClientPassthroughDevices"
        },
        "disableHotplug": {
          "type": "boolean"
        },
        "disks": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.Disk"
          }
        },
        "filesystems": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.Filesystem"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "gpus": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.GPU"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "hostDevices": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.HostDevice"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "inputs": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.Input"
          }
        },
        "interfaces": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.Interface"
          }
        },
        "networkInterfaceMultiqueue": {
          "type": "boolean"
        },
        "rng": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Rng"
        },
        "sound": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.SoundDevice"
        },
        "tpm": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.TPMDevice"
        },
        "useVirtioTransitional": {
          "type": "boolean"
        },
        "watchdog": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Watchdog"
        }
      }
    },
    "kubevirt.io.api.core.v1.Disk": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "blockSize": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.BlockSize"
        },
        "bootOrder": {
          "type": "integer",
          "format": "int32"
        },
        "cache": {
          "type": "string"
        },
        "cdrom": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.CDRomTarget"
        },
        "dedicatedIOThread": {
          "type": "boolean"
        },
        "disk": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.DiskTarget"
        },
        "io": {
          "type": "string"
        },
        "lun": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.LunTarget"
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "serial": {
          "type": "string"
        },
        "shareable": {
          "type": "boolean"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.DiskTarget": {
      "type": "object",
      "properties": {
        "bus": {
          "type": "string"
        },
        "pciAddress": {
          "type": "string"
        },
        "readonly": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.DomainMemoryDumpInfo": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string"
        },
        "endTimestamp": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "startTimestamp": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "targetFileName": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.DomainSpec": {
      "type": "object",
      "required": [
        "devices"
      ],
      "properties": {
        "chassis": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Chassis"
        },
        "clock": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Clock"
        },
        "cpu": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.CPU"
        },
        "devices": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Devices"
        },
        "features": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Features"
        },
        "firmware": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Firmware"
        },
        "ioThreadsPolicy": {
          "type": "string"
        },
        "launchSecurity": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.LaunchSecurity"
        },
        "machine": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Machine"
        },
        "memory": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Memory"
        },
        "resources": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.ResourceRequirements"
        }
      }
    },
    "kubevirt.io.api.core.v1.DownwardAPIVolumeSource": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.DownwardAPIVolumeFile"
          }
        },
        "volumeLabel": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.DownwardMetricsVolumeSource": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.EFI": {
      "type": "object",
      "properties": {
        "secureBoot": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.EmptyDiskSource": {
      "type": "object",
      "required": [
        "capacity"
      ],
      "properties": {
        "capacity": {
          "default": {},
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "kubevirt.io.api.core.v1.EphemeralVolumeSource": {
      "type": "object",
      "properties": {
        "persistentVolumeClaim": {
          "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimVolumeSource"
        }
      }
    },
    "kubevirt.io.api.core.v1.FeatureAPIC": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "endOfInterrupt": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.FeatureHyperv": {
      "type": "object",
      "properties": {
        "evmcs": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "frequencies": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "ipi": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "reenlightenment": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "relaxed": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "reset": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "runtime": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "spinlocks": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureSpinlocks"
        },
        "synic": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "synictimer": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.SyNICTimer"
        },
        "tlbflush": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "vapic": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "vendorid": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureVendorID"
        },
        "vpindex": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        }
      }
    },
    "kubevirt.io.api.core.v1.FeatureKVM": {
      "type": "object",
      "properties": {
        "hidden": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.FeatureSpinlocks": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "spinlocks": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "kubevirt.io.api.core.v1.FeatureState": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.FeatureVendorID": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "vendorid": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.Features": {
      "type": "object",
      "properties": {
        "acpi": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "apic": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureAPIC"
        },
        "hyperv": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureHyperv"
        },
        "kvm": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureKVM"
        },
        "pvspinlock": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "smm": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        }
      }
    },
    "kubevirt.io.api.core.v1.Filesystem": {
      "type": "object",
      "required": [
        "name",
        "virtiofs"
      ],
      "properties": {
        "name": {
          "type": "string",
          "default": ""
        },
        "virtiofs": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FilesystemVirtiofs"
        }
      }
    },
    "kubevirt.io.api.core.v1.FilesystemVirtiofs": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.Firmware": {
      "type": "object",
      "properties": {
        "bootloader": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Bootloader"
        },
        "kernelBoot": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.KernelBoot"
        },
        "serial": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.FlavorMatcher": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.GPU": {
      "type": "object",
      "required": [
        "name",
        "deviceName"
      ],
      "properties": {
        "deviceName": {
          "type": "string",
          "default": ""
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "tag": {
          "type": "string"
        },
        "virtualGPUOptions": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VGPUOptions"
        }
      }
    },
    "kubevirt.io.api.core.v1.GuestAgentPing": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.HPETTimer": {
      "type": "object",
      "properties": {
        "present": {
          "type": "boolean"
        },
        "tickPolicy": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.HostDevice": {
      "type": "object",
      "required": [
        "name",
        "deviceName"
      ],
      "properties": {
        "deviceName": {
          "type": "string",
          "default": ""
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.HostDisk": {
      "type": "object",
      "required": [
        "path",
        "type"
      ],
      "properties": {
        "capacity": {
          "default": {},
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
        },
        "path": {
          "type": "string",
          "default": ""
        },
        "shared": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.HotplugVolumeSource": {
      "type": "object",
      "properties": {
        "dataVolume": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.DataVolumeSource"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource"
        }
      }
    },
    "kubevirt.io.api.core.v1.HotplugVolumeStatus": {
      "type": "object",
      "properties": {
        "attachPodName": {
          "type": "string"
        },
        "attachPodUID": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.Hugepages": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.HypervTimer": {
      "type": "object",
      "properties": {
        "present": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.I6300ESBWatchdog": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.Input": {
      "type": "object",
      "required": [
        "type",
        "name"
      ],
      "properties": {
        "bus": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "type": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.Interface": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "bootOrder": {
          "type": "integer",
          "format": "int32"
        },
        "bridge": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.InterfaceBridge"
        },
        "dhcpOptions": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.DHCPOptions"
        },
        "macAddress": {
          "type": "string"
        },
        "macvtap": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.InterfaceMacvtap"
        },
        "masquerade": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.InterfaceMasquerade"
        },
        "model": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "pciAddress": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.Port"
          }
        },
        "slirp": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.InterfaceSlirp"
        },
        "sriov": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.InterfaceSRIOV"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.InterfaceBridge": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.InterfaceMacvtap": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.InterfaceMasquerade": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.InterfaceSRIOV": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.InterfaceSlirp": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.KVMTimer": {
      "type": "object",
      "properties": {
        "present": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.KernelBoot": {
      "type": "object",
      "properties": {
        "container": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.KernelBootContainer"
        },
        "kernelArgs": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.KernelBootContainer": {
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        },
        "imagePullPolicy": {
          "type": "string",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never"
          ]
        },
        "imagePullSecret": {
          "type": "string"
        },
        "initrdPath": {
          "type": "string"
        },
        "kernelPath": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.LaunchSecurity": {
      "type": "object",
      "properties": {
        "sev": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.SEV"
        }
      }
    },
    "kubevirt.io.api.core.v1.LunTarget": {
      "type": "object",
      "properties": {
        "bus": {
          "type": "string"
        },
        "readonly": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.Machine": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.Memory": {
      "type": "object",
      "properties": {
        "guest": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
        },
        "hugepages": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Hugepages"
        }
      }
    },
    "kubevirt.io.api.core.v1.MemoryDumpVolumeSource": {
      "type": "object",
      "required": [
        "claimName"
      ],
      "properties": {
        "claimName": {
          "type": "string",
          "default": ""
        },
        "hotpluggable": {
          "type": "boolean"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.MigrationConfiguration": {
      "type": "object",
      "properties": {
        "allowAutoConverge": {
          "type": "boolean"
        },
        "allowPostCopy": {
          "type": "boolean"
        },
        "bandwidthPerMigration": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
        },
        "completionTimeoutPerGiB": {
          "type": "integer",
          "format": "int64"
        },
        "disableTLS": {
          "type": "boolean"
        },
        "network": {
          "type": "string"
        },
        "nodeDrainTaintKey": {
          "type": "string"
        },
        "parallelMigrationsPerCluster": {
          "type": "integer",
          "format": "int64"
        },
        "parallelOutboundMigrationsPerNode": {
          "type": "integer",
          "format": "int64"
        },
        "progressTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "unsafeMigrationOverride": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.MultusNetwork": {
      "type": "object",
      "required": [
        "networkName"
      ],
      "properties": {
        "default": {
          "type": "boolean"
        },
        "networkName": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.NUMA": {
      "type": "object",
      "properties": {
        "guestMappingPassthrough": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough"
        }
      }
    },
    "kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.Network": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "multus": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.MultusNetwork"
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "pod": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.PodNetwork"
        }
      }
    },
    "kubevirt.io.api.core.v1.PITTimer": {
      "type": "object",
      "properties": {
        "present": {
          "type": "boolean"
        },
        "tickPolicy": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.PersistentVolumeClaimInfo": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          },
          "x-kubernetes-list-type": "atomic"
        },
        "capacity": {
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "filesystemOverhead": {
          "type": "string"
        },
        "preallocated": {
          "type": "boolean"
        },
        "requests": {
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "volumeMode": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource": {
      "type": "object",
      "required": [
        "claimName"
      ],
      "properties": {
        "claimName": {
          "type": "string",
          "default": ""
        },
        "hotpluggable": {
          "type": "boolean"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.PodNetwork": {
      "type": "object",
      "properties": {
        "vmIPv6NetworkCIDR": {
          "type": "string"
        },
        "vmNetworkCIDR": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.Port": {
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "protocol": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.PreferenceMatcher": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.Probe": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/k8s.io.v1.ExecAction"
        },
        "failureThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "guestAgentPing": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.GuestAgentPing"
        },
        "httpGet": {
          "$ref": "#/definitions/k8s.io.v1.HTTPGetAction"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "tcpSocket": {
          "$ref": "#/definitions/k8s.io.v1.TCPSocketAction"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation": {
      "type": "object",
      "required": [
        "users"
      ],
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          },
          "x-kubernetes-list-type": "set"
        }
      }
    },
    "kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.RTCTimer": {
      "type": "object",
      "properties": {
        "present": {
          "type": "boolean"
        },
        "tickPolicy": {
          "type": "string"
        },
        "track": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.Realtime": {
      "type": "object",
      "properties": {
        "mask": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.RemoveVolumeOptions": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "dryRun": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          },
          "x-kubernetes-list-type": "atomic"
        },
        "name": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.ResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "overcommitGuestOverhead": {
          "type": "boolean"
        },
        "requests": {
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        }
      }
    },
    "kubevirt.io.api.core.v1.Rng": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.SEV": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential": {
      "type": "object",
      "required": [
        "source",
        "propagationMethod"
      ],
      "properties": {
        "propagationMethod": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod"
        },
        "source": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource"
        }
      }
    },
    "kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod": {
      "type": "object",
      "properties": {
        "configDrive": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation"
        },
        "qemuGuestAgent": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation"
        }
      }
    },
    "kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.AccessCredentialSecretSource"
        }
      }
    },
    "kubevirt.io.api.core.v1.SecretVolumeSource": {
      "type": "object",
      "properties": {
        "optional": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        },
        "volumeLabel": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.ServiceAccountVolumeSource": {
      "type": "object",
      "properties": {
        "serviceAccountName": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.SoundDevice": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "model": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.SyNICTimer": {
      "type": "object",
      "properties": {
        "direct": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.api.core.v1.SysprepSource": {
      "type": "object",
      "properties": {
        "configMap": {
          "$ref": "#/definitions/k8s.io.v1.LocalObjectReference"
        },
        "secret": {
          "$ref": "#/definitions/k8s.io.v1.LocalObjectReference"
        }
      }
    },
    "kubevirt.io.api.core.v1.TPMDevice": {
      "type": "object"
    },
    "kubevirt.io.api.core.v1.Timer": {
      "type": "object",
      "properties": {
        "hpet": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.HPETTimer"
        },
        "hyperv": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.HypervTimer"
        },
        "kvm": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.KVMTimer"
        },
        "pit": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.PITTimer"
        },
        "rtc": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.RTCTimer"
        }
      }
    },
    "kubevirt.io.api.core.v1.TopologyHints": {
      "type": "object",
      "properties": {
        "tscFrequency": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "kubevirt.io.api.core.v1.UserPasswordAccessCredential": {
      "type": "object",
      "required": [
        "source",
        "propagationMethod"
      ],
      "properties": {
        "propagationMethod": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod"
        },
        "source": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource"
        }
      }
    },
    "kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod": {
      "type": "object",
      "properties": {
        "qemuGuestAgent": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation"
        }
      }
    },
    "kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.AccessCredentialSecretSource"
        }
      }
    },
    "kubevirt.io.api.core.v1.VGPUDisplayOptions": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "ramFB": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FeatureState"
        }
      }
    },
    "kubevirt.io.api.core.v1.VGPUOptions": {
      "type": "object",
      "properties": {
        "display": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VGPUDisplayOptions"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachine": {
      "type": "object",
      "required": [
        "spec",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineStatus"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastProbeTime": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "lastTransitionTime": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "default": ""
        },
        "type": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstance": {
      "type": "object",
      "required": [
        "spec",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceStatus"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastProbeTime": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "lastTransitionTime": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "default": ""
        },
        "type": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceGuestOSInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "kernelRelease": {
          "type": "string"
        },
        "kernelVersion": {
          "type": "string"
        },
        "machine": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prettyName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "versionId": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceList": {
      "type": "object",
      "required": [
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstance"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceMigration": {
      "type": "object",
      "required": [
        "spec",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationStatus"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastProbeTime": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "lastTransitionTime": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "default": ""
        },
        "type": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList": {
      "type": "object",
      "required": [
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationSpec": {
      "type": "object",
      "properties": {
        "vmiName": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationState": {
      "type": "object",
      "properties": {
        "abortRequested": {
          "type": "boolean"
        },
        "abortStatus": {
          "type": "string"
        },
        "completed": {
          "type": "boolean"
        },
        "endTimestamp": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "failed": {
          "type": "boolean"
        },
        "migrationConfiguration": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.MigrationConfiguration"
        },
        "migrationPolicyName": {
          "type": "string"
        },
        "migrationUid": {
          "type": "string"
        },
        "mode": {
          "type": "string"
        },
        "sourceNode": {
          "type": "string"
        },
        "startTimestamp": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "targetAttachmentPodUID": {
          "type": "string"
        },
        "targetCPUSet": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "x-kubernetes-list-type": "atomic"
        },
        "targetDirectMigrationNodePorts": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "targetNode": {
          "type": "string"
        },
        "targetNodeAddress": {
          "type": "string"
        },
        "targetNodeDomainDetected": {
          "type": "boolean"
        },
        "targetNodeTopology": {
          "type": "string"
        },
        "targetPod": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationCondition"
          }
        },
        "phase": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceNetworkInterface": {
      "type": "object",
      "properties": {
        "infoSource": {
          "type": "string"
        },
        "interfaceName": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "ipAddresses": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "mac": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstancePhaseTransitionTimestamp": {
      "type": "object",
      "properties": {
        "phase": {
          "type": "string"
        },
        "phaseTransitionTimestamp": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.Time"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceSpec": {
      "type": "object",
      "required": [
        "domain"
      ],
      "properties": {
        "accessCredentials": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.AccessCredential"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "affinity": {
          "$ref": "#/definitions/k8s.io.v1.Affinity"
        },
        "dnsConfig": {
          "$ref": "#/definitions/k8s.io.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "type": "string",
          "enum": [
            "ClusterFirst",
            "ClusterFirstWithHostNet",
            "Default",
            "None"
          ]
        },
        "domain": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.DomainSpec"
        },
        "evictionStrategy": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "livenessProbe": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Probe"
        },
        "networks": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.Network"
          }
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "priorityClassName": {
          "type": "string"
        },
        "readinessProbe": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.Probe"
        },
        "schedulerName": {
          "type": "string"
        },
        "startStrategy": {
          "type": "string"
        },
        "subdomain": {
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/k8s.io.v1.Toleration"
          }
        },
        "volumes": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.Volume"
          }
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceStatus": {
      "type": "object",
      "properties": {
        "activePods": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceCondition"
          }
        },
        "evacuationNodeName": {
          "type": "string"
        },
        "fsFreezeStatus": {
          "type": "string"
        },
        "guestOSInfo": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceGuestOSInfo"
        },
        "interfaces": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceNetworkInterface"
          }
        },
        "launcherContainerImageVersion": {
          "type": "string"
        },
        "migrationMethod": {
          "type": "string"
        },
        "migrationState": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationState"
        },
        "migrationTransport": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "phaseTransitionTimestamps": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstancePhaseTransitionTimestamp"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "qosClass": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "runtimeUser": {
          "type": "integer",
          "format": "int64",
          "default": 0
        },
        "topologyHints": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.TopologyHints"
        },
        "virtualMachineRevisionName": {
          "type": "string"
        },
        "volumeStatus": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.VolumeStatus"
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceSpec"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineList": {
      "type": "object",
      "required": [
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachine"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineMemoryDumpRequest": {
      "type": "object",
      "required": [
        "claimName",
        "phase"
      ],
      "properties": {
        "claimName": {
          "type": "string",
          "default": ""
        },
        "endTimestamp": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "fileName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "phase": {
          "type": "string",
          "default": ""
        },
        "startTimestamp": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineSpec": {
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "dataVolumeTemplates": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.DataVolumeTemplateSpec"
          }
        },
        "flavor": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.FlavorMatcher"
        },
        "preference": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.PreferenceMatcher"
        },
        "runStrategy": {
          "type": "string"
        },
        "running": {
          "type": "boolean"
        },
        "template": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineStartFailure": {
      "type": "object",
      "properties": {
        "consecutiveFailCount": {
          "type": "integer",
          "format": "int32"
        },
        "lastFailedVMIUID": {
          "type": "string"
        },
        "retryAfterTimestamp": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineStateChangeRequest": {
      "type": "object",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "type": "string",
          "default": ""
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineCondition"
          }
        },
        "created": {
          "type": "boolean"
        },
        "memoryDumpRequest": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineMemoryDumpRequest"
        },
        "printableStatus": {
          "type": "string"
        },
        "ready": {
          "type": "boolean"
        },
        "restoreInProgress": {
          "type": "string"
        },
        "snapshotInProgress": {
          "type": "string"
        },
        "startFailure": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineStartFailure"
        },
        "stateChangeRequests": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineStateChangeRequest"
          }
        },
        "volumeRequests": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.VirtualMachineVolumeRequest"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "volumeSnapshotStatuses": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.api.core.v1.VolumeSnapshotStatus"
          }
        }
      }
    },
    "kubevirt.io.api.core.v1.VirtualMachineVolumeRequest": {
      "type": "object",
      "properties": {
        "addVolumeOptions": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.AddVolumeOptions"
        },
        "removeVolumeOptions": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.RemoveVolumeOptions"
        }
      }
    },
    "kubevirt.io.api.core.v1.Volume": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "cloudInitConfigDrive": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.CloudInitConfigDriveSource"
        },
        "cloudInitNoCloud": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.CloudInitNoCloudSource"
        },
        "configMap": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.ConfigMapVolumeSource"
        },
        "containerDisk": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.ContainerDiskSource"
        },
        "dataVolume": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.DataVolumeSource"
        },
        "downwardAPI": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.DownwardAPIVolumeSource"
        },
        "downwardMetrics": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.DownwardMetricsVolumeSource"
        },
        "emptyDisk": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.EmptyDiskSource"
        },
        "ephemeral": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.EphemeralVolumeSource"
        },
        "hostDisk": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.HostDisk"
        },
        "memoryDump": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.MemoryDumpVolumeSource"
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource"
        },
        "secret": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.SecretVolumeSource"
        },
        "serviceAccount": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.ServiceAccountVolumeSource"
        },
        "sysprep": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.SysprepSource"
        }
      }
    },
    "kubevirt.io.api.core.v1.VolumeSnapshotStatus": {
      "type": "object",
      "required": [
        "name",
        "enabled"
      ],
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.api.core.v1.VolumeStatus": {
      "type": "object",
      "required": [
        "name",
        "target"
      ],
      "properties": {
        "hotplugVolume": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.HotplugVolumeStatus"
        },
        "memoryDumpVolume": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.DomainMemoryDumpInfo"
        },
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "persistentVolumeClaimInfo": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.PersistentVolumeClaimInfo"
        },
        "phase": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "target": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.api.core.v1.Watchdog": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "i6300esb": {
          "$ref": "#/definitions/kubevirt.io.api.core.v1.I6300ESBWatchdog"
        },
        "name": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage": {
      "type": "object"
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint": {
      "type": "object",
      "required": [
        "previous",
        "current"
      ],
      "properties": {
        "current": {
          "type": "string",
          "default": ""
        },
        "previous": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource": {
      "type": "object",
      "properties": {
        "blank": {
          "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage"
        },
        "http": {
          "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP"
        },
        "imageio": {
          "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO"
        },
        "pvc": {
          "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC"
        },
        "registry": {
          "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry"
        },
        "s3": {
          "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3"
        },
        "upload": {
          "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload"
        },
        "vddk": {
          "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK"
        }
      }
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "certConfigMap": {
          "type": "string"
        },
        "extraHeaders": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "secretExtraHeaders": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "secretRef": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO": {
      "type": "object",
      "required": [
        "url",
        "diskId"
      ],
      "properties": {
        "certConfigMap": {
          "type": "string"
        },
        "diskId": {
          "type": "string",
          "default": ""
        },
        "secretRef": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC": {
      "type": "object",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "default": ""
        },
        "namespace": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef": {
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "kind": {
          "type": "string",
          "default": ""
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry": {
      "type": "object",
      "properties": {
        "certConfigMap": {
          "type": "string"
        },
        "imageStream": {
          "type": "string"
        },
        "pullMethod": {
          "type": "string"
        },
        "secretRef": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "certConfigMap": {
          "type": "string"
        },
        "secretRef": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "default": ""
        }
      }
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload": {
      "type": "object"
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK": {
      "type": "object",
      "properties": {
        "backingFile": {
          "type": "string"
        },
        "initImageURL": {
          "type": "string"
        },
        "secretRef": {
          "type": "string"
        },
        "thumbprint": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec": {
      "type": "object",
      "properties": {
        "checkpoints": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint"
          }
        },
        "contentType": {
          "type": "string"
        },
        "finalCheckpoint": {
          "type": "boolean"
        },
        "preallocation": {
          "type": "boolean"
        },
        "priorityClassName": {
          "type": "string"
        },
        "pvc": {
          "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimSpec"
        },
        "source": {
          "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource"
        },
        "sourceRef": {
          "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef"
        },
        "storage": {
          "$ref": "#/definitions/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec"
        }
      }
    },
    "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "dataSource": {
          "$ref": "#/definitions/k8s.io.v1.TypedLocalObjectReference"
        },
        "resources": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ResourceRequirements"
        },
        "selector": {
          "$ref": "#/definitions/k8s.io.v1.LabelSelector"
        },
        "storageClassName": {
          "type": "string"
        },
        "volumeMode": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      }
    },
    "network.harvesterhci.io.v1beta1.ClusterNetwork": {
      "type": "object",
      "required": [
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/network.harvesterhci.io.v1beta1.ClusterNetworkStatus"
        }
      }
    },
    "network.harvesterhci.io.v1beta1.ClusterNetworkList": {
      "type": "object",
      "required": [
        "metadata",
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/network.harvesterhci.io.v1beta1.ClusterNetwork"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "network.harvesterhci.io.v1beta1.ClusterNetworkStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/network.harvesterhci.io.v1beta1.Condition"
          }
        }
      }
    },
    "network.harvesterhci.io.v1beta1.Condition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "default": ""
        },
        "type": {
          "type": "string",
          "default": ""
        }
      }
    },
    "network.harvesterhci.io.v1beta1.LinkStatus": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "mac": {
          "type": "string"
        },
        "masterIndex": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "promiscuous": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "network.harvesterhci.io.v1beta1.NetworkInterface": {
      "type": "object",
      "required": [
        "index",
        "name",
        "type",
        "state"
      ],
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "masterIndex": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "default": ""
        },
        "state": {
          "type": "string",
          "default": ""
        },
        "type": {
          "type": "string",
          "default": ""
        },
        "usedByManagementNetwork": {
          "type": "boolean"
        },
        "usedByVlanNetwork": {
          "type": "boolean"
        }
      }
    },
    "network.harvesterhci.io.v1beta1.NodeNetwork": {
      "type": "object",
      "required": [
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetworkSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetworkStatus"
        }
      }
    },
    "network.harvesterhci.io.v1beta1.NodeNetworkList": {
      "type": "object",
      "required": [
        "metadata",
        "items",
        "kind",
        "apiVersion"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NodeNetwork"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "network.harvesterhci.io.v1beta1.NodeNetworkSpec": {
      "type": "object",
      "required": [
        "nodeName"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "nic": {
          "type": "string"
        },
        "nodeName": {
          "type": "string",
          "default": ""
        },
        "type": {
          "type": "string"
        }
      }
    },
    "network.harvesterhci.io.v1beta1.NodeNetworkStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/network.harvesterhci.io.v1beta1.Condition"
          }
        },
        "networkIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "networkLinkStatus": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/network.harvesterhci.io.v1beta1.LinkStatus"
          }
        },
        "nics": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/network.harvesterhci.io.v1beta1.NetworkInterface"
          }
        }
      }
    }
  }
}