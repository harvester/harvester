{
  "openapi": "3.0.0",
  "info": {
    "title": "Harvester APIs",
    "version": "v1beta1"
  },
  "paths": {
    "/api/v1/namespaces/{namespace}/persistentvolumeclaims": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "summary": "List Namespaced Persistent Volume Claims",
        "description": "Get a list of PersistentVolumeClaim objects in a namespace.",
        "operationId": "listNamespacedPersistentVolumeClaim",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaimList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaimList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaimList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Volumes"
        ],
        "summary": "Create a Namespaced Persistent Volume Claim",
        "description": "Create a PersistentVolumeClaim object.",
        "operationId": "createNamespacedPersistentVolumeClaim",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "summary": "Read a Namespaced Persistent Volume Claim",
        "description": "Get a PersistentVolumeClaim object.",
        "operationId": "readNamespacedPersistentVolumeClaim",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Volumes"
        ],
        "summary": "Replace a Namespaced Persistent Volume Claim",
        "description": "Update a PersistentVolumeClaim object.",
        "operationId": "replaceNamespacedPersistentVolumeClaim",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Volumes"
        ],
        "summary": "Delete a Namespaced Persistent Volume Claim",
        "description": "Delete a PersistentVolumeClaim object.",
        "operationId": "deleteNamespacedPersistentVolumeClaim",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Volumes"
        ],
        "summary": "Patch a Namespaced Persistent Volume Claim",
        "description": "Patch a PersistentVolumeClaim object.",
        "operationId": "patchNamespacedPersistentVolumeClaim",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/api/v1/persistentvolumeclaims": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "summary": "List Persistent Volume Claims For All Namespaces",
        "description": "Get a list of all PersistentVolumeClaim objects.",
        "operationId": "listPersistentVolumeClaimForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaimList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaimList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaimList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/keypairs": {
      "get": {
        "tags": [
          "SSH Keys"
        ],
        "summary": "List Key Pairs For All Namespaces",
        "description": "Get a list of all KeyPair objects.",
        "operationId": "listKeyPairForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPairList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPairList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPairList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/keypairs": {
      "get": {
        "tags": [
          "SSH Keys"
        ],
        "summary": "List Namespaced Key Pairs",
        "description": "Get a list of KeyPair objects in a namespace.",
        "operationId": "listNamespacedKeyPair",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPairList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPairList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPairList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SSH Keys"
        ],
        "summary": "Create a Namespaced Key Pair",
        "description": "Create a KeyPair object.",
        "operationId": "createNamespacedKeyPair",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/keypairs/{name}": {
      "get": {
        "tags": [
          "SSH Keys"
        ],
        "summary": "Read a Namespaced Key Pair",
        "description": "Get a KeyPair object.",
        "operationId": "readNamespacedKeyPair",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SSH Keys"
        ],
        "summary": "Replace a Namespaced Key Pair",
        "description": "Update a KeyPair object.",
        "operationId": "replaceNamespacedKeyPair",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SSH Keys"
        ],
        "summary": "Delete a Namespaced Key Pair",
        "description": "Delete a KeyPair object.",
        "operationId": "deleteNamespacedKeyPair",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SSH Keys"
        ],
        "summary": "Patch a Namespaced Key Pair",
        "description": "Patch a KeyPair object.",
        "operationId": "patchNamespacedKeyPair",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/supportbundles": {
      "get": {
        "tags": [
          "Support Bundles"
        ],
        "summary": "List Namespaced Support Bundles",
        "description": "Get a list of SupportBundle objects in a namespace.",
        "operationId": "listNamespacedSupportBundle",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Support Bundles"
        ],
        "summary": "Create a Namespaced Support Bundle",
        "description": "Create a SupportBundle object.",
        "operationId": "createNamespacedSupportBundle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/supportbundles/{name}": {
      "get": {
        "tags": [
          "Support Bundles"
        ],
        "summary": "Read a Namespaced Support Bundle",
        "description": "Get a SupportBundle object.",
        "operationId": "readNamespacedSupportBundle",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Support Bundles"
        ],
        "summary": "Replace a Namespaced Support Bundle",
        "description": "Update a SupportBundle object.",
        "operationId": "replaceNamespacedSupportBundle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Support Bundles"
        ],
        "summary": "Delete a Namespaced Support Bundle",
        "description": "Delete a SupportBundle object.",
        "operationId": "deleteNamespacedSupportBundle",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Support Bundles"
        ],
        "summary": "Patch a Namespaced Support Bundle",
        "description": "Patch a SupportBundle object.",
        "operationId": "patchNamespacedSupportBundle",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/upgrades": {
      "get": {
        "tags": [
          "Upgrades"
        ],
        "summary": "List Namespaced Upgrades",
        "description": "Get a list of Upgrade objects in a namespace.",
        "operationId": "listNamespacedUpgrade",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.UpgradeList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.UpgradeList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.UpgradeList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Upgrades"
        ],
        "summary": "Create a Namespaced Upgrade",
        "description": "Create a Upgrade object.",
        "operationId": "createNamespacedUpgrade",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/upgrades/{name}": {
      "get": {
        "tags": [
          "Upgrades"
        ],
        "summary": "Read a Namespaced Upgrade",
        "description": "Get a Upgrade object.",
        "operationId": "readNamespacedUpgrade",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Upgrades"
        ],
        "summary": "Replace a Namespaced Upgrade",
        "description": "Update a Upgrade object.",
        "operationId": "replaceNamespacedUpgrade",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Upgrades"
        ],
        "summary": "Delete a Namespaced Upgrade",
        "description": "Delete a Upgrade object.",
        "operationId": "deleteNamespacedUpgrade",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Upgrades"
        ],
        "summary": "Patch a Namespaced Upgrade",
        "description": "Patch a Upgrade object.",
        "operationId": "patchNamespacedUpgrade",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinebackups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "List Namespaced Virtual Machine Backups",
        "description": "Get a list of VirtualMachineBackup objects in a namespace.",
        "operationId": "listNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Backups"
        ],
        "summary": "Create a Namespaced Virtual Machine Backup",
        "description": "Create a VirtualMachineBackup object.",
        "operationId": "createNamespacedVirtualMachineBackup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinebackups/{name}": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "Read a Namespaced Virtual Machine Backup",
        "description": "Get a VirtualMachineBackup object.",
        "operationId": "readNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Backups"
        ],
        "summary": "Replace a Namespaced Virtual Machine Backup",
        "description": "Update a VirtualMachineBackup object.",
        "operationId": "replaceNamespacedVirtualMachineBackup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Backups"
        ],
        "summary": "Delete a Namespaced Virtual Machine Backup",
        "description": "Delete a VirtualMachineBackup object.",
        "operationId": "deleteNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Backups"
        ],
        "summary": "Patch a Namespaced Virtual Machine Backup",
        "description": "Patch a VirtualMachineBackup object.",
        "operationId": "patchNamespacedVirtualMachineBackup",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachineimages": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "List Namespaced Virtual Machine Images",
        "description": "Get a list of VirtualMachineImage objects in a namespace.",
        "operationId": "listNamespacedVirtualMachineImage",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Images"
        ],
        "summary": "Create a Namespaced Virtual Machine Image",
        "description": "Create a VirtualMachineImage object.",
        "operationId": "createNamespacedVirtualMachineImage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachineimages/{name}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Read a Namespaced Virtual Machine Image",
        "description": "Get a VirtualMachineImage object.",
        "operationId": "readNamespacedVirtualMachineImage",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Images"
        ],
        "summary": "Replace a Namespaced Virtual Machine Image",
        "description": "Update a VirtualMachineImage object.",
        "operationId": "replaceNamespacedVirtualMachineImage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Images"
        ],
        "summary": "Delete a Namespaced Virtual Machine Image",
        "description": "Delete a VirtualMachineImage object.",
        "operationId": "deleteNamespacedVirtualMachineImage",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Images"
        ],
        "summary": "Patch a Namespaced Virtual Machine Image",
        "description": "Patch a VirtualMachineImage object.",
        "operationId": "patchNamespacedVirtualMachineImage",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinerestores": {
      "get": {
        "tags": [
          "Restores"
        ],
        "summary": "List Namespaced Virtual Machine Restores",
        "description": "Get a list of VirtualMachineRestore objects in a namespace.",
        "operationId": "listNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Restores"
        ],
        "summary": "Create a Namespaced Virtual Machine Restore",
        "description": "Create a VirtualMachineRestore object.",
        "operationId": "createNamespacedVirtualMachineRestore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinerestores/{name}": {
      "get": {
        "tags": [
          "Restores"
        ],
        "summary": "Read a Namespaced Virtual Machine Restore",
        "description": "Get a VirtualMachineRestore object.",
        "operationId": "readNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Restores"
        ],
        "summary": "Replace a Namespaced Virtual Machine Restore",
        "description": "Update a VirtualMachineRestore object.",
        "operationId": "replaceNamespacedVirtualMachineRestore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Restores"
        ],
        "summary": "Delete a Namespaced Virtual Machine Restore",
        "description": "Delete a VirtualMachineRestore object.",
        "operationId": "deleteNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Restores"
        ],
        "summary": "Patch a Namespaced Virtual Machine Restore",
        "description": "Patch a VirtualMachineRestore object.",
        "operationId": "patchNamespacedVirtualMachineRestore",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinetemplates": {
      "get": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "List Namespaced Virtual Machine Templates",
        "description": "Get a list of VirtualMachineTemplate objects in a namespace.",
        "operationId": "listNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Create a Namespaced Virtual Machine Template",
        "description": "Create a VirtualMachineTemplate object.",
        "operationId": "createNamespacedVirtualMachineTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinetemplates/{name}": {
      "get": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Read a Namespaced Virtual Machine Template",
        "description": "Get a VirtualMachineTemplate object.",
        "operationId": "readNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Replace a Namespaced Virtual Machine Template",
        "description": "Update a VirtualMachineTemplate object.",
        "operationId": "replaceNamespacedVirtualMachineTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Delete a Namespaced Virtual Machine Template",
        "description": "Delete a VirtualMachineTemplate object.",
        "operationId": "deleteNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Patch a Namespaced Virtual Machine Template",
        "description": "Patch a VirtualMachineTemplate object.",
        "operationId": "patchNamespacedVirtualMachineTemplate",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinetemplateversions": {
      "get": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "List Namespaced Virtual Machine Template Versions",
        "description": "Get a list of VirtualMachineTemplateVersion objects in a namespace.",
        "operationId": "listNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Create a Namespaced Virtual Machine Template Version",
        "description": "Create a VirtualMachineTemplateVersion object.",
        "operationId": "createNamespacedVirtualMachineTemplateVersion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinetemplateversions/{name}": {
      "get": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Read a Namespaced Virtual Machine Template Version",
        "description": "Get a VirtualMachineTemplateVersion object.",
        "operationId": "readNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Replace a Namespaced Virtual Machine Template Version",
        "description": "Update a VirtualMachineTemplateVersion object.",
        "operationId": "replaceNamespacedVirtualMachineTemplateVersion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Delete a Namespaced Virtual Machine Template Version",
        "description": "Delete a VirtualMachineTemplateVersion object.",
        "operationId": "deleteNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "Patch a Namespaced Virtual Machine Template Version",
        "description": "Patch a VirtualMachineTemplateVersion object.",
        "operationId": "patchNamespacedVirtualMachineTemplateVersion",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/supportbundles": {
      "get": {
        "tags": [
          "Support Bundles"
        ],
        "summary": "List Support Bundles For All Namespaces",
        "description": "Get a list of all SupportBundle objects.",
        "operationId": "listSupportBundleForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/upgrades": {
      "get": {
        "tags": [
          "Upgrades"
        ],
        "summary": "List Upgrades For All Namespaces",
        "description": "Get a list of all Upgrade objects.",
        "operationId": "listUpgradeForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.UpgradeList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.UpgradeList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.UpgradeList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinebackups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "List Virtual Machine Backups For All Namespaces",
        "description": "Get a list of all VirtualMachineBackup objects.",
        "operationId": "listVirtualMachineBackupForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachineimages": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "List Virtual Machine Images For All Namespaces",
        "description": "Get a list of all VirtualMachineImage objects.",
        "operationId": "listVirtualMachineImageForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinerestores": {
      "get": {
        "tags": [
          "Restores"
        ],
        "summary": "List Virtual Machine Restores For All Namespaces",
        "description": "Get a list of all VirtualMachineRestore objects.",
        "operationId": "listVirtualMachineRestoreForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinetemplates": {
      "get": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "List Virtual Machine Templates For All Namespaces",
        "description": "Get a list of all VirtualMachineTemplate objects.",
        "operationId": "listVirtualMachineTemplateForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinetemplateversions": {
      "get": {
        "tags": [
          "Virtual Machine Templates"
        ],
        "summary": "List Virtual Machine Template Versions For All Namespaces",
        "description": "Get a list of all VirtualMachineTemplateVersion objects.",
        "operationId": "listVirtualMachineTemplateVersionForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/k8s.cni.cncf.io/v1/namespaces/{namespace}/network-attachment-definitions": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "List Namespaced Network Attachment Definitions",
        "description": "Get a list of NetworkAttachmentDefinition objects in a namespace.",
        "operationId": "listNamespacedNetworkAttachmentDefinition",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Networks"
        ],
        "summary": "Create a Namespaced Network Attachment Definition",
        "description": "Create a NetworkAttachmentDefinition object.",
        "operationId": "createNamespacedNetworkAttachmentDefinition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/k8s.cni.cncf.io/v1/namespaces/{namespace}/network-attachment-definitions/{name}": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "Read a Namespaced Network Attachment Definition",
        "description": "Get a NetworkAttachmentDefinition object.",
        "operationId": "readNamespacedNetworkAttachmentDefinition",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Networks"
        ],
        "summary": "Replace a Namespaced Network Attachment Definition",
        "description": "Update a NetworkAttachmentDefinition object.",
        "operationId": "replaceNamespacedNetworkAttachmentDefinition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Networks"
        ],
        "summary": "Delete a Namespaced Network Attachment Definition",
        "description": "Delete a NetworkAttachmentDefinition object.",
        "operationId": "deleteNamespacedNetworkAttachmentDefinition",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Networks"
        ],
        "summary": "Patch a Namespaced Network Attachment Definition",
        "description": "Patch a NetworkAttachmentDefinition object.",
        "operationId": "patchNamespacedNetworkAttachmentDefinition",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/k8s.cni.cncf.io/v1/network-attachment-definitions": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "List Network Attachment Definitions For All Namespaces",
        "description": "Get a list of all NetworkAttachmentDefinition objects.",
        "operationId": "listNetworkAttachmentDefinitionForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstancemigrations": {
      "get": {
        "tags": [
          "Migrations"
        ],
        "summary": "List Namespaced Virtual Machine Instance Migrations",
        "description": "Get a list of VirtualMachineInstanceMigration objects in a namespace.",
        "operationId": "listNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Migrations"
        ],
        "summary": "Create a Namespaced Virtual Machine Instance Migration",
        "description": "Create a VirtualMachineInstanceMigration object.",
        "operationId": "createNamespacedVirtualMachineInstanceMigration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstancemigrations/{name}": {
      "get": {
        "tags": [
          "Migrations"
        ],
        "summary": "Read a Namespaced Virtual Machine Instance Migration",
        "description": "Get a VirtualMachineInstanceMigration object.",
        "operationId": "readNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Migrations"
        ],
        "summary": "Replace a Namespaced Virtual Machine Instance Migration",
        "description": "Update a VirtualMachineInstanceMigration object.",
        "operationId": "replaceNamespacedVirtualMachineInstanceMigration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Migrations"
        ],
        "summary": "Delete a Namespaced Virtual Machine Instance Migration",
        "description": "Delete a VirtualMachineInstanceMigration object.",
        "operationId": "deleteNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Migrations"
        ],
        "summary": "Patch a Namespaced Virtual Machine Instance Migration",
        "description": "Patch a VirtualMachineInstanceMigration object.",
        "operationId": "patchNamespacedVirtualMachineInstanceMigration",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List Namespaced Virtual Machine Instances",
        "description": "Get a list of VirtualMachineInstance objects in a namespace.",
        "operationId": "listNamespacedVirtualMachineInstance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Read a Namespaced Virtual Machine Instance",
        "description": "Get a VirtualMachineInstance object.",
        "operationId": "readNamespacedVirtualMachineInstance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstance"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstance"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstance"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "exact",
          "in": "query",
          "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "export",
          "in": "query",
          "description": "Should this value be exported. Export strips fields that a user can not specify.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachines": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List Namespaced Virtual Machines",
        "description": "Get a list of VirtualMachine objects in a namespace.",
        "operationId": "listNamespacedVirtualMachine",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Create a Namespaced Virtual Machine",
        "description": "Create a VirtualMachine object.",
        "operationId": "createNamespacedVirtualMachine",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Read a Namespaced Virtual Machine",
        "description": "Get a VirtualMachine object.",
        "operationId": "readNamespacedVirtualMachine",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Replace a Namespaced Virtual Machine",
        "description": "Update a VirtualMachine object.",
        "operationId": "replaceNamespacedVirtualMachine",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Delete a Namespaced Virtual Machine",
        "description": "Delete a VirtualMachine object.",
        "operationId": "deleteNamespacedVirtualMachine",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Patch a Namespaced Virtual Machine",
        "description": "Patch a VirtualMachine object.",
        "operationId": "patchNamespacedVirtualMachine",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/kubevirt.io/v1/virtualmachineinstancemigrations": {
      "get": {
        "tags": [
          "Migrations"
        ],
        "summary": "List Virtual Machine Instance Migrations For All Namespaces",
        "description": "Get a list of all VirtualMachineInstanceMigration objects.",
        "operationId": "listVirtualMachineInstanceMigrationForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/kubevirt.io/v1/virtualmachineinstances": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List Virtual Machine Instances For All Namespaces",
        "description": "Get a list of all VirtualMachineInstance objects.",
        "operationId": "listVirtualMachineInstanceForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/kubevirt.io/v1/virtualmachines": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List Virtual Machines For All Namespaces",
        "description": "Get a list of all VirtualMachine objects.",
        "operationId": "listVirtualMachineForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeUninitialized",
          "in": "query",
          "description": "If true, partially initialized resources are included in the response.",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "TimeoutSeconds for the list/watch call.",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean"
          }
        }
      ]
    },
    "/apis/network.harvesterhci.io/v1beta1/clusternetworks": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "List Namespaced Cluster Networks",
        "description": "Get a list of ClusterNetwork objects in a namespace.",
        "operationId": "listNamespacedClusterNetwork",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "namespace",
            "in": "path",
            "description": "Object name and auth scope, such as for teams and projects",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "[a-z0-9][a-z0-9\\-]*"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetworkList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetworkList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetworkList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Networks"
        ],
        "summary": "Create a Namespaced Cluster Network",
        "description": "Create a ClusterNetwork object.",
        "operationId": "createNamespacedClusterNetwork",
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "description": "Object name and auth scope, such as for teams and projects",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "[a-z0-9][a-z0-9\\-]*"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/apis/network.harvesterhci.io/v1beta1/clusternetworks/{name}": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "Read a Namespaced Cluster Network",
        "description": "Get a ClusterNetwork object.",
        "operationId": "readNamespacedClusterNetwork",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Networks"
        ],
        "summary": "Replace a Namespaced Cluster Network",
        "description": "Update a ClusterNetwork object.",
        "operationId": "replaceNamespacedClusterNetwork",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Networks"
        ],
        "summary": "Delete a Namespaced Cluster Network",
        "description": "Delete a ClusterNetwork object.",
        "operationId": "deleteNamespacedClusterNetwork",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Networks"
        ],
        "summary": "Patch a Namespaced Cluster Network",
        "description": "Patch a ClusterNetwork object.",
        "operationId": "patchNamespacedClusterNetwork",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    },
    "/apis/network.harvesterhci.io/v1beta1/nodenetworks": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "List Namespaced Node Networks",
        "description": "Get a list of NodeNetwork objects in a namespace.",
        "operationId": "listNamespacedNodeNetwork",
        "parameters": [
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUninitialized",
            "in": "query",
            "description": "If true, partially initialized resources are included in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "namespace",
            "in": "path",
            "description": "Object name and auth scope, such as for teams and projects",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "[a-z0-9][a-z0-9\\-]*"
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "TimeoutSeconds for the list/watch call.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Networks"
        ],
        "summary": "Create a Namespaced Node Network",
        "description": "Create a NodeNetwork object.",
        "operationId": "createNamespacedNodeNetwork",
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "description": "Object name and auth scope, such as for teams and projects",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "[a-z0-9][a-z0-9\\-]*"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/apis/network.harvesterhci.io/v1beta1/nodenetworks/{name}": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "Read a Namespaced Node Network",
        "description": "Get a NodeNetwork object.",
        "operationId": "readNamespacedNodeNetwork",
        "parameters": [
          {
            "name": "exact",
            "in": "query",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Networks"
        ],
        "summary": "Replace a Namespaced Node Network",
        "description": "Update a NodeNetwork object.",
        "operationId": "replaceNamespacedNodeNetwork",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              }
            }
          },
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Networks"
        ],
        "summary": "Delete a Namespaced Node Network",
        "description": "Delete a NodeNetwork object.",
        "operationId": "deleteNamespacedNodeNetwork",
        "parameters": [
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.DeleteOptions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/k8s.io.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Networks"
        ],
        "summary": "Patch a Namespaced Node Network",
        "description": "Patch a NodeNetwork object.",
        "operationId": "patchNamespacedNodeNetwork",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/k8s.io.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "Name of the resource",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "Object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9][a-z0-9\\-]*"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "harvesterhci.io.v1beta1.BackupTarget": {
        "type": "object",
        "properties": {
          "bucketName": {
            "type": "string"
          },
          "bucketRegion": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          }
        }
      },
      "harvesterhci.io.v1beta1.Condition": {
        "type": "object",
        "required": [
          "status",
          "type"
        ],
        "properties": {
          "lastTransitionTime": {
            "type": "string"
          },
          "lastUpdateTime": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "default": ""
          },
          "type": {
            "type": "string",
            "default": ""
          }
        }
      },
      "harvesterhci.io.v1beta1.Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "time": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          }
        }
      },
      "harvesterhci.io.v1beta1.KeyPair": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPairSpec"
              }
            ]
          },
          "status": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPairStatus"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.KeyPairList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind",
          "metadata"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.KeyPair"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.KeyPairSpec": {
        "type": "object",
        "required": [
          "publicKey"
        ],
        "properties": {
          "publicKey": {
            "type": "string",
            "default": ""
          }
        }
      },
      "harvesterhci.io.v1beta1.KeyPairStatus": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Condition"
                }
              ]
            }
          },
          "fingerPrint": {
            "type": "string"
          }
        }
      },
      "harvesterhci.io.v1beta1.NodeUpgradeStatus": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec": {
        "type": "object",
        "properties": {
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaimSpec"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.SecretBackup": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "byte"
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      "harvesterhci.io.v1beta1.SupportBundle": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundleSpec"
              }
            ]
          },
          "status": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundleStatus"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.SupportBundleList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind",
          "metadata"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SupportBundle"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.SupportBundleSpec": {
        "type": "object",
        "required": [
          "description"
        ],
        "properties": {
          "description": {
            "type": "string",
            "default": ""
          },
          "issueURL": {
            "type": "string",
            "default": ""
          }
        }
      },
      "harvesterhci.io.v1beta1.SupportBundleStatus": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Condition"
                }
              ]
            }
          },
          "filename": {
            "type": "string"
          },
          "filesize": {
            "type": "integer",
            "format": "int64"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "harvesterhci.io.v1beta1.Upgrade": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.UpgradeSpec"
              }
            ]
          },
          "status": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.UpgradeStatus"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.UpgradeList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind",
          "metadata"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Upgrade"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.UpgradeSpec": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "default": ""
          },
          "logEnabled": {
            "type": "boolean",
            "default": false
          },
          "version": {
            "type": "string",
            "default": ""
          }
        }
      },
      "harvesterhci.io.v1beta1.UpgradeStatus": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Condition"
                }
              ]
            }
          },
          "imageID": {
            "type": "string"
          },
          "nodeStatuses": {
            "type": "object",
            "additionalProperties": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.NodeUpgradeStatus"
                }
              ]
            }
          },
          "previousVersion": {
            "type": "string"
          },
          "repoInfo": {
            "type": "string"
          },
          "singleNode": {
            "type": "string"
          },
          "upgradeLog": {
            "type": "string"
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineBackup": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupSpec"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupStatus"
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineBackupList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind",
          "metadata"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineBackupSpec": {
        "type": "object",
        "required": [
          "source"
        ],
        "properties": {
          "source": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.TypedLocalObjectReference"
              }
            ]
          },
          "type": {
            "type": "string"
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineBackupStatus": {
        "type": "object",
        "properties": {
          "backupTarget": {
            "$ref": "#/components/schemas/harvesterhci.io.v1beta1.BackupTarget"
          },
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Condition"
                }
              ]
            }
          },
          "creationTime": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          },
          "csiDriverVolumeSnapshotClassNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "default": ""
            }
          },
          "error": {
            "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Error"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "readyToUse": {
            "type": "boolean"
          },
          "secretBackups": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.SecretBackup"
                }
              ]
            }
          },
          "source": {
            "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineSourceSpec"
          },
          "sourceUID": {
            "type": "string"
          },
          "volumeBackups": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VolumeBackup"
                }
              ]
            }
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineImage": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageSpec"
              }
            ]
          },
          "status": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageStatus"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineImageList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind",
          "metadata"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineImageSpec": {
        "type": "object",
        "required": [
          "displayName",
          "sourceType"
        ],
        "properties": {
          "checksum": {
            "type": "string",
            "default": ""
          },
          "description": {
            "type": "string"
          },
          "displayName": {
            "type": "string",
            "default": ""
          },
          "pvcName": {
            "type": "string",
            "default": ""
          },
          "pvcNamespace": {
            "type": "string",
            "default": ""
          },
          "retry": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "sourceType": {
            "type": "string",
            "default": "",
            "enum": [
              "download",
              "export-from-volume",
              "upload"
            ]
          },
          "storageClassParameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "default": ""
            }
          },
          "url": {
            "type": "string",
            "default": ""
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineImageStatus": {
        "type": "object",
        "properties": {
          "appliedUrl": {
            "type": "string"
          },
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Condition"
                }
              ]
            }
          },
          "failed": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "lastFailedTime": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "storageClassName": {
            "type": "string"
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineRestore": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreSpec"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreStatus"
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineRestoreList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind",
          "metadata"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineRestoreSpec": {
        "type": "object",
        "required": [
          "target",
          "virtualMachineBackupName",
          "virtualMachineBackupNamespace"
        ],
        "properties": {
          "deletionPolicy": {
            "type": "string"
          },
          "keepMacAddress": {
            "type": "boolean"
          },
          "newVM": {
            "type": "boolean"
          },
          "target": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.TypedLocalObjectReference"
              }
            ]
          },
          "virtualMachineBackupName": {
            "type": "string",
            "default": ""
          },
          "virtualMachineBackupNamespace": {
            "type": "string",
            "default": ""
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineRestoreStatus": {
        "type": "object",
        "properties": {
          "complete": {
            "type": "boolean"
          },
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Condition"
                }
              ]
            }
          },
          "deletedVolumes": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "restoreTime": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          },
          "restores": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VolumeRestore"
                }
              ]
            }
          },
          "targetUID": {
            "type": "string"
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineSourceSpec": {
        "type": "object",
        "properties": {
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineSpec"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineTemplate": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateSpec"
              }
            ]
          },
          "status": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateStatus"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineTemplateList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind",
          "metadata"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineTemplateSpec": {
        "type": "object",
        "properties": {
          "defaultVersionId": {
            "type": "string",
            "default": ""
          },
          "description": {
            "type": "string"
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineTemplateStatus": {
        "type": "object",
        "properties": {
          "defaultVersion": {
            "type": "integer",
            "format": "int32"
          },
          "latestVersion": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineTemplateVersion": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec"
              }
            ]
          },
          "status": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind",
          "metadata"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec": {
        "type": "object",
        "required": [
          "templateId"
        ],
        "properties": {
          "description": {
            "type": "string"
          },
          "imageId": {
            "type": "string"
          },
          "keyPairIds": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "templateId": {
            "type": "string",
            "default": ""
          },
          "vm": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineSourceSpec"
              }
            ]
          }
        }
      },
      "harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Condition"
                }
              ]
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "harvesterhci.io.v1beta1.VolumeBackup": {
        "type": "object",
        "required": [
          "csiDriverName",
          "persistentVolumeClaim",
          "volumeName"
        ],
        "properties": {
          "creationTime": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          },
          "csiDriverName": {
            "type": "string",
            "default": ""
          },
          "error": {
            "$ref": "#/components/schemas/harvesterhci.io.v1beta1.Error"
          },
          "longhornBackupName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "persistentVolumeClaim": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec"
              }
            ]
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "readyToUse": {
            "type": "boolean"
          },
          "volumeName": {
            "type": "string",
            "default": ""
          },
          "volumeSize": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "harvesterhci.io.v1beta1.VolumeRestore": {
        "type": "object",
        "properties": {
          "longhornEngineName": {
            "type": "string"
          },
          "persistentVolumeClaimSpec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec"
              }
            ]
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "volumeBackupName": {
            "type": "string"
          },
          "volumeName": {
            "type": "string"
          },
          "volumeSize": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "k8s.cni.cncf.io.v1.NetworkAttachmentDefinition": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionSpec"
              }
            ]
          }
        }
      },
      "k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind",
          "metadata"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionSpec": {
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "string",
            "default": ""
          }
        }
      },
      "k8s.io.apimachinery.pkg.api.resource.Quantity": {
        "type": "string"
      },
      "k8s.io.apimachinery.pkg.util.intstr.IntOrString": {
        "type": "string",
        "format": "int-or-string"
      },
      "k8s.io.v1.Affinity": {
        "type": "object",
        "properties": {
          "nodeAffinity": {
            "$ref": "#/components/schemas/k8s.io.v1.NodeAffinity"
          },
          "podAffinity": {
            "$ref": "#/components/schemas/k8s.io.v1.PodAffinity"
          },
          "podAntiAffinity": {
            "$ref": "#/components/schemas/k8s.io.v1.PodAntiAffinity"
          }
        }
      },
      "k8s.io.v1.DeleteOptions": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "dryRun": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "gracePeriodSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "kind": {
            "type": "string"
          },
          "orphanDependents": {
            "type": "boolean"
          },
          "preconditions": {
            "$ref": "#/components/schemas/k8s.io.v1.Preconditions"
          },
          "propagationPolicy": {
            "type": "string"
          }
        }
      },
      "k8s.io.v1.DownwardAPIVolumeFile": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "fieldRef": {
            "$ref": "#/components/schemas/k8s.io.v1.ObjectFieldSelector"
          },
          "mode": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string",
            "default": ""
          },
          "resourceFieldRef": {
            "$ref": "#/components/schemas/k8s.io.v1.ResourceFieldSelector"
          }
        }
      },
      "k8s.io.v1.ExecAction": {
        "type": "object",
        "properties": {
          "command": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          }
        }
      },
      "k8s.io.v1.FieldsV1": {
        "type": "object"
      },
      "k8s.io.v1.HTTPGetAction": {
        "type": "object",
        "required": [
          "port"
        ],
        "properties": {
          "host": {
            "type": "string"
          },
          "httpHeaders": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.HTTPHeader"
                }
              ]
            }
          },
          "path": {
            "type": "string"
          },
          "port": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.util.intstr.IntOrString"
              }
            ]
          },
          "scheme": {
            "type": "string",
            "enum": [
              "HTTP",
              "HTTPS"
            ]
          }
        }
      },
      "k8s.io.v1.HTTPHeader": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "default": ""
          },
          "value": {
            "type": "string",
            "default": ""
          }
        }
      },
      "k8s.io.v1.LabelSelector": {
        "type": "object",
        "properties": {
          "matchExpressions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.LabelSelectorRequirement"
                }
              ]
            }
          },
          "matchLabels": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "default": ""
            }
          }
        },
        "x-kubernetes-map-type": "atomic"
      },
      "k8s.io.v1.LabelSelectorRequirement": {
        "type": "object",
        "required": [
          "key",
          "operator"
        ],
        "properties": {
          "key": {
            "type": "string",
            "default": "",
            "x-kubernetes-patch-merge-key": "key",
            "x-kubernetes-patch-strategy": "merge"
          },
          "operator": {
            "type": "string",
            "default": ""
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          }
        }
      },
      "k8s.io.v1.ListMeta": {
        "type": "object",
        "properties": {
          "continue": {
            "type": "string"
          },
          "remainingItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "resourceVersion": {
            "type": "string"
          },
          "selfLink": {
            "type": "string"
          }
        }
      },
      "k8s.io.v1.LocalObjectReference": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "x-kubernetes-map-type": "atomic"
      },
      "k8s.io.v1.ManagedFieldsEntry": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "fieldsType": {
            "type": "string"
          },
          "fieldsV1": {
            "$ref": "#/components/schemas/k8s.io.v1.FieldsV1"
          },
          "manager": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "subresource": {
            "type": "string"
          },
          "time": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          }
        }
      },
      "k8s.io.v1.NodeAffinity": {
        "type": "object",
        "properties": {
          "preferredDuringSchedulingIgnoredDuringExecution": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.PreferredSchedulingTerm"
                }
              ]
            }
          },
          "requiredDuringSchedulingIgnoredDuringExecution": {
            "$ref": "#/components/schemas/k8s.io.v1.NodeSelector"
          }
        }
      },
      "k8s.io.v1.NodeSelector": {
        "type": "object",
        "required": [
          "nodeSelectorTerms"
        ],
        "properties": {
          "nodeSelectorTerms": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.NodeSelectorTerm"
                }
              ]
            }
          }
        },
        "x-kubernetes-map-type": "atomic"
      },
      "k8s.io.v1.NodeSelectorRequirement": {
        "type": "object",
        "required": [
          "key",
          "operator"
        ],
        "properties": {
          "key": {
            "type": "string",
            "default": ""
          },
          "operator": {
            "type": "string",
            "default": "",
            "enum": [
              "DoesNotExist",
              "Exists",
              "Gt",
              "In",
              "Lt",
              "NotIn"
            ]
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          }
        }
      },
      "k8s.io.v1.NodeSelectorTerm": {
        "type": "object",
        "properties": {
          "matchExpressions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.NodeSelectorRequirement"
                }
              ]
            }
          },
          "matchFields": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.NodeSelectorRequirement"
                }
              ]
            }
          }
        },
        "x-kubernetes-map-type": "atomic"
      },
      "k8s.io.v1.ObjectFieldSelector": {
        "type": "object",
        "required": [
          "fieldPath"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "fieldPath": {
            "type": "string",
            "default": ""
          }
        },
        "x-kubernetes-map-type": "atomic"
      },
      "k8s.io.v1.ObjectMeta": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          }
        }
      },
      "k8s.io.v1.OwnerReference": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "name",
          "uid"
        ],
        "properties": {
          "apiVersion": {
            "type": "string",
            "default": ""
          },
          "blockOwnerDeletion": {
            "type": "boolean"
          },
          "controller": {
            "type": "boolean"
          },
          "kind": {
            "type": "string",
            "default": ""
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "uid": {
            "type": "string",
            "default": ""
          }
        },
        "x-kubernetes-map-type": "atomic"
      },
      "k8s.io.v1.Patch": {
        "type": "object"
      },
      "k8s.io.v1.PersistentVolumeClaim": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaimSpec"
              }
            ]
          },
          "status": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaimStatus"
              }
            ]
          }
        }
      },
      "k8s.io.v1.PersistentVolumeClaimCondition": {
        "type": "object",
        "required": [
          "status",
          "type"
        ],
        "properties": {
          "lastProbeTime": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.Time"
              }
            ]
          },
          "lastTransitionTime": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.Time"
              }
            ]
          },
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "default": ""
          },
          "type": {
            "type": "string",
            "default": ""
          }
        }
      },
      "k8s.io.v1.PersistentVolumeClaimList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaim"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "k8s.io.v1.PersistentVolumeClaimSpec": {
        "type": "object",
        "properties": {
          "accessModes": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "dataSource": {
            "$ref": "#/components/schemas/k8s.io.v1.TypedLocalObjectReference"
          },
          "dataSourceRef": {
            "$ref": "#/components/schemas/k8s.io.v1.TypedObjectReference"
          },
          "resources": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ResourceRequirements"
              }
            ]
          },
          "selector": {
            "$ref": "#/components/schemas/k8s.io.v1.LabelSelector"
          },
          "storageClassName": {
            "type": "string"
          },
          "volumeMode": {
            "type": "string"
          },
          "volumeName": {
            "type": "string"
          }
        }
      },
      "k8s.io.v1.PersistentVolumeClaimStatus": {
        "type": "object",
        "properties": {
          "accessModes": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "allocatedResources": {
            "type": "object",
            "additionalProperties": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              ]
            }
          },
          "capacity": {
            "type": "object",
            "additionalProperties": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              ]
            }
          },
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaimCondition"
                }
              ]
            },
            "x-kubernetes-patch-merge-key": "type",
            "x-kubernetes-patch-strategy": "merge"
          },
          "phase": {
            "type": "string",
            "enum": [
              "Bound",
              "Lost",
              "Pending"
            ]
          },
          "resizeStatus": {
            "type": "string"
          }
        }
      },
      "k8s.io.v1.PersistentVolumeClaimVolumeSource": {
        "type": "object",
        "required": [
          "claimName"
        ],
        "properties": {
          "claimName": {
            "type": "string",
            "default": ""
          },
          "readOnly": {
            "type": "boolean"
          }
        }
      },
      "k8s.io.v1.PodAffinity": {
        "type": "object",
        "properties": {
          "preferredDuringSchedulingIgnoredDuringExecution": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.WeightedPodAffinityTerm"
                }
              ]
            }
          },
          "requiredDuringSchedulingIgnoredDuringExecution": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.PodAffinityTerm"
                }
              ]
            }
          }
        }
      },
      "k8s.io.v1.PodAffinityTerm": {
        "type": "object",
        "required": [
          "topologyKey"
        ],
        "properties": {
          "labelSelector": {
            "$ref": "#/components/schemas/k8s.io.v1.LabelSelector"
          },
          "namespaceSelector": {
            "$ref": "#/components/schemas/k8s.io.v1.LabelSelector"
          },
          "namespaces": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "topologyKey": {
            "type": "string",
            "default": ""
          }
        }
      },
      "k8s.io.v1.PodAntiAffinity": {
        "type": "object",
        "properties": {
          "preferredDuringSchedulingIgnoredDuringExecution": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.WeightedPodAffinityTerm"
                }
              ]
            }
          },
          "requiredDuringSchedulingIgnoredDuringExecution": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.PodAffinityTerm"
                }
              ]
            }
          }
        }
      },
      "k8s.io.v1.PodDNSConfig": {
        "type": "object",
        "properties": {
          "nameservers": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "options": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.PodDNSConfigOption"
                }
              ]
            }
          },
          "searches": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          }
        }
      },
      "k8s.io.v1.PodDNSConfigOption": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "k8s.io.v1.Preconditions": {
        "type": "object",
        "properties": {
          "resourceVersion": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "k8s.io.v1.PreferredSchedulingTerm": {
        "type": "object",
        "required": [
          "preference",
          "weight"
        ],
        "properties": {
          "preference": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.NodeSelectorTerm"
              }
            ]
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        }
      },
      "k8s.io.v1.ResourceClaim": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "default": ""
          }
        }
      },
      "k8s.io.v1.ResourceFieldSelector": {
        "type": "object",
        "required": [
          "resource"
        ],
        "properties": {
          "containerName": {
            "type": "string"
          },
          "divisor": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
              }
            ]
          },
          "resource": {
            "type": "string",
            "default": ""
          }
        },
        "x-kubernetes-map-type": "atomic"
      },
      "k8s.io.v1.ResourceRequirements": {
        "type": "object",
        "properties": {
          "claims": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.ResourceClaim"
                }
              ]
            },
            "x-kubernetes-list-map-keys": [
              "name"
            ],
            "x-kubernetes-list-type": "map"
          },
          "limits": {
            "type": "object",
            "additionalProperties": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              ]
            }
          },
          "requests": {
            "type": "object",
            "additionalProperties": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              ]
            }
          }
        }
      },
      "k8s.io.v1.Status": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "details": {
            "$ref": "#/components/schemas/k8s.io.v1.StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "k8s.io.v1.StatusCause": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "k8s.io.v1.StatusDetails": {
        "type": "object",
        "properties": {
          "causes": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.StatusCause"
                }
              ]
            }
          },
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "retryAfterSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "k8s.io.v1.TCPSocketAction": {
        "type": "object",
        "required": [
          "port"
        ],
        "properties": {
          "host": {
            "type": "string"
          },
          "port": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.util.intstr.IntOrString"
              }
            ]
          }
        }
      },
      "k8s.io.v1.Time": {
        "type": "string",
        "default": ""
      },
      "k8s.io.v1.Toleration": {
        "type": "object",
        "properties": {
          "effect": {
            "type": "string",
            "enum": [
              "NoExecute",
              "NoSchedule",
              "PreferNoSchedule"
            ]
          },
          "key": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "enum": [
              "Equal",
              "Exists"
            ]
          },
          "tolerationSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "k8s.io.v1.TopologySpreadConstraint": {
        "type": "object",
        "required": [
          "maxSkew",
          "topologyKey",
          "whenUnsatisfiable"
        ],
        "properties": {
          "labelSelector": {
            "$ref": "#/components/schemas/k8s.io.v1.LabelSelector"
          },
          "matchLabelKeys": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            },
            "x-kubernetes-list-type": "atomic"
          },
          "maxSkew": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "minDomains": {
            "type": "integer",
            "format": "int32"
          },
          "nodeAffinityPolicy": {
            "type": "string"
          },
          "nodeTaintsPolicy": {
            "type": "string"
          },
          "topologyKey": {
            "type": "string",
            "default": ""
          },
          "whenUnsatisfiable": {
            "type": "string",
            "default": "",
            "enum": [
              "DoNotSchedule",
              "ScheduleAnyway"
            ]
          }
        }
      },
      "k8s.io.v1.TypedLocalObjectReference": {
        "type": "object",
        "required": [
          "kind",
          "name"
        ],
        "properties": {
          "apiGroup": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "default": ""
          },
          "name": {
            "type": "string",
            "default": ""
          }
        },
        "x-kubernetes-map-type": "atomic"
      },
      "k8s.io.v1.TypedObjectReference": {
        "type": "object",
        "required": [
          "kind",
          "name"
        ],
        "properties": {
          "apiGroup": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "default": ""
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "namespace": {
            "type": "string"
          }
        }
      },
      "k8s.io.v1.WeightedPodAffinityTerm": {
        "type": "object",
        "required": [
          "podAffinityTerm",
          "weight"
        ],
        "properties": {
          "podAffinityTerm": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.PodAffinityTerm"
              }
            ]
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        }
      },
      "kubevirt.io.api.core.v1.AccessCredential": {
        "type": "object",
        "properties": {
          "sshPublicKey": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential"
          },
          "userPassword": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.UserPasswordAccessCredential"
          }
        }
      },
      "kubevirt.io.api.core.v1.AccessCredentialSecretSource": {
        "type": "object",
        "required": [
          "secretName"
        ],
        "properties": {
          "secretName": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.AddVolumeOptions": {
        "type": "object",
        "required": [
          "disk",
          "name",
          "volumeSource"
        ],
        "properties": {
          "disk": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Disk"
          },
          "dryRun": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            },
            "x-kubernetes-list-type": "atomic"
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "volumeSource": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.HotplugVolumeSource"
          }
        }
      },
      "kubevirt.io.api.core.v1.BIOS": {
        "type": "object",
        "properties": {
          "useSerial": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.BlockSize": {
        "type": "object",
        "properties": {
          "custom": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.CustomBlockSize"
          },
          "matchVolume": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          }
        }
      },
      "kubevirt.io.api.core.v1.Bootloader": {
        "type": "object",
        "properties": {
          "bios": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.BIOS"
          },
          "efi": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.EFI"
          }
        }
      },
      "kubevirt.io.api.core.v1.CDRomTarget": {
        "type": "object",
        "properties": {
          "bus": {
            "type": "string"
          },
          "readonly": {
            "type": "boolean"
          },
          "tray": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.CPU": {
        "type": "object",
        "properties": {
          "cores": {
            "type": "integer",
            "format": "int64"
          },
          "dedicatedCpuPlacement": {
            "type": "boolean"
          },
          "features": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.CPUFeature"
                }
              ]
            }
          },
          "isolateEmulatorThread": {
            "type": "boolean"
          },
          "maxSockets": {
            "type": "integer",
            "format": "int64"
          },
          "model": {
            "type": "string"
          },
          "numa": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.NUMA"
          },
          "realtime": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Realtime"
          },
          "sockets": {
            "type": "integer",
            "format": "int64"
          },
          "threads": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "kubevirt.io.api.core.v1.CPUFeature": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "default": ""
          },
          "policy": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.CPUTopology": {
        "type": "object",
        "properties": {
          "cores": {
            "type": "integer",
            "format": "int64"
          },
          "sockets": {
            "type": "integer",
            "format": "int64"
          },
          "threads": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "kubevirt.io.api.core.v1.Chassis": {
        "type": "object",
        "properties": {
          "asset": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "serial": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.ClientPassthroughDevices": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.Clock": {
        "type": "object",
        "properties": {
          "timer": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Timer"
          },
          "timezone": {
            "type": "string"
          },
          "utc": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.ClockOffsetUTC"
          }
        }
      },
      "kubevirt.io.api.core.v1.ClockOffsetUTC": {
        "type": "object",
        "properties": {
          "offsetSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "kubevirt.io.api.core.v1.CloudInitConfigDriveSource": {
        "type": "object",
        "properties": {
          "networkData": {
            "type": "string"
          },
          "networkDataBase64": {
            "type": "string"
          },
          "networkDataSecretRef": {
            "$ref": "#/components/schemas/k8s.io.v1.LocalObjectReference"
          },
          "secretRef": {
            "$ref": "#/components/schemas/k8s.io.v1.LocalObjectReference"
          },
          "userData": {
            "type": "string"
          },
          "userDataBase64": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.CloudInitNoCloudSource": {
        "type": "object",
        "properties": {
          "networkData": {
            "type": "string"
          },
          "networkDataBase64": {
            "type": "string"
          },
          "networkDataSecretRef": {
            "$ref": "#/components/schemas/k8s.io.v1.LocalObjectReference"
          },
          "secretRef": {
            "$ref": "#/components/schemas/k8s.io.v1.LocalObjectReference"
          },
          "userData": {
            "type": "string"
          },
          "userDataBase64": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.ConfigMapVolumeSource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "optional": {
            "type": "boolean"
          },
          "volumeLabel": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.ContainerDiskInfo": {
        "type": "object",
        "properties": {
          "checksum": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "kubevirt.io.api.core.v1.ContainerDiskSource": {
        "type": "object",
        "required": [
          "image"
        ],
        "properties": {
          "image": {
            "type": "string",
            "default": ""
          },
          "imagePullPolicy": {
            "type": "string",
            "enum": [
              "Always",
              "IfNotPresent",
              "Never"
            ]
          },
          "imagePullSecret": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.CustomBlockSize": {
        "type": "object",
        "required": [
          "logical",
          "physical"
        ],
        "properties": {
          "logical": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "physical": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        }
      },
      "kubevirt.io.api.core.v1.DHCPOptions": {
        "type": "object",
        "properties": {
          "bootFileName": {
            "type": "string"
          },
          "ntpServers": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "privateOptions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.DHCPPrivateOptions"
                }
              ]
            }
          },
          "tftpServerName": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.DHCPPrivateOptions": {
        "type": "object",
        "required": [
          "option",
          "value"
        ],
        "properties": {
          "option": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "value": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.DataVolumeSource": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "hotpluggable": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.DataVolumeTemplateSpec": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus"
          }
        }
      },
      "kubevirt.io.api.core.v1.Devices": {
        "type": "object",
        "properties": {
          "autoattachGraphicsDevice": {
            "type": "boolean"
          },
          "autoattachInputDevice": {
            "type": "boolean"
          },
          "autoattachMemBalloon": {
            "type": "boolean"
          },
          "autoattachPodInterface": {
            "type": "boolean"
          },
          "autoattachSerialConsole": {
            "type": "boolean"
          },
          "autoattachVSOCK": {
            "type": "boolean"
          },
          "blockMultiQueue": {
            "type": "boolean"
          },
          "clientPassthrough": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.ClientPassthroughDevices"
          },
          "disableHotplug": {
            "type": "boolean"
          },
          "disks": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Disk"
                }
              ]
            }
          },
          "downwardMetrics": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.DownwardMetrics"
          },
          "filesystems": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Filesystem"
                }
              ]
            },
            "x-kubernetes-list-type": "atomic"
          },
          "gpus": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.GPU"
                }
              ]
            },
            "x-kubernetes-list-type": "atomic"
          },
          "hostDevices": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.HostDevice"
                }
              ]
            },
            "x-kubernetes-list-type": "atomic"
          },
          "inputs": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Input"
                }
              ]
            }
          },
          "interfaces": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Interface"
                }
              ]
            }
          },
          "logSerialConsole": {
            "type": "boolean"
          },
          "networkInterfaceMultiqueue": {
            "type": "boolean"
          },
          "rng": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Rng"
          },
          "sound": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.SoundDevice"
          },
          "tpm": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.TPMDevice"
          },
          "useVirtioTransitional": {
            "type": "boolean"
          },
          "watchdog": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Watchdog"
          }
        }
      },
      "kubevirt.io.api.core.v1.Disk": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "blockSize": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.BlockSize"
          },
          "bootOrder": {
            "type": "integer",
            "format": "int32"
          },
          "cache": {
            "type": "string"
          },
          "cdrom": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.CDRomTarget"
          },
          "dedicatedIOThread": {
            "type": "boolean"
          },
          "disk": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.DiskTarget"
          },
          "errorPolicy": {
            "type": "string"
          },
          "io": {
            "type": "string"
          },
          "lun": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.LunTarget"
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "serial": {
            "type": "string"
          },
          "shareable": {
            "type": "boolean"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.DiskTarget": {
        "type": "object",
        "properties": {
          "bus": {
            "type": "string"
          },
          "pciAddress": {
            "type": "string"
          },
          "readonly": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.DomainMemoryDumpInfo": {
        "type": "object",
        "properties": {
          "claimName": {
            "type": "string"
          },
          "endTimestamp": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          },
          "startTimestamp": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          },
          "targetFileName": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.DomainSpec": {
        "type": "object",
        "required": [
          "devices"
        ],
        "properties": {
          "chassis": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Chassis"
          },
          "clock": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Clock"
          },
          "cpu": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.CPU"
          },
          "devices": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Devices"
              }
            ]
          },
          "features": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Features"
          },
          "firmware": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Firmware"
          },
          "ioThreadsPolicy": {
            "type": "string"
          },
          "launchSecurity": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.LaunchSecurity"
          },
          "machine": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Machine"
          },
          "memory": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Memory"
          },
          "resources": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.ResourceRequirements"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.DownwardAPIVolumeSource": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.DownwardAPIVolumeFile"
                }
              ]
            }
          },
          "volumeLabel": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.DownwardMetrics": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.DownwardMetricsVolumeSource": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.EFI": {
        "type": "object",
        "properties": {
          "persistent": {
            "type": "boolean"
          },
          "secureBoot": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.EmptyDiskSource": {
        "type": "object",
        "required": [
          "capacity"
        ],
        "properties": {
          "capacity": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.EphemeralVolumeSource": {
        "type": "object",
        "properties": {
          "persistentVolumeClaim": {
            "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaimVolumeSource"
          }
        }
      },
      "kubevirt.io.api.core.v1.FeatureAPIC": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "endOfInterrupt": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.FeatureHyperv": {
        "type": "object",
        "properties": {
          "evmcs": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          },
          "frequencies": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          },
          "ipi": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          },
          "reenlightenment": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          },
          "relaxed": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          },
          "reset": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          },
          "runtime": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          },
          "spinlocks": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureSpinlocks"
          },
          "synic": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          },
          "synictimer": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.SyNICTimer"
          },
          "tlbflush": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          },
          "vapic": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          },
          "vendorid": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureVendorID"
          },
          "vpindex": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          }
        }
      },
      "kubevirt.io.api.core.v1.FeatureKVM": {
        "type": "object",
        "properties": {
          "hidden": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.FeatureSpinlocks": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "spinlocks": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "kubevirt.io.api.core.v1.FeatureState": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.FeatureVendorID": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "vendorid": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.Features": {
        "type": "object",
        "properties": {
          "acpi": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
              }
            ]
          },
          "apic": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureAPIC"
          },
          "hyperv": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureHyperv"
          },
          "kvm": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureKVM"
          },
          "pvspinlock": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          },
          "smm": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          }
        }
      },
      "kubevirt.io.api.core.v1.Filesystem": {
        "type": "object",
        "required": [
          "name",
          "virtiofs"
        ],
        "properties": {
          "name": {
            "type": "string",
            "default": ""
          },
          "virtiofs": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FilesystemVirtiofs"
          }
        }
      },
      "kubevirt.io.api.core.v1.FilesystemVirtiofs": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.Firmware": {
        "type": "object",
        "properties": {
          "bootloader": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Bootloader"
          },
          "kernelBoot": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.KernelBoot"
          },
          "serial": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.GPU": {
        "type": "object",
        "required": [
          "deviceName",
          "name"
        ],
        "properties": {
          "deviceName": {
            "type": "string",
            "default": ""
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "tag": {
            "type": "string"
          },
          "virtualGPUOptions": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VGPUOptions"
          }
        }
      },
      "kubevirt.io.api.core.v1.GuestAgentPing": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.HPETTimer": {
        "type": "object",
        "properties": {
          "present": {
            "type": "boolean"
          },
          "tickPolicy": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.HostDevice": {
        "type": "object",
        "required": [
          "deviceName",
          "name"
        ],
        "properties": {
          "deviceName": {
            "type": "string",
            "default": ""
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.HostDisk": {
        "type": "object",
        "required": [
          "path",
          "type"
        ],
        "properties": {
          "capacity": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
              }
            ]
          },
          "path": {
            "type": "string",
            "default": ""
          },
          "shared": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.HotplugVolumeSource": {
        "type": "object",
        "properties": {
          "dataVolume": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.DataVolumeSource"
          },
          "persistentVolumeClaim": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource"
          }
        }
      },
      "kubevirt.io.api.core.v1.HotplugVolumeStatus": {
        "type": "object",
        "properties": {
          "attachPodName": {
            "type": "string"
          },
          "attachPodUID": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.Hugepages": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.HypervTimer": {
        "type": "object",
        "properties": {
          "present": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.I6300ESBWatchdog": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.InitrdInfo": {
        "type": "object",
        "properties": {
          "checksum": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "kubevirt.io.api.core.v1.Input": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "bus": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "type": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.InstancetypeMatcher": {
        "type": "object",
        "properties": {
          "inferFromVolume": {
            "type": "string"
          },
          "inferFromVolumeFailurePolicy": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "revisionName": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.Interface": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "acpiIndex": {
            "type": "integer",
            "format": "int32"
          },
          "binding": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.PluginBinding"
          },
          "bootOrder": {
            "type": "integer",
            "format": "int32"
          },
          "bridge": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.InterfaceBridge"
          },
          "dhcpOptions": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.DHCPOptions"
          },
          "macAddress": {
            "type": "string"
          },
          "macvtap": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.InterfaceMacvtap"
          },
          "masquerade": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.InterfaceMasquerade"
          },
          "model": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "passt": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.InterfacePasst"
          },
          "pciAddress": {
            "type": "string"
          },
          "ports": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Port"
                }
              ]
            }
          },
          "slirp": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.InterfaceSlirp"
          },
          "sriov": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.InterfaceSRIOV"
          },
          "state": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.InterfaceBridge": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.InterfaceMacvtap": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.InterfaceMasquerade": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.InterfacePasst": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.InterfaceSRIOV": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.InterfaceSlirp": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.KVMTimer": {
        "type": "object",
        "properties": {
          "present": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.KernelBoot": {
        "type": "object",
        "properties": {
          "container": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.KernelBootContainer"
          },
          "kernelArgs": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.KernelBootContainer": {
        "type": "object",
        "required": [
          "image"
        ],
        "properties": {
          "image": {
            "type": "string",
            "default": ""
          },
          "imagePullPolicy": {
            "type": "string",
            "enum": [
              "Always",
              "IfNotPresent",
              "Never"
            ]
          },
          "imagePullSecret": {
            "type": "string"
          },
          "initrdPath": {
            "type": "string"
          },
          "kernelPath": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.KernelBootStatus": {
        "type": "object",
        "properties": {
          "initrdInfo": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.InitrdInfo"
          },
          "kernelInfo": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.KernelInfo"
          }
        }
      },
      "kubevirt.io.api.core.v1.KernelInfo": {
        "type": "object",
        "properties": {
          "checksum": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "kubevirt.io.api.core.v1.LaunchSecurity": {
        "type": "object",
        "properties": {
          "sev": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.SEV"
          }
        }
      },
      "kubevirt.io.api.core.v1.LiveUpdateAffinity": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.LiveUpdateCPU": {
        "type": "object",
        "properties": {
          "maxSockets": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "kubevirt.io.api.core.v1.LiveUpdateFeatures": {
        "type": "object",
        "properties": {
          "affinity": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.LiveUpdateAffinity"
          },
          "cpu": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.LiveUpdateCPU"
          },
          "memory": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.LiveUpdateMemory"
          }
        }
      },
      "kubevirt.io.api.core.v1.LiveUpdateMemory": {
        "type": "object",
        "properties": {
          "maxGuest": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        }
      },
      "kubevirt.io.api.core.v1.LunTarget": {
        "type": "object",
        "properties": {
          "bus": {
            "type": "string"
          },
          "readonly": {
            "type": "boolean"
          },
          "reservation": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.Machine": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.Memory": {
        "type": "object",
        "properties": {
          "guest": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
          },
          "hugepages": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Hugepages"
          },
          "maxGuest": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        }
      },
      "kubevirt.io.api.core.v1.MemoryDumpVolumeSource": {
        "type": "object",
        "required": [
          "claimName"
        ],
        "properties": {
          "claimName": {
            "type": "string",
            "default": ""
          },
          "hotpluggable": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.MemoryStatus": {
        "type": "object",
        "properties": {
          "guestAtBoot": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
          },
          "guestCurrent": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
          },
          "guestRequested": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        }
      },
      "kubevirt.io.api.core.v1.MigrationConfiguration": {
        "type": "object",
        "properties": {
          "allowAutoConverge": {
            "type": "boolean"
          },
          "allowPostCopy": {
            "type": "boolean"
          },
          "bandwidthPerMigration": {
            "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
          },
          "completionTimeoutPerGiB": {
            "type": "integer",
            "format": "int64"
          },
          "disableTLS": {
            "type": "boolean"
          },
          "matchSELinuxLevelOnMigration": {
            "type": "boolean"
          },
          "network": {
            "type": "string"
          },
          "nodeDrainTaintKey": {
            "type": "string"
          },
          "parallelMigrationsPerCluster": {
            "type": "integer",
            "format": "int64"
          },
          "parallelOutboundMigrationsPerNode": {
            "type": "integer",
            "format": "int64"
          },
          "progressTimeout": {
            "type": "integer",
            "format": "int64"
          },
          "unsafeMigrationOverride": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.MultusNetwork": {
        "type": "object",
        "required": [
          "networkName"
        ],
        "properties": {
          "default": {
            "type": "boolean"
          },
          "networkName": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.NUMA": {
        "type": "object",
        "properties": {
          "guestMappingPassthrough": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough"
          }
        }
      },
      "kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.Network": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "multus": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.MultusNetwork"
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "pod": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.PodNetwork"
          }
        }
      },
      "kubevirt.io.api.core.v1.NoCloudSSHPublicKeyAccessCredentialPropagation": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.PITTimer": {
        "type": "object",
        "properties": {
          "present": {
            "type": "boolean"
          },
          "tickPolicy": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.PersistentVolumeClaimInfo": {
        "type": "object",
        "properties": {
          "accessModes": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            },
            "x-kubernetes-list-type": "atomic"
          },
          "capacity": {
            "type": "object",
            "additionalProperties": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              ]
            }
          },
          "filesystemOverhead": {
            "type": "string"
          },
          "preallocated": {
            "type": "boolean"
          },
          "requests": {
            "type": "object",
            "additionalProperties": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              ]
            }
          },
          "volumeMode": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource": {
        "type": "object",
        "required": [
          "claimName"
        ],
        "properties": {
          "claimName": {
            "type": "string",
            "default": ""
          },
          "hotpluggable": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.PluginBinding": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.PodNetwork": {
        "type": "object",
        "properties": {
          "vmIPv6NetworkCIDR": {
            "type": "string"
          },
          "vmNetworkCIDR": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.Port": {
        "type": "object",
        "required": [
          "port"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "protocol": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.PreferenceMatcher": {
        "type": "object",
        "properties": {
          "inferFromVolume": {
            "type": "string"
          },
          "inferFromVolumeFailurePolicy": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "revisionName": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.Probe": {
        "type": "object",
        "properties": {
          "exec": {
            "$ref": "#/components/schemas/k8s.io.v1.ExecAction"
          },
          "failureThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "guestAgentPing": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.GuestAgentPing"
          },
          "httpGet": {
            "$ref": "#/components/schemas/k8s.io.v1.HTTPGetAction"
          },
          "initialDelaySeconds": {
            "type": "integer",
            "format": "int32"
          },
          "periodSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "successThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "tcpSocket": {
            "$ref": "#/components/schemas/k8s.io.v1.TCPSocketAction"
          },
          "timeoutSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation": {
        "type": "object",
        "required": [
          "users"
        ],
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            },
            "x-kubernetes-list-type": "set"
          }
        }
      },
      "kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.RTCTimer": {
        "type": "object",
        "properties": {
          "present": {
            "type": "boolean"
          },
          "tickPolicy": {
            "type": "string"
          },
          "track": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.Realtime": {
        "type": "object",
        "properties": {
          "mask": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.RemoveVolumeOptions": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "dryRun": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            },
            "x-kubernetes-list-type": "atomic"
          },
          "name": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.ResourceRequirements": {
        "type": "object",
        "properties": {
          "limits": {
            "type": "object",
            "additionalProperties": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              ]
            }
          },
          "overcommitGuestOverhead": {
            "type": "boolean"
          },
          "requests": {
            "type": "object",
            "additionalProperties": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              ]
            }
          }
        }
      },
      "kubevirt.io.api.core.v1.Rng": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.SEV": {
        "type": "object",
        "properties": {
          "attestation": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.SEVAttestation"
          },
          "dhCert": {
            "type": "string"
          },
          "policy": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.SEVPolicy"
          },
          "session": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.SEVAttestation": {
        "type": "object"
      },
      "kubevirt.io.api.core.v1.SEVPolicy": {
        "type": "object",
        "properties": {
          "encryptedState": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential": {
        "type": "object",
        "required": [
          "propagationMethod",
          "source"
        ],
        "properties": {
          "propagationMethod": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod"
              }
            ]
          },
          "source": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod": {
        "type": "object",
        "properties": {
          "configDrive": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation"
          },
          "noCloud": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.NoCloudSSHPublicKeyAccessCredentialPropagation"
          },
          "qemuGuestAgent": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation"
          }
        }
      },
      "kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource": {
        "type": "object",
        "properties": {
          "secret": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.AccessCredentialSecretSource"
          }
        }
      },
      "kubevirt.io.api.core.v1.SecretVolumeSource": {
        "type": "object",
        "properties": {
          "optional": {
            "type": "boolean"
          },
          "secretName": {
            "type": "string"
          },
          "volumeLabel": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.ServiceAccountVolumeSource": {
        "type": "object",
        "properties": {
          "serviceAccountName": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.SoundDevice": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "model": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.SyNICTimer": {
        "type": "object",
        "properties": {
          "direct": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.SysprepSource": {
        "type": "object",
        "properties": {
          "configMap": {
            "$ref": "#/components/schemas/k8s.io.v1.LocalObjectReference"
          },
          "secret": {
            "$ref": "#/components/schemas/k8s.io.v1.LocalObjectReference"
          }
        }
      },
      "kubevirt.io.api.core.v1.TPMDevice": {
        "type": "object",
        "properties": {
          "persistent": {
            "type": "boolean"
          }
        }
      },
      "kubevirt.io.api.core.v1.Timer": {
        "type": "object",
        "properties": {
          "hpet": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.HPETTimer"
          },
          "hyperv": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.HypervTimer"
          },
          "kvm": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.KVMTimer"
          },
          "pit": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.PITTimer"
          },
          "rtc": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.RTCTimer"
          }
        }
      },
      "kubevirt.io.api.core.v1.TopologyHints": {
        "type": "object",
        "properties": {
          "tscFrequency": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "kubevirt.io.api.core.v1.UserPasswordAccessCredential": {
        "type": "object",
        "required": [
          "propagationMethod",
          "source"
        ],
        "properties": {
          "propagationMethod": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod"
              }
            ]
          },
          "source": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod": {
        "type": "object",
        "properties": {
          "qemuGuestAgent": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation"
          }
        }
      },
      "kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource": {
        "type": "object",
        "properties": {
          "secret": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.AccessCredentialSecretSource"
          }
        }
      },
      "kubevirt.io.api.core.v1.VGPUDisplayOptions": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "ramFB": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.FeatureState"
          }
        }
      },
      "kubevirt.io.api.core.v1.VGPUOptions": {
        "type": "object",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VGPUDisplayOptions"
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachine": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineSpec"
              }
            ]
          },
          "status": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineStatus"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineCondition": {
        "type": "object",
        "required": [
          "status",
          "type"
        ],
        "properties": {
          "lastProbeTime": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.Time"
              }
            ]
          },
          "lastTransitionTime": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.Time"
              }
            ]
          },
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "default": ""
          },
          "type": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstance": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceSpec"
              }
            ]
          },
          "status": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceStatus"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceCondition": {
        "type": "object",
        "required": [
          "status",
          "type"
        ],
        "properties": {
          "lastProbeTime": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.Time"
              }
            ]
          },
          "lastTransitionTime": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.Time"
              }
            ]
          },
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "default": ""
          },
          "type": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceGuestOSInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "kernelRelease": {
            "type": "string"
          },
          "kernelVersion": {
            "type": "string"
          },
          "machine": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "prettyName": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "versionId": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstance"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceMigration": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationSpec"
              }
            ]
          },
          "status": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationStatus"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationCondition": {
        "type": "object",
        "required": [
          "status",
          "type"
        ],
        "properties": {
          "lastProbeTime": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.Time"
              }
            ]
          },
          "lastTransitionTime": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.Time"
              }
            ]
          },
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "default": ""
          },
          "type": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationPhaseTransitionTimestamp": {
        "type": "object",
        "properties": {
          "phase": {
            "type": "string"
          },
          "phaseTransitionTimestamp": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.Time"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationSpec": {
        "type": "object",
        "properties": {
          "vmiName": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationState": {
        "type": "object",
        "properties": {
          "abortRequested": {
            "type": "boolean"
          },
          "abortStatus": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "endTimestamp": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          },
          "failed": {
            "type": "boolean"
          },
          "migrationConfiguration": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.MigrationConfiguration"
          },
          "migrationPolicyName": {
            "type": "string"
          },
          "migrationUid": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "sourceNode": {
            "type": "string"
          },
          "startTimestamp": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          },
          "targetAttachmentPodUID": {
            "type": "string"
          },
          "targetCPUSet": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-kubernetes-list-type": "atomic"
          },
          "targetDirectMigrationNodePorts": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          "targetNode": {
            "type": "string"
          },
          "targetNodeAddress": {
            "type": "string"
          },
          "targetNodeDomainDetected": {
            "type": "boolean"
          },
          "targetNodeDomainReadyTimestamp": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          },
          "targetNodeTopology": {
            "type": "string"
          },
          "targetPod": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationStatus": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationCondition"
                }
              ]
            }
          },
          "migrationState": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationState"
          },
          "phase": {
            "type": "string"
          },
          "phaseTransitionTimestamps": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationPhaseTransitionTimestamp"
                }
              ]
            },
            "x-kubernetes-list-type": "atomic"
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceNetworkInterface": {
        "type": "object",
        "properties": {
          "infoSource": {
            "type": "string"
          },
          "interfaceName": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          },
          "ipAddresses": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "mac": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "queueCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstancePhaseTransitionTimestamp": {
        "type": "object",
        "properties": {
          "phase": {
            "type": "string"
          },
          "phaseTransitionTimestamp": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.Time"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceSpec": {
        "type": "object",
        "required": [
          "domain"
        ],
        "properties": {
          "accessCredentials": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.AccessCredential"
                }
              ]
            },
            "x-kubernetes-list-type": "atomic"
          },
          "affinity": {
            "$ref": "#/components/schemas/k8s.io.v1.Affinity"
          },
          "architecture": {
            "type": "string"
          },
          "dnsConfig": {
            "$ref": "#/components/schemas/k8s.io.v1.PodDNSConfig"
          },
          "dnsPolicy": {
            "type": "string",
            "enum": [
              "ClusterFirst",
              "ClusterFirstWithHostNet",
              "Default",
              "None"
            ]
          },
          "domain": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.DomainSpec"
              }
            ]
          },
          "evictionStrategy": {
            "type": "string"
          },
          "hostname": {
            "type": "string"
          },
          "livenessProbe": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Probe"
          },
          "networks": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Network"
                }
              ]
            }
          },
          "nodeSelector": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "default": ""
            }
          },
          "priorityClassName": {
            "type": "string"
          },
          "readinessProbe": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Probe"
          },
          "schedulerName": {
            "type": "string"
          },
          "startStrategy": {
            "type": "string"
          },
          "subdomain": {
            "type": "string"
          },
          "terminationGracePeriodSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "tolerations": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.Toleration"
                }
              ]
            }
          },
          "topologySpreadConstraints": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/k8s.io.v1.TopologySpreadConstraint"
                }
              ]
            },
            "x-kubernetes-list-map-keys": [
              "topologyKey",
              "whenUnsatisfiable"
            ],
            "x-kubernetes-list-type": "map",
            "x-kubernetes-patch-merge-key": "topologyKey",
            "x-kubernetes-patch-strategy": "merge"
          },
          "volumes": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Volume"
                }
              ]
            }
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceStatus": {
        "type": "object",
        "properties": {
          "VSOCKCID": {
            "type": "integer",
            "format": "int64"
          },
          "activePods": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "default": ""
            }
          },
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceCondition"
                }
              ]
            }
          },
          "currentCPUTopology": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.CPUTopology"
          },
          "evacuationNodeName": {
            "type": "string"
          },
          "fsFreezeStatus": {
            "type": "string"
          },
          "guestOSInfo": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceGuestOSInfo"
              }
            ]
          },
          "interfaces": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceNetworkInterface"
                }
              ]
            }
          },
          "kernelBootStatus": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.KernelBootStatus"
          },
          "launcherContainerImageVersion": {
            "type": "string"
          },
          "machine": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.Machine"
          },
          "memory": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.MemoryStatus"
          },
          "migrationMethod": {
            "type": "string"
          },
          "migrationState": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationState"
          },
          "migrationTransport": {
            "type": "string"
          },
          "nodeName": {
            "type": "string"
          },
          "phase": {
            "type": "string"
          },
          "phaseTransitionTimestamps": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstancePhaseTransitionTimestamp"
                }
              ]
            },
            "x-kubernetes-list-type": "atomic"
          },
          "qosClass": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "runtimeUser": {
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          "selinuxContext": {
            "type": "string"
          },
          "topologyHints": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.TopologyHints"
          },
          "virtualMachineRevisionName": {
            "type": "string"
          },
          "volumeStatus": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VolumeStatus"
                }
              ]
            },
            "x-kubernetes-list-type": "atomic"
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec": {
        "type": "object",
        "properties": {
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceSpec"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineMemoryDumpRequest": {
        "type": "object",
        "required": [
          "claimName",
          "phase"
        ],
        "properties": {
          "claimName": {
            "type": "string",
            "default": ""
          },
          "endTimestamp": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          },
          "fileName": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "phase": {
            "type": "string",
            "default": ""
          },
          "remove": {
            "type": "boolean"
          },
          "startTimestamp": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineSpec": {
        "type": "object",
        "required": [
          "template"
        ],
        "properties": {
          "dataVolumeTemplates": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.DataVolumeTemplateSpec"
                }
              ]
            }
          },
          "instancetype": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.InstancetypeMatcher"
          },
          "liveUpdateFeatures": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.LiveUpdateFeatures"
          },
          "preference": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.PreferenceMatcher"
          },
          "runStrategy": {
            "type": "string"
          },
          "running": {
            "type": "boolean"
          },
          "template": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec"
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineStartFailure": {
        "type": "object",
        "properties": {
          "consecutiveFailCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastFailedVMIUID": {
            "type": "string"
          },
          "retryAfterTimestamp": {
            "$ref": "#/components/schemas/k8s.io.v1.Time"
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineStateChangeRequest": {
        "type": "object",
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "default": ""
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "default": ""
            }
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineStatus": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineCondition"
                }
              ]
            }
          },
          "created": {
            "type": "boolean"
          },
          "desiredGeneration": {
            "type": "integer",
            "format": "int64"
          },
          "memoryDumpRequest": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineMemoryDumpRequest"
          },
          "observedGeneration": {
            "type": "integer",
            "format": "int64"
          },
          "printableStatus": {
            "type": "string"
          },
          "ready": {
            "type": "boolean"
          },
          "restoreInProgress": {
            "type": "string"
          },
          "snapshotInProgress": {
            "type": "string"
          },
          "startFailure": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineStartFailure"
          },
          "stateChangeRequests": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineStateChangeRequest"
                }
              ]
            }
          },
          "volumeRequests": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineVolumeRequest"
                }
              ]
            },
            "x-kubernetes-list-type": "atomic"
          },
          "volumeSnapshotStatuses": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.api.core.v1.VolumeSnapshotStatus"
                }
              ]
            }
          }
        }
      },
      "kubevirt.io.api.core.v1.VirtualMachineVolumeRequest": {
        "type": "object",
        "properties": {
          "addVolumeOptions": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.AddVolumeOptions"
          },
          "removeVolumeOptions": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.RemoveVolumeOptions"
          }
        }
      },
      "kubevirt.io.api.core.v1.Volume": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "cloudInitConfigDrive": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.CloudInitConfigDriveSource"
          },
          "cloudInitNoCloud": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.CloudInitNoCloudSource"
          },
          "configMap": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.ConfigMapVolumeSource"
          },
          "containerDisk": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.ContainerDiskSource"
          },
          "dataVolume": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.DataVolumeSource"
          },
          "downwardAPI": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.DownwardAPIVolumeSource"
          },
          "downwardMetrics": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.DownwardMetricsVolumeSource"
          },
          "emptyDisk": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.EmptyDiskSource"
          },
          "ephemeral": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.EphemeralVolumeSource"
          },
          "hostDisk": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.HostDisk"
          },
          "memoryDump": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.MemoryDumpVolumeSource"
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "persistentVolumeClaim": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource"
          },
          "secret": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.SecretVolumeSource"
          },
          "serviceAccount": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.ServiceAccountVolumeSource"
          },
          "sysprep": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.SysprepSource"
          }
        }
      },
      "kubevirt.io.api.core.v1.VolumeSnapshotStatus": {
        "type": "object",
        "required": [
          "enabled",
          "name"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": false
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.api.core.v1.VolumeStatus": {
        "type": "object",
        "required": [
          "name",
          "target"
        ],
        "properties": {
          "containerDiskVolume": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.ContainerDiskInfo"
          },
          "hotplugVolume": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.HotplugVolumeStatus"
          },
          "memoryDumpVolume": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.DomainMemoryDumpInfo"
          },
          "message": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "persistentVolumeClaimInfo": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.PersistentVolumeClaimInfo"
          },
          "phase": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "target": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.api.core.v1.Watchdog": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "i6300esb": {
            "$ref": "#/components/schemas/kubevirt.io.api.core.v1.I6300ESBWatchdog"
          },
          "name": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage": {
        "type": "object"
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint": {
        "type": "object",
        "required": [
          "current",
          "previous"
        ],
        "properties": {
          "current": {
            "type": "string",
            "default": ""
          },
          "previous": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource": {
        "type": "object",
        "properties": {
          "blank": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage"
          },
          "gcs": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceGCS"
          },
          "http": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP"
          },
          "imageio": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO"
          },
          "pvc": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC"
          },
          "registry": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry"
          },
          "s3": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3"
          },
          "snapshot": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceSnapshot"
          },
          "upload": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload"
          },
          "vddk": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK"
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceGCS": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "secretRef": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "certConfigMap": {
            "type": "string"
          },
          "extraHeaders": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "secretExtraHeaders": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "secretRef": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO": {
        "type": "object",
        "required": [
          "diskId",
          "url"
        ],
        "properties": {
          "certConfigMap": {
            "type": "string"
          },
          "diskId": {
            "type": "string",
            "default": ""
          },
          "secretRef": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC": {
        "type": "object",
        "required": [
          "name",
          "namespace"
        ],
        "properties": {
          "name": {
            "type": "string",
            "default": ""
          },
          "namespace": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef": {
        "type": "object",
        "required": [
          "kind",
          "name"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "default": ""
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "namespace": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry": {
        "type": "object",
        "properties": {
          "certConfigMap": {
            "type": "string"
          },
          "imageStream": {
            "type": "string"
          },
          "pullMethod": {
            "type": "string"
          },
          "secretRef": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "certConfigMap": {
            "type": "string"
          },
          "secretRef": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceSnapshot": {
        "type": "object",
        "required": [
          "name",
          "namespace"
        ],
        "properties": {
          "name": {
            "type": "string",
            "default": ""
          },
          "namespace": {
            "type": "string",
            "default": ""
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload": {
        "type": "object"
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK": {
        "type": "object",
        "properties": {
          "backingFile": {
            "type": "string"
          },
          "initImageURL": {
            "type": "string"
          },
          "secretRef": {
            "type": "string"
          },
          "thumbprint": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec": {
        "type": "object",
        "properties": {
          "checkpoints": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint"
                }
              ]
            }
          },
          "contentType": {
            "type": "string"
          },
          "finalCheckpoint": {
            "type": "boolean"
          },
          "preallocation": {
            "type": "boolean"
          },
          "priorityClassName": {
            "type": "string"
          },
          "pvc": {
            "$ref": "#/components/schemas/k8s.io.v1.PersistentVolumeClaimSpec"
          },
          "source": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource"
          },
          "sourceRef": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef"
          },
          "storage": {
            "$ref": "#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec"
          }
        }
      },
      "kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec": {
        "type": "object",
        "properties": {
          "accessModes": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "dataSource": {
            "$ref": "#/components/schemas/k8s.io.v1.TypedLocalObjectReference"
          },
          "dataSourceRef": {
            "$ref": "#/components/schemas/k8s.io.v1.TypedObjectReference"
          },
          "resources": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ResourceRequirements"
              }
            ]
          },
          "selector": {
            "$ref": "#/components/schemas/k8s.io.v1.LabelSelector"
          },
          "storageClassName": {
            "type": "string"
          },
          "volumeMode": {
            "type": "string"
          },
          "volumeName": {
            "type": "string"
          }
        }
      },
      "network.harvesterhci.io.v1beta1.ClusterNetwork": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "status": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetworkStatus"
              }
            ]
          }
        }
      },
      "network.harvesterhci.io.v1beta1.ClusterNetworkList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind",
          "metadata"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "network.harvesterhci.io.v1beta1.ClusterNetworkStatus": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.Condition"
                }
              ]
            }
          }
        }
      },
      "network.harvesterhci.io.v1beta1.Condition": {
        "type": "object",
        "required": [
          "status",
          "type"
        ],
        "properties": {
          "lastTransitionTime": {
            "type": "string"
          },
          "lastUpdateTime": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "default": ""
          },
          "type": {
            "type": "string",
            "default": ""
          }
        }
      },
      "network.harvesterhci.io.v1beta1.LinkStatus": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "mac": {
            "type": "string"
          },
          "masterIndex": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "promiscuous": {
            "type": "boolean"
          },
          "state": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "network.harvesterhci.io.v1beta1.NetworkInterface": {
        "type": "object",
        "required": [
          "index",
          "name",
          "state",
          "type"
        ],
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "masterIndex": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "state": {
            "type": "string",
            "default": ""
          },
          "type": {
            "type": "string",
            "default": ""
          },
          "usedByManagementNetwork": {
            "type": "boolean"
          },
          "usedByVlanNetwork": {
            "type": "boolean"
          }
        }
      },
      "network.harvesterhci.io.v1beta1.NodeNetwork": {
        "type": "object",
        "required": [
          "apiVersion",
          "kind"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkSpec"
              }
            ]
          },
          "status": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkStatus"
              }
            ]
          }
        }
      },
      "network.harvesterhci.io.v1beta1.NodeNetworkList": {
        "type": "object",
        "required": [
          "apiVersion",
          "items",
          "kind",
          "metadata"
        ],
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork"
                }
              ]
            }
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/k8s.io.v1.ListMeta"
              }
            ]
          }
        }
      },
      "network.harvesterhci.io.v1beta1.NodeNetworkSpec": {
        "type": "object",
        "required": [
          "nodeName"
        ],
        "properties": {
          "description": {
            "type": "string"
          },
          "nic": {
            "type": "string"
          },
          "nodeName": {
            "type": "string",
            "default": ""
          },
          "type": {
            "type": "string"
          }
        }
      },
      "network.harvesterhci.io.v1beta1.NodeNetworkStatus": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.Condition"
                }
              ]
            }
          },
          "networkIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          "networkLinkStatus": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.LinkStatus"
            }
          },
          "nics": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/network.harvesterhci.io.v1beta1.NetworkInterface"
                }
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Basic": {
        "type": "http",
        "scheme": "Basic"
      },
      "Bearer": {
        "type": "http",
        "scheme": "Bearer"
      }
    }
  }
}