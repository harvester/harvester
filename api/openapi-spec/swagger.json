{
  "swagger": "2.0",
  "info": {
    "title": "Harvester APIs",
    "version": "v1beta1"
  },
  "paths": {
    "/apis/cdi.kubevirt.io/": {
      "get": {
        "description": "Get API group versions",
        "produces": [
          "application/json"
        ],
        "tags": [
          "cdi.kubevirt.io"
        ],
        "operationId": "getAPIGroup-cdi.kubevirt.io",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.APIGroup"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/apis/cdi.kubevirt.io/v1beta1/": {
      "get": {
        "description": "Get API Resources",
        "produces": [
          "application/json"
        ],
        "tags": [
          "cdi.kubevirt.io"
        ],
        "operationId": "getAPIResources-cdi.kubevirt.io-v1beta1",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.APIResourceList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/apis/cdi.kubevirt.io/v1beta1/datavolumes": {
      "get": {
        "description": "Get a list of all DataVolume objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "cdi.kubevirt.io"
        ],
        "operationId": "listDataVolumeForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/cdi.kubevirt.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/datavolumes": {
      "get": {
        "description": "Get a list of DataVolume objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "cdi.kubevirt.io"
        ],
        "operationId": "listNamespacedDataVolume",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a DataVolume object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "cdi.kubevirt.io"
        ],
        "operationId": "createNamespacedDataVolume",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolume"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolume"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolume"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/cdi.kubevirt.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/datavolumes/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a DataVolume object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "cdi.kubevirt.io"
        ],
        "operationId": "readNamespacedDataVolume",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolume"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a DataVolume object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "cdi.kubevirt.io"
        ],
        "operationId": "replaceNamespacedDataVolume",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolume"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolume"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a DataVolume object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "cdi.kubevirt.io"
        ],
        "operationId": "deleteNamespacedDataVolume",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a DataVolume object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "cdi.kubevirt.io"
        ],
        "operationId": "patchNamespacedDataVolume",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolume"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/cdi.kubevirt.io/v1beta1/watch/datavolumes": {
      "get": {
        "description": "Watch a DataVolumeList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "cdi.kubevirt.io"
        ],
        "operationId": "watchDataVolumeListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/cdi.kubevirt.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/datavolumes": {
      "get": {
        "description": "Watch a DataVolume object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "cdi.kubevirt.io"
        ],
        "operationId": "watchNamespacedDataVolume",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/": {
      "get": {
        "description": "Get API group versions",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "getAPIGroup-harvesterhci.io",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.APIGroup"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/apis/harvesterhci.io/v1beta1/": {
      "get": {
        "description": "Get API Resources",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "getAPIResources-harvesterhci.io-v1beta1",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.APIResourceList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/apis/harvesterhci.io/v1beta1/keypairs": {
      "get": {
        "description": "Get a list of all KeyPair objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listKeyPairForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPairList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/keypairs": {
      "get": {
        "description": "Get a list of KeyPair objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listNamespacedKeyPair",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPairList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a KeyPair object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "createNamespacedKeyPair",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/keypairs/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a KeyPair object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "readNamespacedKeyPair",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a KeyPair object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "replaceNamespacedKeyPair",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a KeyPair object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "deleteNamespacedKeyPair",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a KeyPair object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "patchNamespacedKeyPair",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/supportbundles": {
      "get": {
        "description": "Get a list of SupportBundle objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listNamespacedSupportBundle",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundleList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a SupportBundle object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "createNamespacedSupportBundle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/supportbundles/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a SupportBundle object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "readNamespacedSupportBundle",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a SupportBundle object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "replaceNamespacedSupportBundle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a SupportBundle object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "deleteNamespacedSupportBundle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a SupportBundle object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "patchNamespacedSupportBundle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/upgrades": {
      "get": {
        "description": "Get a list of Upgrade objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listNamespacedUpgrade",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.UpgradeList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a Upgrade object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "createNamespacedUpgrade",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/upgrades/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a Upgrade object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "readNamespacedUpgrade",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a Upgrade object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "replaceNamespacedUpgrade",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Upgrade object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "deleteNamespacedUpgrade",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a Upgrade object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "patchNamespacedUpgrade",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinebackupcontents": {
      "get": {
        "description": "Get a list of VirtualMachineBackupContent objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listNamespacedVirtualMachineBackupContent",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContentList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineBackupContent object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "createNamespacedVirtualMachineBackupContent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContent"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContent"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinebackupcontents/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineBackupContent object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "readNamespacedVirtualMachineBackupContent",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineBackupContent object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "replaceNamespacedVirtualMachineBackupContent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContent"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineBackupContent object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "deleteNamespacedVirtualMachineBackupContent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineBackupContent object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "patchNamespacedVirtualMachineBackupContent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinebackups": {
      "get": {
        "description": "Get a list of VirtualMachineBackup objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineBackup object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "createNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinebackups/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineBackup object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "readNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineBackup object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "replaceNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineBackup object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "deleteNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineBackup object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "patchNamespacedVirtualMachineBackup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineimages": {
      "get": {
        "description": "Get a list of VirtualMachineImage objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listNamespacedVirtualMachineImage",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImageList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineImage object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "createNamespacedVirtualMachineImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineimages/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineImage object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "readNamespacedVirtualMachineImage",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineImage object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "replaceNamespacedVirtualMachineImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineImage object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "deleteNamespacedVirtualMachineImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineImage object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "patchNamespacedVirtualMachineImage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinerestores": {
      "get": {
        "description": "Get a list of VirtualMachineRestore objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestoreList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineRestore object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "createNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinerestores/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineRestore object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "readNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineRestore object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "replaceNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineRestore object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "deleteNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineRestore object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "patchNamespacedVirtualMachineRestore",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinetemplates": {
      "get": {
        "description": "Get a list of VirtualMachineTemplate objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineTemplate object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "createNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinetemplates/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineTemplate object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "readNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineTemplate object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "replaceNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineTemplate object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "deleteNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineTemplate object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "patchNamespacedVirtualMachineTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinetemplateversions": {
      "get": {
        "description": "Get a list of VirtualMachineTemplateVersion objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineTemplateVersion object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "createNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinetemplateversions/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineTemplateVersion object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "readNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineTemplateVersion object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "replaceNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineTemplateVersion object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "deleteNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineTemplateVersion object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "patchNamespacedVirtualMachineTemplateVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/supportbundles": {
      "get": {
        "description": "Get a list of all SupportBundle objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listSupportBundleForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundleList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/upgrades": {
      "get": {
        "description": "Get a list of all Upgrade objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listUpgradeForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.UpgradeList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinebackupcontents": {
      "get": {
        "description": "Get a list of all VirtualMachineBackupContent objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listVirtualMachineBackupContentForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContentList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinebackups": {
      "get": {
        "description": "Get a list of all VirtualMachineBackup objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listVirtualMachineBackupForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachineimages": {
      "get": {
        "description": "Get a list of all VirtualMachineImage objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listVirtualMachineImageForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImageList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinerestores": {
      "get": {
        "description": "Get a list of all VirtualMachineRestore objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listVirtualMachineRestoreForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestoreList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinetemplates": {
      "get": {
        "description": "Get a list of all VirtualMachineTemplate objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listVirtualMachineTemplateForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/virtualmachinetemplateversions": {
      "get": {
        "description": "Get a list of all VirtualMachineTemplateVersion objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "listVirtualMachineTemplateVersionForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/keypairs": {
      "get": {
        "description": "Watch a KeyPairList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchKeyPairListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/keypairs": {
      "get": {
        "description": "Watch a KeyPair object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchNamespacedKeyPair",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/supportbundles": {
      "get": {
        "description": "Watch a SupportBundle object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchNamespacedSupportBundle",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/upgrades": {
      "get": {
        "description": "Watch a Upgrade object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchNamespacedUpgrade",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinebackupcontents": {
      "get": {
        "description": "Watch a VirtualMachineBackupContent object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchNamespacedVirtualMachineBackupContent",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinebackups": {
      "get": {
        "description": "Watch a VirtualMachineBackup object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchNamespacedVirtualMachineBackup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineimages": {
      "get": {
        "description": "Watch a VirtualMachineImage object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchNamespacedVirtualMachineImage",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinerestores": {
      "get": {
        "description": "Watch a VirtualMachineRestore object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchNamespacedVirtualMachineRestore",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinetemplates": {
      "get": {
        "description": "Watch a VirtualMachineTemplate object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchNamespacedVirtualMachineTemplate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachinetemplateversions": {
      "get": {
        "description": "Watch a VirtualMachineTemplateVersion object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchNamespacedVirtualMachineTemplateVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/supportbundles": {
      "get": {
        "description": "Watch a SupportBundleList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchSupportBundleListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/upgrades": {
      "get": {
        "description": "Watch a UpgradeList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchUpgradeListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/virtualmachinebackupcontents": {
      "get": {
        "description": "Watch a VirtualMachineBackupContentList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchVirtualMachineBackupContentListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/virtualmachinebackups": {
      "get": {
        "description": "Watch a VirtualMachineBackupList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchVirtualMachineBackupListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/virtualmachineimages": {
      "get": {
        "description": "Watch a VirtualMachineImageList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchVirtualMachineImageListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/virtualmachinerestores": {
      "get": {
        "description": "Watch a VirtualMachineRestoreList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchVirtualMachineRestoreListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/virtualmachinetemplates": {
      "get": {
        "description": "Watch a VirtualMachineTemplateList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchVirtualMachineTemplateListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/harvesterhci.io/v1beta1/watch/virtualmachinetemplateversions": {
      "get": {
        "description": "Watch a VirtualMachineTemplateVersionList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "harvesterhci.io"
        ],
        "operationId": "watchVirtualMachineTemplateVersionListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/": {
      "get": {
        "description": "Get API group versions",
        "produces": [
          "application/json"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "getAPIGroup-kubevirt.io",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.APIGroup"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/apis/kubevirt.io/v1/": {
      "get": {
        "description": "Get API Resources",
        "produces": [
          "application/json"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "getAPIResources-kubevirt.io-v1",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.APIResourceList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineinstancemigrations": {
      "get": {
        "description": "Get a list of VirtualMachineInstanceMigration objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "listNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigrationList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineInstanceMigration object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "createNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigration"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigration"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigration"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineinstancemigrations/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineInstanceMigration object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "readNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigration"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineInstanceMigration object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "replaceNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigration"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigration"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineInstanceMigration object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "deleteNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineInstanceMigration object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "patchNamespacedVirtualMachineInstanceMigration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigration"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineinstances": {
      "get": {
        "description": "Get a list of VirtualMachineInstance objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "listNamespacedVirtualMachineInstance",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachineInstance object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "createNamespacedVirtualMachineInstance",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstance"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstance"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstance"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineinstances/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachineInstance object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "readNamespacedVirtualMachineInstance",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstance"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachineInstance object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "replaceNamespacedVirtualMachineInstance",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstance"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstance"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachineInstance object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "deleteNamespacedVirtualMachineInstance",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachineInstance object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "patchNamespacedVirtualMachineInstance",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstance"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachines": {
      "get": {
        "description": "Get a list of VirtualMachine objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "listNamespacedVirtualMachine",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a VirtualMachine object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "createNamespacedVirtualMachine",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachine"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachine"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachine"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachine"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/kubevirt.io/v1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachines/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a VirtualMachine object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "readNamespacedVirtualMachine",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachine"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a VirtualMachine object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "replaceNamespacedVirtualMachine",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachine"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachine"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachine"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a VirtualMachine object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "deleteNamespacedVirtualMachine",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a VirtualMachine object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "patchNamespacedVirtualMachine",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachine"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/kubevirt.io/v1/virtualmachineinstancemigrations": {
      "get": {
        "description": "Get a list of all VirtualMachineInstanceMigration objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "listVirtualMachineInstanceMigrationForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigrationList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/v1/virtualmachineinstances": {
      "get": {
        "description": "Get a list of all VirtualMachineInstance objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "listVirtualMachineInstanceForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/v1/virtualmachines": {
      "get": {
        "description": "Get a list of all VirtualMachine objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "listVirtualMachineForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/v1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineinstancemigrations": {
      "get": {
        "description": "Watch a VirtualMachineInstanceMigration object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "watchNamespacedVirtualMachineInstanceMigration",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/v1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachineinstances": {
      "get": {
        "description": "Watch a VirtualMachineInstance object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "watchNamespacedVirtualMachineInstance",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/v1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/virtualmachines": {
      "get": {
        "description": "Watch a VirtualMachine object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "watchNamespacedVirtualMachine",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/v1/watch/virtualmachineinstancemigrations": {
      "get": {
        "description": "Watch a VirtualMachineInstanceMigrationList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "watchVirtualMachineInstanceMigrationListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/v1/watch/virtualmachineinstances": {
      "get": {
        "description": "Watch a VirtualMachineInstanceList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "watchVirtualMachineInstanceListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubevirt.io/v1/watch/virtualmachines": {
      "get": {
        "description": "Watch a VirtualMachineList object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "kubevirt.io"
        ],
        "operationId": "watchVirtualMachineListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/management.cattle.io/": {
      "get": {
        "description": "Get API group versions",
        "produces": [
          "application/json"
        ],
        "tags": [
          "management.cattle.io"
        ],
        "operationId": "getAPIGroup-management.cattle.io",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.APIGroup"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/apis/management.cattle.io/v3/": {
      "get": {
        "description": "Get API Resources",
        "produces": [
          "application/json"
        ],
        "tags": [
          "management.cattle.io"
        ],
        "operationId": "getAPIResources-management.cattle.io-v3",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.APIResourceList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/apis/management.cattle.io/v3/users": {
      "get": {
        "description": "Get a list of User objects.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "management.cattle.io"
        ],
        "operationId": "listNamespacedUser",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "If true, partially initialized resources are included in the response.",
            "name": "includeUninitialized",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Object name and auth scope, such as for teams and projects",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "TimeoutSeconds for the list/watch call.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/management.cattle.io.v3.UserList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Create a User object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "management.cattle.io"
        ],
        "operationId": "createNamespacedUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/management.cattle.io.v3.User"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Object name and auth scope, such as for teams and projects",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/management.cattle.io.v3.User"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/management.cattle.io.v3.User"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/management.cattle.io.v3.User"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/apis/management.cattle.io/v3/users/{name:[a-z0-9][a-z0-9\\-]*}": {
      "get": {
        "description": "Get a User object.",
        "produces": [
          "application/json",
          "application/yaml",
          "application/json;stream=watch"
        ],
        "tags": [
          "management.cattle.io"
        ],
        "operationId": "readNamespacedUser",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
            "name": "exact",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Should this value be exported. Export strips fields that a user can not specify.",
            "name": "export",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/management.cattle.io.v3.User"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Update a User object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "management.cattle.io"
        ],
        "operationId": "replaceNamespacedUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/management.cattle.io.v3.User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/management.cattle.io.v3.User"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/management.cattle.io.v3.User"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a User object.",
        "consumes": [
          "application/json",
          "application/yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "tags": [
          "management.cattle.io"
        ],
        "operationId": "deleteNamespacedUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "description": "Patch a User object.",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "management.cattle.io"
        ],
        "operationId": "patchNamespacedUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/management.cattle.io.v3.User"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Name of the resource",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "Object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apis/management.cattle.io/v3/watch/users": {
      "get": {
        "description": "Watch a User object.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "management.cattle.io"
        ],
        "operationId": "watchNamespacedUser",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Object name and auth scope, such as for teams and projects",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.WatchEvent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "If true, partially initialized resources are included in the response.",
          "name": "includeUninitialized",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "TimeoutSeconds for the list/watch call.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/v3-public/localProviders/local?action=login": {
      "post": {
        "description": "local auth login.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "v3-public"
        ],
        "operationId": "localAuthLogin",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/management.cattle.io.v3.BasicLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/k8s.io.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "cdi.kubevirt.io.v1alpha1.DataVolumeBlankImage": {
      "description": "DataVolumeBlankImage provides the parameters to create a new raw blank image for the PVC",
      "type": "object"
    },
    "cdi.kubevirt.io.v1alpha1.DataVolumeCheckpoint": {
      "description": "DataVolumeCheckpoint defines a stage in a warm migration.",
      "type": "object",
      "required": [
        "previous",
        "current"
      ],
      "properties": {
        "current": {
          "description": "Current is the identifier of the snapshot created for this checkpoint.",
          "type": "string"
        },
        "previous": {
          "description": "Previous is the identifier of the snapshot from the previous checkpoint.",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1alpha1.DataVolumeSource": {
      "description": "DataVolumeSource represents the source for our Data Volume, this can be HTTP, Imageio, S3, Registry or an existing PVC",
      "type": "object",
      "properties": {
        "blank": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1alpha1.DataVolumeBlankImage"
        },
        "http": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1alpha1.DataVolumeSourceHTTP"
        },
        "imageio": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1alpha1.DataVolumeSourceImageIO"
        },
        "pvc": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1alpha1.DataVolumeSourcePVC"
        },
        "registry": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1alpha1.DataVolumeSourceRegistry"
        },
        "s3": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1alpha1.DataVolumeSourceS3"
        },
        "upload": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1alpha1.DataVolumeSourceUpload"
        },
        "vddk": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1alpha1.DataVolumeSourceVDDK"
        }
      }
    },
    "cdi.kubevirt.io.v1alpha1.DataVolumeSourceHTTP": {
      "description": "DataVolumeSourceHTTP can be either an http or https endpoint, with an optional basic auth user name and password, and an optional configmap containing additional CAs",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "certConfigMap": {
          "description": "CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef A Secret reference, the secret should contain accessKeyId (user name) base64 encoded, and secretKey (password) also base64 encoded",
          "type": "string"
        },
        "url": {
          "description": "URL is the URL of the http(s) endpoint",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1alpha1.DataVolumeSourceImageIO": {
      "description": "DataVolumeSourceImageIO provides the parameters to create a Data Volume from an imageio source",
      "type": "object",
      "required": [
        "url",
        "diskId"
      ],
      "properties": {
        "certConfigMap": {
          "description": "CertConfigMap provides a reference to the CA cert",
          "type": "string"
        },
        "diskId": {
          "description": "DiskID provides id of a disk to be imported",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef provides the secret reference needed to access the ovirt-engine",
          "type": "string"
        },
        "url": {
          "description": "URL is the URL of the ovirt-engine",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1alpha1.DataVolumeSourcePVC": {
      "description": "DataVolumeSourcePVC provides the parameters to create a Data Volume from an existing PVC",
      "type": "object",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "name": {
          "description": "The name of the source PVC",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the source PVC",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1alpha1.DataVolumeSourceRegistry": {
      "description": "DataVolumeSourceRegistry provides the parameters to create a Data Volume from an registry source",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "certConfigMap": {
          "description": "CertConfigMap provides a reference to the Registry certs",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef provides the secret reference needed to access the Registry source",
          "type": "string"
        },
        "url": {
          "description": "URL is the url of the Docker registry source",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1alpha1.DataVolumeSourceS3": {
      "description": "DataVolumeSourceS3 provides the parameters to create a Data Volume from an S3 source",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "certConfigMap": {
          "description": "CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef provides the secret reference needed to access the S3 source",
          "type": "string"
        },
        "url": {
          "description": "URL is the url of the S3 source",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1alpha1.DataVolumeSourceUpload": {
      "description": "DataVolumeSourceUpload provides the parameters to create a Data Volume by uploading the source",
      "type": "object"
    },
    "cdi.kubevirt.io.v1alpha1.DataVolumeSourceVDDK": {
      "description": "DataVolumeSourceVDDK provides the parameters to create a Data Volume from a Vmware source",
      "type": "object",
      "properties": {
        "backingFile": {
          "description": "BackingFile is the path to the virtual hard disk to migrate from vCenter/ESXi",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef provides a reference to a secret containing the username and password needed to access the vCenter or ESXi host",
          "type": "string"
        },
        "thumbprint": {
          "description": "Thumbprint is the certificate thumbprint of the vCenter or ESXi host",
          "type": "string"
        },
        "url": {
          "description": "URL is the URL of the vCenter or ESXi host with the VM to migrate",
          "type": "string"
        },
        "uuid": {
          "description": "UUID is the UUID of the virtual machine that the backing file is attached to in vCenter/ESXi",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1alpha1.DataVolumeSpec": {
      "description": "DataVolumeSpec defines the DataVolume type specification",
      "type": "object",
      "required": [
        "source",
        "pvc"
      ],
      "properties": {
        "checkpoints": {
          "description": "Checkpoints is a list of DataVolumeCheckpoints, representing stages in a multistage import.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/cdi.kubevirt.io.v1alpha1.DataVolumeCheckpoint"
          }
        },
        "contentType": {
          "description": "DataVolumeContentType options: \"kubevirt\", \"archive\"",
          "type": "string"
        },
        "finalCheckpoint": {
          "description": "FinalCheckpoint indicates whether the current DataVolumeCheckpoint is the final checkpoint.",
          "type": "boolean"
        },
        "preallocation": {
          "description": "Preallocation controls whether storage for DataVolumes should be allocated in advance.",
          "type": "boolean"
        },
        "pvc": {
          "description": "PVC is the PVC specification",
          "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimSpec"
        },
        "source": {
          "description": "Source is the src of the data for the requested DataVolume",
          "$ref": "#/definitions/cdi.kubevirt.io.v1alpha1.DataVolumeSource"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolume": {
      "description": "DataVolume is an abstraction on top of PersistentVolumeClaims to allow easy population of those PersistentVolumeClaims with relation to VirtualMachines",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeSpec"
        },
        "status": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeStatus"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeBlankImage": {
      "description": "DataVolumeBlankImage provides the parameters to create a new raw blank image for the PVC",
      "type": "object"
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeCheckpoint": {
      "description": "DataVolumeCheckpoint defines a stage in a warm migration.",
      "type": "object",
      "required": [
        "previous",
        "current"
      ],
      "properties": {
        "current": {
          "description": "Current is the identifier of the snapshot created for this checkpoint.",
          "type": "string"
        },
        "previous": {
          "description": "Previous is the identifier of the snapshot from the previous checkpoint.",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeCondition": {
      "description": "DataVolumeCondition represents the state of a data volume condition.",
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastHeartbeatTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeList": {
      "description": "DataVolumeList provides the needed parameters to do request a list of Data Volumes from the system",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items provides a list of DataVolumes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolume"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeSource": {
      "description": "DataVolumeSource represents the source for our Data Volume, this can be HTTP, Imageio, S3, Registry or an existing PVC",
      "type": "object",
      "properties": {
        "blank": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeBlankImage"
        },
        "http": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeSourceHTTP"
        },
        "imageio": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeSourceImageIO"
        },
        "pvc": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeSourcePVC"
        },
        "registry": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeSourceRegistry"
        },
        "s3": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeSourceS3"
        },
        "upload": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeSourceUpload"
        },
        "vddk": {
          "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeSourceVDDK"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeSourceHTTP": {
      "description": "DataVolumeSourceHTTP can be either an http or https endpoint, with an optional basic auth user name and password, and an optional configmap containing additional CAs",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "certConfigMap": {
          "description": "CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef A Secret reference, the secret should contain accessKeyId (user name) base64 encoded, and secretKey (password) also base64 encoded",
          "type": "string"
        },
        "url": {
          "description": "URL is the URL of the http(s) endpoint",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeSourceImageIO": {
      "description": "DataVolumeSourceImageIO provides the parameters to create a Data Volume from an imageio source",
      "type": "object",
      "required": [
        "url",
        "diskId"
      ],
      "properties": {
        "certConfigMap": {
          "description": "CertConfigMap provides a reference to the CA cert",
          "type": "string"
        },
        "diskId": {
          "description": "DiskID provides id of a disk to be imported",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef provides the secret reference needed to access the ovirt-engine",
          "type": "string"
        },
        "url": {
          "description": "URL is the URL of the ovirt-engine",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeSourcePVC": {
      "description": "DataVolumeSourcePVC provides the parameters to create a Data Volume from an existing PVC",
      "type": "object",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "name": {
          "description": "The name of the source PVC",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the source PVC",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeSourceRegistry": {
      "description": "DataVolumeSourceRegistry provides the parameters to create a Data Volume from an registry source",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "certConfigMap": {
          "description": "CertConfigMap provides a reference to the Registry certs",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef provides the secret reference needed to access the Registry source",
          "type": "string"
        },
        "url": {
          "description": "URL is the url of the Docker registry source",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeSourceS3": {
      "description": "DataVolumeSourceS3 provides the parameters to create a Data Volume from an S3 source",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "certConfigMap": {
          "description": "CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef provides the secret reference needed to access the S3 source",
          "type": "string"
        },
        "url": {
          "description": "URL is the url of the S3 source",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeSourceUpload": {
      "description": "DataVolumeSourceUpload provides the parameters to create a Data Volume by uploading the source",
      "type": "object"
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeSourceVDDK": {
      "description": "DataVolumeSourceVDDK provides the parameters to create a Data Volume from a Vmware source",
      "type": "object",
      "properties": {
        "backingFile": {
          "description": "BackingFile is the path to the virtual hard disk to migrate from vCenter/ESXi",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef provides a reference to a secret containing the username and password needed to access the vCenter or ESXi host",
          "type": "string"
        },
        "thumbprint": {
          "description": "Thumbprint is the certificate thumbprint of the vCenter or ESXi host",
          "type": "string"
        },
        "url": {
          "description": "URL is the URL of the vCenter or ESXi host with the VM to migrate",
          "type": "string"
        },
        "uuid": {
          "description": "UUID is the UUID of the virtual machine that the backing file is attached to in vCenter/ESXi",
          "type": "string"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeSpec": {
      "description": "DataVolumeSpec defines the DataVolume type specification",
      "type": "object",
      "required": [
        "source",
        "pvc"
      ],
      "properties": {
        "checkpoints": {
          "description": "Checkpoints is a list of DataVolumeCheckpoints, representing stages in a multistage import.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeCheckpoint"
          }
        },
        "contentType": {
          "description": "DataVolumeContentType options: \"kubevirt\", \"archive\"",
          "type": "string"
        },
        "finalCheckpoint": {
          "description": "FinalCheckpoint indicates whether the current DataVolumeCheckpoint is the final checkpoint.",
          "type": "boolean"
        },
        "preallocation": {
          "description": "Preallocation controls whether storage for DataVolumes should be allocated in advance.",
          "type": "boolean"
        },
        "pvc": {
          "description": "PVC is the PVC specification",
          "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimSpec"
        },
        "source": {
          "description": "Source is the src of the data for the requested DataVolume",
          "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeSource"
        }
      }
    },
    "cdi.kubevirt.io.v1beta1.DataVolumeStatus": {
      "description": "DataVolumeStatus contains the current status of the DataVolume",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cdi.kubevirt.io.v1beta1.DataVolumeCondition"
          }
        },
        "phase": {
          "description": "Phase is the current phase of the data volume",
          "type": "string"
        },
        "progress": {
          "type": "string"
        },
        "restartCount": {
          "description": "RestartCount is the number of times the pod populating the DataVolume has restarted",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "harvesterhci.io.v1beta1.Condition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another.",
          "type": "string"
        },
        "lastUpdateTime": {
          "description": "The last time this condition was updated.",
          "type": "string"
        },
        "message": {
          "description": "Human-readable message indicating details about last transition",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of the condition.",
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.Error": {
      "description": "Error is the last error encountered during the snapshot/restore",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        }
      }
    },
    "harvesterhci.io.v1beta1.KeyPair": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPairSpec"
        },
        "status": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPairStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.KeyPairList": {
      "description": "KeyPairList is a list of KeyPair resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.KeyPair"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.KeyPairSpec": {
      "type": "object",
      "required": [
        "publicKey"
      ],
      "properties": {
        "publicKey": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.KeyPairStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "fingerPrint": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.NodeUpgradeStatus": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.PersistentVolumeClaimSpec": {
      "type": "object",
      "required": [
        "name",
        "namespace"
      ],
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimSpec"
        }
      }
    },
    "harvesterhci.io.v1beta1.SourceSpec": {
      "description": "SourceSpec contains the appropriate spec for the resource being snapshotted",
      "type": "object",
      "required": [
        "name",
        "namespace"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "virtualMachineSpec": {
          "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineSpec"
        }
      }
    },
    "harvesterhci.io.v1beta1.SupportBundle": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundleSpec"
        },
        "status": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundleStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.SupportBundleList": {
      "description": "SupportBundleList is a list of SupportBundle resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.SupportBundle"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.SupportBundleSpec": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "issueURL": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.SupportBundleStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "filename": {
          "type": "string"
        },
        "filesize": {
          "type": "integer",
          "format": "int64"
        },
        "progress": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.Upgrade": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.UpgradeSpec"
        },
        "status": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.UpgradeStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.UpgradeList": {
      "description": "UpgradeList is a list of Upgrade resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Upgrade"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.UpgradeSpec": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.UpgradeStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "nodeStatuses": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.NodeUpgradeStatus"
          }
        },
        "previousVersion": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineBackup": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupSpec"
        },
        "status": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineBackupContent": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContentSpec"
        },
        "status": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContentStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineBackupContentList": {
      "description": "VirtualMachineBackupContentList is a list of VirtualMachineBackupContent resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackupContent"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineBackupContentSpec": {
      "description": "VirtualMachineBackupContentSpec is the spec for a VirtualMachineBackupContent resource",
      "type": "object",
      "required": [
        "source"
      ],
      "properties": {
        "source": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.SourceSpec"
        },
        "virtualMachineBackupName": {
          "type": "string"
        },
        "volumeBackups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VolumeBackup"
          }
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineBackupContentStatus": {
      "description": "VirtualMachineBackupContentStatus is the status for a VirtualMachineBackupStatus resource",
      "type": "object",
      "properties": {
        "creationTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "error": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.Error"
        },
        "readyToUse": {
          "type": "boolean"
        },
        "volumeBackupStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VolumeBackupStatus"
          }
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineBackupList": {
      "description": "VirtualMachineBackupList is a list of VirtualMachineBackup resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineBackup"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineBackupSpec": {
      "type": "object",
      "required": [
        "source"
      ],
      "properties": {
        "source": {
          "$ref": "#/definitions/k8s.io.v1.TypedLocalObjectReference"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineBackupStatus": {
      "description": "VirtualMachineBackupStatus is the status for a VirtualMachineBackup resource",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "error": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.Error"
        },
        "readyToUse": {
          "type": "boolean"
        },
        "sourceUID": {
          "type": "string"
        },
        "virtualMachineBackupContentName": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineImage": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImageSpec"
        },
        "status": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImageStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineImageList": {
      "description": "VirtualMachineImageList is a list of VirtualMachineImage resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineImage"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineImageSpec": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "secretRef": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineImageStatus": {
      "type": "object",
      "properties": {
        "appliedUrl": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineRestore": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestoreSpec"
        },
        "status": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestoreStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineRestoreList": {
      "description": "VirtualMachineRestoreList is a list of VirtualMachineRestore resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineRestore"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineRestoreSpec": {
      "description": "VirtualMachineRestoreSpec is the spec for a VirtualMachineRestore resource",
      "type": "object",
      "required": [
        "target",
        "virtualMachineBackupName"
      ],
      "properties": {
        "deletionPolicy": {
          "type": "string"
        },
        "newVM": {
          "type": "boolean"
        },
        "target": {
          "description": "initially only VirtualMachine type supported",
          "$ref": "#/definitions/k8s.io.v1.TypedLocalObjectReference"
        },
        "virtualMachineBackupName": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineRestoreStatus": {
      "description": "VirtualMachineRestoreStatus is the spec for a VirtualMachineRestore resource",
      "type": "object",
      "properties": {
        "complete": {
          "type": "boolean"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "deletedDataVolumes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "restoreTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "restores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VolumeRestore"
          }
        },
        "targetUID": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplate": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateSpec"
        },
        "status": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateList": {
      "description": "VirtualMachineTemplateList is a list of VirtualMachineTemplate resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplate"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateSpec": {
      "type": "object",
      "properties": {
        "defaultVersionId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateStatus": {
      "type": "object",
      "properties": {
        "defaultVersion": {
          "type": "integer",
          "format": "int32"
        },
        "latestVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateVersion": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec"
        },
        "status": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList": {
      "description": "VirtualMachineTemplateVersionList is a list of VirtualMachineTemplateVersion resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec": {
      "type": "object",
      "required": [
        "templateId"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "imageId": {
          "type": "string"
        },
        "keyPairIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateId": {
          "type": "string"
        },
        "vm": {
          "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineSpec"
        }
      }
    },
    "harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/harvesterhci.io.v1beta1.Condition"
          }
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "harvesterhci.io.v1beta1.VolumeBackup": {
      "description": "VolumeBackup contains the volume data need to restore a PVC",
      "type": "object",
      "required": [
        "volumeName",
        "persistentVolumeClaim"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.PersistentVolumeClaimSpec"
        },
        "volumeName": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VolumeBackupStatus": {
      "description": "VolumeBackupStatus is the status of a VolumeBackup",
      "type": "object",
      "required": [
        "volumeBackupName"
      ],
      "properties": {
        "creationTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "error": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.Error"
        },
        "readyToUse": {
          "type": "boolean"
        },
        "volumeBackupName": {
          "type": "string"
        }
      }
    },
    "harvesterhci.io.v1beta1.VolumeRestore": {
      "description": "VolumeRestore contains the volume data need to restore a PVC",
      "type": "object",
      "required": [
        "volumeName",
        "persistentVolumeClaimSpec",
        "volumeBackupName"
      ],
      "properties": {
        "persistentVolumeClaimSpec": {
          "$ref": "#/definitions/harvesterhci.io.v1beta1.PersistentVolumeClaimSpec"
        },
        "volumeBackupName": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      }
    },
    "k8s.io.apimachinery.pkg.api.resource.Quantity": {
      "description": "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n\u003cquantity\u003e        ::= \u003csignedNumber\u003e\u003csuffix\u003e\n  (Note that \u003csuffix\u003e may be empty, from the \"\" case in \u003cdecimalSI\u003e.)\n\u003cdigit\u003e           ::= 0 | 1 | ... | 9 \u003cdigits\u003e          ::= \u003cdigit\u003e | \u003cdigit\u003e\u003cdigits\u003e \u003cnumber\u003e          ::= \u003cdigits\u003e | \u003cdigits\u003e.\u003cdigits\u003e | \u003cdigits\u003e. | .\u003cdigits\u003e \u003csign\u003e            ::= \"+\" | \"-\" \u003csignedNumber\u003e    ::= \u003cnumber\u003e | \u003csign\u003e\u003cnumber\u003e \u003csuffix\u003e          ::= \u003cbinarySI\u003e | \u003cdecimalExponent\u003e | \u003cdecimalSI\u003e \u003cbinarySI\u003e        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\u003cdecimalSI\u003e       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\u003cdecimalExponent\u003e ::= \"e\" \u003csignedNumber\u003e | \"E\" \u003csignedNumber\u003e\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.",
      "type": "string"
    },
    "k8s.io.apimachinery.pkg.runtime.RawExtension": {
      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.Object `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// External package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// On the wire, the JSON will look something like this: {\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\": {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\",\n\t},\n}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
      "type": "object"
    },
    "k8s.io.apimachinery.pkg.util.intstr.IntOrString": {
      "description": "IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.",
      "type": "string",
      "format": "int-or-string"
    },
    "k8s.io.v1.APIGroup": {
      "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
      "type": "object",
      "required": [
        "name",
        "versions"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "name is the name of the group.",
          "type": "string"
        },
        "preferredVersion": {
          "description": "preferredVersion is the version preferred by the API server, which probably is the storage version.",
          "$ref": "#/definitions/k8s.io.v1.GroupVersionForDiscovery"
        },
        "serverAddressByClientCIDRs": {
          "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.ServerAddressByClientCIDR"
          }
        },
        "versions": {
          "description": "versions are the versions supported in this group.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.GroupVersionForDiscovery"
          }
        }
      }
    },
    "k8s.io.v1.APIResource": {
      "description": "APIResource specifies the name of a resource and whether it is namespaced.",
      "type": "object",
      "required": [
        "name",
        "singularName",
        "namespaced",
        "kind",
        "verbs"
      ],
      "properties": {
        "categories": {
          "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group": {
          "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
          "type": "string"
        },
        "kind": {
          "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
          "type": "string"
        },
        "name": {
          "description": "name is the plural name of the resource.",
          "type": "string"
        },
        "namespaced": {
          "description": "namespaced indicates if a resource is namespaced or not.",
          "type": "boolean"
        },
        "shortNames": {
          "description": "shortNames is a list of suggested short names of the resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "singularName": {
          "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
          "type": "string"
        },
        "storageVersionHash": {
          "description": "The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.",
          "type": "string"
        },
        "verbs": {
          "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.APIResourceList": {
      "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
      "type": "object",
      "required": [
        "groupVersion",
        "resources"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "groupVersion": {
          "description": "groupVersion is the group and version this APIResourceList is for.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "resources": {
          "description": "resources contains the name of the resources and if they are namespaced.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.APIResource"
          }
        }
      }
    },
    "k8s.io.v1.Affinity": {
      "description": "Affinity is a group of affinity scheduling rules.",
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "description": "Describes node affinity scheduling rules for the pod.",
          "$ref": "#/definitions/k8s.io.v1.NodeAffinity"
        },
        "podAffinity": {
          "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
          "$ref": "#/definitions/k8s.io.v1.PodAffinity"
        },
        "podAntiAffinity": {
          "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
          "$ref": "#/definitions/k8s.io.v1.PodAntiAffinity"
        }
      }
    },
    "k8s.io.v1.DeleteOptions": {
      "description": "DeleteOptions may be provided when deleting an API object.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "dryRun": {
          "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gracePeriodSeconds": {
          "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "type": "integer",
          "format": "int64"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "orphanDependents": {
          "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "type": "boolean"
        },
        "preconditions": {
          "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
          "$ref": "#/definitions/k8s.io.v1.Preconditions"
        },
        "propagationPolicy": {
          "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.DownwardAPIVolumeFile": {
      "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "fieldRef": {
          "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          "$ref": "#/definitions/k8s.io.v1.ObjectFieldSelector"
        },
        "mode": {
          "description": "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
          "type": "string"
        },
        "resourceFieldRef": {
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          "$ref": "#/definitions/k8s.io.v1.ResourceFieldSelector"
        }
      }
    },
    "k8s.io.v1.FieldsV1": {
      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map 'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item 'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list 'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
      "type": "object"
    },
    "k8s.io.v1.GroupVersionForDiscovery": {
      "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
      "type": "object",
      "required": [
        "groupVersion",
        "version"
      ],
      "properties": {
        "groupVersion": {
          "description": "groupVersion specifies the API group and version in the form \"group/version\"",
          "type": "string"
        },
        "version": {
          "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.HTTPGetAction": {
      "description": "HTTPGetAction describes an action based on HTTP Get requests.",
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "host": {
          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
          "type": "string"
        },
        "httpHeaders": {
          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.HTTPHeader"
          }
        },
        "path": {
          "description": "Path to access on the HTTP server.",
          "type": "string"
        },
        "port": {
          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.util.intstr.IntOrString"
        },
        "scheme": {
          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.HTTPHeader": {
      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "description": "The header field name",
          "type": "string"
        },
        "value": {
          "description": "The header field value",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.LabelSelector": {
      "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
      "type": "object",
      "properties": {
        "matchExpressions": {
          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.LabelSelectorRequirement"
          }
        },
        "matchLabels": {
          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "k8s.io.v1.LabelSelectorRequirement": {
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "description": "key is the label key that the selector applies to.",
          "type": "string",
          "x-kubernetes-patch-merge-key": "key",
          "x-kubernetes-patch-strategy": "merge"
        },
        "operator": {
          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
          "type": "string"
        },
        "values": {
          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "k8s.io.v1.ListMeta": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": "string"
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": "integer",
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.LocalObjectReference": {
      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.ManagedFieldsEntry": {
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
          "type": "string"
        },
        "fieldsType": {
          "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
          "type": "string"
        },
        "fieldsV1": {
          "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
          "$ref": "#/definitions/k8s.io.v1.FieldsV1"
        },
        "manager": {
          "description": "Manager is an identifier of the workflow managing these fields.",
          "type": "string"
        },
        "operation": {
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
          "type": "string"
        },
        "time": {
          "description": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'",
          "$ref": "#/definitions/k8s.io.v1.Time"
        }
      }
    },
    "k8s.io.v1.NodeAffinity": {
      "description": "Node affinity is a group of node affinity scheduling rules.",
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.PreferredSchedulingTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
          "$ref": "#/definitions/k8s.io.v1.NodeSelector"
        }
      }
    },
    "k8s.io.v1.NodeSelector": {
      "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
      "type": "object",
      "required": [
        "nodeSelectorTerms"
      ],
      "properties": {
        "nodeSelectorTerms": {
          "description": "Required. A list of node selector terms. The terms are ORed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.NodeSelectorTerm"
          }
        }
      }
    },
    "k8s.io.v1.NodeSelectorRequirement": {
      "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "description": "The label key that the selector applies to.",
          "type": "string"
        },
        "operator": {
          "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
          "type": "string"
        },
        "values": {
          "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "k8s.io.v1.NodeSelectorTerm": {
      "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
      "type": "object",
      "properties": {
        "matchExpressions": {
          "description": "A list of node selector requirements by node's labels.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.NodeSelectorRequirement"
          }
        },
        "matchFields": {
          "description": "A list of node selector requirements by node's fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.NodeSelectorRequirement"
          }
        }
      }
    },
    "k8s.io.v1.ObjectFieldSelector": {
      "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
      "type": "object",
      "required": [
        "fieldPath"
      ],
      "properties": {
        "apiVersion": {
          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
          "type": "string"
        },
        "fieldPath": {
          "description": "Path of the field to select in the specified API version.",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.ObjectMeta": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type": "string"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": "string"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.ManagedFieldsEntry"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.OwnerReference"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": "string"
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
      "type": "object",
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid"
      ],
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
          "type": "boolean"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.Patch": {
      "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
      "type": "object"
    },
    "k8s.io.v1.PersistentVolumeClaimSpec": {
      "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
      "type": "object",
      "properties": {
        "accessModes": {
          "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataSource": {
          "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.",
          "$ref": "#/definitions/k8s.io.v1.TypedLocalObjectReference"
        },
        "resources": {
          "description": "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
          "$ref": "#/definitions/k8s.io.v1.ResourceRequirements"
        },
        "selector": {
          "description": "A label query over volumes to consider for binding.",
          "$ref": "#/definitions/k8s.io.v1.LabelSelector"
        },
        "storageClassName": {
          "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
          "type": "string"
        },
        "volumeMode": {
          "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
          "type": "string"
        },
        "volumeName": {
          "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.PersistentVolumeClaimVolumeSource": {
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
      "type": "object",
      "required": [
        "claimName"
      ],
      "properties": {
        "claimName": {
          "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "type": "string"
        },
        "readOnly": {
          "description": "Will force the ReadOnly setting in VolumeMounts. Default false.",
          "type": "boolean"
        }
      }
    },
    "k8s.io.v1.PodAffinity": {
      "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.PodAffinityTerm"
          }
        }
      }
    },
    "k8s.io.v1.PodAffinityTerm": {
      "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e matches that of any node on which a pod of the set of pods is running",
      "type": "object",
      "required": [
        "topologyKey"
      ],
      "properties": {
        "labelSelector": {
          "description": "A label query over a set of resources, in this case pods.",
          "$ref": "#/definitions/k8s.io.v1.LabelSelector"
        },
        "namespaces": {
          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "topologyKey": {
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.PodAntiAffinity": {
      "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.PodAffinityTerm"
          }
        }
      }
    },
    "k8s.io.v1.PodDNSConfig": {
      "description": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.",
      "type": "object",
      "properties": {
        "nameservers": {
          "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "options": {
          "description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.PodDNSConfigOption"
          }
        },
        "searches": {
          "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "k8s.io.v1.PodDNSConfigOption": {
      "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required.",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.Preconditions": {
      "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
      "type": "object",
      "properties": {
        "resourceVersion": {
          "description": "Specifies the target ResourceVersion",
          "type": "string"
        },
        "uid": {
          "description": "Specifies the target UID.",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.PreferredSchedulingTerm": {
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
      "type": "object",
      "required": [
        "weight",
        "preference"
      ],
      "properties": {
        "preference": {
          "description": "A node selector term, associated with the corresponding weight.",
          "$ref": "#/definitions/k8s.io.v1.NodeSelectorTerm"
        },
        "weight": {
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "k8s.io.v1.ResourceFieldSelector": {
      "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
      "type": "object",
      "required": [
        "resource"
      ],
      "properties": {
        "containerName": {
          "description": "Container name: required for volumes, optional for env vars",
          "type": "string"
        },
        "divisor": {
          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
        },
        "resource": {
          "description": "Required: resource to select",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.ResourceRequirements": {
      "description": "ResourceRequirements describes the compute resource requirements.",
      "type": "object",
      "properties": {
        "limits": {
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "requests": {
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        }
      }
    },
    "k8s.io.v1.ServerAddressByClientCIDR": {
      "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
      "type": "object",
      "required": [
        "clientCIDR",
        "serverAddress"
      ],
      "properties": {
        "clientCIDR": {
          "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
          "type": "string"
        },
        "serverAddress": {
          "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.Status": {
      "description": "Status is a return value for calls that don't return other objects.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "code": {
          "description": "Suggested HTTP return code for this status, 0 if not set.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
          "$ref": "#/definitions/k8s.io.v1.StatusDetails"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the status of this operation.",
          "type": "string"
        },
        "metadata": {
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        },
        "reason": {
          "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
          "type": "string"
        },
        "status": {
          "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.StatusCause": {
      "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
      "type": "object",
      "properties": {
        "field": {
          "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
          "type": "string"
        },
        "reason": {
          "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.StatusDetails": {
      "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
      "type": "object",
      "properties": {
        "causes": {
          "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.StatusCause"
          }
        },
        "group": {
          "description": "The group attribute of the resource associated with the status StatusReason.",
          "type": "string"
        },
        "kind": {
          "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
          "type": "string"
        },
        "retryAfterSeconds": {
          "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.TCPSocketAction": {
      "description": "TCPSocketAction describes an action based on opening a socket",
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "host": {
          "description": "Optional: Host name to connect to, defaults to the pod IP.",
          "type": "string"
        },
        "port": {
          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "k8s.io.v1.Time": {
      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
      "type": "string",
      "format": "date-time"
    },
    "k8s.io.v1.Toleration": {
      "description": "The pod this Toleration is attached to tolerates any taint that matches the triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
      "type": "object",
      "properties": {
        "effect": {
          "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
          "type": "string"
        },
        "key": {
          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
          "type": "string"
        },
        "operator": {
          "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
          "type": "string"
        },
        "tolerationSeconds": {
          "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.TypedLocalObjectReference": {
      "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.",
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the type of resource being referenced",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of resource being referenced",
          "type": "string"
        }
      }
    },
    "k8s.io.v1.WatchEvent": {
      "description": "Event represents a single event to a watched resource.",
      "type": "object",
      "required": [
        "type",
        "object"
      ],
      "properties": {
        "object": {
          "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context.",
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.runtime.RawExtension"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "k8s.io.v1.WeightedPodAffinityTerm": {
      "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
      "type": "object",
      "required": [
        "weight",
        "podAffinityTerm"
      ],
      "properties": {
        "podAffinityTerm": {
          "description": "Required. A pod affinity term, associated with the corresponding weight.",
          "$ref": "#/definitions/k8s.io.v1.PodAffinityTerm"
        },
        "weight": {
          "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "kubevirt.io.v1.AccessCredential": {
      "description": "AccessCredential represents a credential source that can be used to authorize remote access to the vm guest Only one of its members may be specified.",
      "type": "object",
      "properties": {
        "sshPublicKey": {
          "description": "SSHPublicKey represents the source and method of applying a ssh public key into a guest virtual machine.",
          "$ref": "#/definitions/kubevirt.io.v1.SSHPublicKeyAccessCredential"
        },
        "userPassword": {
          "description": "UserPassword represents the source and method for applying a guest user's password",
          "$ref": "#/definitions/kubevirt.io.v1.UserPasswordAccessCredential"
        }
      }
    },
    "kubevirt.io.v1.AccessCredentialSecretSource": {
      "type": "object",
      "required": [
        "secretName"
      ],
      "properties": {
        "secretName": {
          "description": "SecretName represents the name of the secret in the VMI's namespace",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.AddVolumeOptions": {
      "description": "AddVolumeOptions is provided when dynamically hot plugging a volume and disk",
      "type": "object",
      "required": [
        "name",
        "disk",
        "volumeSource"
      ],
      "properties": {
        "disk": {
          "description": "Disk represents the hotplug disk that will be plugged into the running VMI",
          "$ref": "#/definitions/kubevirt.io.v1.Disk"
        },
        "name": {
          "description": "Name represents the name that will be used to map the disk to the corresponding volume. This overrides any name set inside the Disk struct itself.",
          "type": "string"
        },
        "volumeSource": {
          "description": "VolumeSource represents the source of the volume to map to the disk.",
          "$ref": "#/definitions/kubevirt.io.v1.HotplugVolumeSource"
        }
      }
    },
    "kubevirt.io.v1.BIOS": {
      "description": "If set (default), BIOS will be used.",
      "type": "object",
      "properties": {
        "useSerial": {
          "description": "If set, the BIOS output will be transmitted over serial",
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.v1.Bootloader": {
      "description": "Represents the firmware blob used to assist in the domain creation process. Used for setting the QEMU BIOS file path for the libvirt domain.",
      "type": "object",
      "properties": {
        "bios": {
          "description": "If set (default), BIOS will be used.",
          "$ref": "#/definitions/kubevirt.io.v1.BIOS"
        },
        "efi": {
          "description": "If set, EFI will be used instead of BIOS.",
          "$ref": "#/definitions/kubevirt.io.v1.EFI"
        }
      }
    },
    "kubevirt.io.v1.CDRomTarget": {
      "type": "object",
      "properties": {
        "bus": {
          "description": "Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.",
          "type": "string"
        },
        "readonly": {
          "description": "ReadOnly. Defaults to true.",
          "type": "boolean"
        },
        "tray": {
          "description": "Tray indicates if the tray of the device is open or closed. Allowed values are \"open\" and \"closed\". Defaults to closed.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.CPU": {
      "description": "CPU allows specifying the CPU topology.",
      "type": "object",
      "properties": {
        "cores": {
          "description": "Cores specifies the number of cores inside the vmi. Must be a value greater or equal 1.",
          "type": "integer",
          "format": "int64"
        },
        "dedicatedCpuPlacement": {
          "description": "DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance on a node with enough dedicated pCPUs and pin the vCPUs to it.",
          "type": "boolean"
        },
        "features": {
          "description": "Features specifies the CPU features list inside the VMI.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.CPUFeature"
          }
        },
        "isolateEmulatorThread": {
          "description": "IsolateEmulatorThread requests one more dedicated pCPU to be allocated for the VMI to place the emulator thread on it.",
          "type": "boolean"
        },
        "model": {
          "description": "Model specifies the CPU model inside the VMI. List of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map. It is possible to specify special cases like \"host-passthrough\" to get the same CPU as the node and \"host-model\" to get CPU closest to the node one. Defaults to host-model.",
          "type": "string"
        },
        "sockets": {
          "description": "Sockets specifies the number of sockets inside the vmi. Must be a value greater or equal 1.",
          "type": "integer",
          "format": "int64"
        },
        "threads": {
          "description": "Threads specifies the number of threads inside the vmi. Must be a value greater or equal 1.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "kubevirt.io.v1.CPUFeature": {
      "description": "CPUFeature allows specifying a CPU feature.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name of the CPU feature",
          "type": "string"
        },
        "policy": {
          "description": "Policy is the CPU feature attribute which can have the following attributes: force    - The virtual CPU will claim the feature is supported regardless of it being supported by host CPU. require  - Guest creation will fail unless the feature is supported by the host CPU or the hypervisor is able to emulate it. optional - The feature will be supported by virtual CPU if and only if it is supported by host CPU. disable  - The feature will not be supported by virtual CPU. forbid   - Guest creation will fail if the feature is supported by host CPU. Defaults to require",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.Chassis": {
      "description": "Chassis specifies the chassis info passed to the domain.",
      "type": "object",
      "properties": {
        "asset": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "serial": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.Clock": {
      "description": "Represents the clock and timers of a vmi.",
      "type": "object",
      "properties": {
        "timer": {
          "description": "Timer specifies whih timers are attached to the vmi.",
          "$ref": "#/definitions/kubevirt.io.v1.Timer"
        },
        "timezone": {
          "description": "Timezone sets the guest clock to the specified timezone. Zone name follows the TZ environment variable format (e.g. 'America/New_York').",
          "type": "string"
        },
        "utc": {
          "description": "UTC sets the guest clock to UTC on each boot. If an offset is specified, guest changes to the clock will be kept during reboots and are not reset.",
          "$ref": "#/definitions/kubevirt.io.v1.ClockOffsetUTC"
        }
      }
    },
    "kubevirt.io.v1.ClockOffsetUTC": {
      "description": "UTC sets the guest clock to UTC on each boot.",
      "type": "object",
      "properties": {
        "offsetSeconds": {
          "description": "OffsetSeconds specifies an offset in seconds, relative to UTC. If set, guest changes to the clock will be kept during reboots and not reset.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "kubevirt.io.v1.CloudInitConfigDriveSource": {
      "description": "Represents a cloud-init config drive user data source. More info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html",
      "type": "object",
      "properties": {
        "networkData": {
          "description": "NetworkData contains config drive inline cloud-init networkdata.",
          "type": "string"
        },
        "networkDataBase64": {
          "description": "NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.",
          "type": "string"
        },
        "networkDataSecretRef": {
          "description": "NetworkDataSecretRef references a k8s secret that contains config drive networkdata.",
          "$ref": "#/definitions/k8s.io.v1.LocalObjectReference"
        },
        "secretRef": {
          "description": "UserDataSecretRef references a k8s secret that contains config drive userdata.",
          "$ref": "#/definitions/k8s.io.v1.LocalObjectReference"
        },
        "userData": {
          "description": "UserData contains config drive inline cloud-init userdata.",
          "type": "string"
        },
        "userDataBase64": {
          "description": "UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.CloudInitNoCloudSource": {
      "description": "Represents a cloud-init nocloud user data source. More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html",
      "type": "object",
      "properties": {
        "networkData": {
          "description": "NetworkData contains NoCloud inline cloud-init networkdata.",
          "type": "string"
        },
        "networkDataBase64": {
          "description": "NetworkDataBase64 contains NoCloud cloud-init networkdata as a base64 encoded string.",
          "type": "string"
        },
        "networkDataSecretRef": {
          "description": "NetworkDataSecretRef references a k8s secret that contains NoCloud networkdata.",
          "$ref": "#/definitions/k8s.io.v1.LocalObjectReference"
        },
        "secretRef": {
          "description": "UserDataSecretRef references a k8s secret that contains NoCloud userdata.",
          "$ref": "#/definitions/k8s.io.v1.LocalObjectReference"
        },
        "userData": {
          "description": "UserData contains NoCloud inline cloud-init userdata.",
          "type": "string"
        },
        "userDataBase64": {
          "description": "UserDataBase64 contains NoCloud cloud-init userdata as a base64 encoded string.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation": {
      "type": "object"
    },
    "kubevirt.io.v1.ConfigMapVolumeSource": {
      "description": "ConfigMapVolumeSource adapts a ConfigMap into a volume. More info: https://kubernetes.io/docs/concepts/storage/volumes/#configmap",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or it's keys must be defined",
          "type": "boolean"
        },
        "volumeLabel": {
          "description": "The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values. Typical values are \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart).",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.ContainerDiskSource": {
      "description": "Represents a docker image with an embedded disk.",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "description": "Image is the name of the image with the embedded disk.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
          "type": "string"
        },
        "imagePullSecret": {
          "description": "ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.",
          "type": "string"
        },
        "path": {
          "description": "Path defines the path to disk file in the container",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.DHCPOptions": {
      "description": "Extra DHCP options to use in the interface.",
      "type": "object",
      "properties": {
        "bootFileName": {
          "description": "If specified will pass option 67 to interface's DHCP server",
          "type": "string"
        },
        "ntpServers": {
          "description": "If specified will pass the configured NTP server to the VM via DHCP option 042.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "privateOptions": {
          "description": "If specified will pass extra DHCP options for private use, range: 224-254",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.DHCPPrivateOptions"
          }
        },
        "tftpServerName": {
          "description": "If specified will pass option 66 to interface's DHCP server",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.DHCPPrivateOptions": {
      "description": "DHCPExtraOptions defines Extra DHCP options for a VM.",
      "type": "object",
      "required": [
        "option",
        "value"
      ],
      "properties": {
        "option": {
          "description": "Option is an Integer value from 224-254 Required.",
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "description": "Value is a String value for the Option provided Required.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.DataVolumeSource": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name represents the name of the DataVolume in the same namespace",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.DataVolumeTemplateDummyStatus": {
      "type": "object"
    },
    "kubevirt.io.v1.DataVolumeTemplateSpec": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "description": "DataVolumeSpec contains the DataVolume specification.",
          "$ref": "#/definitions/cdi.kubevirt.io.v1alpha1.DataVolumeSpec"
        },
        "status": {
          "description": "DataVolumeTemplateDummyStatus is here simply for backwards compatibility with a previous API.",
          "$ref": "#/definitions/kubevirt.io.v1.DataVolumeTemplateDummyStatus"
        }
      }
    },
    "kubevirt.io.v1.Devices": {
      "type": "object",
      "properties": {
        "autoattachGraphicsDevice": {
          "description": "Whether to attach the default graphics device or not. VNC will not be available if set to false. Defaults to true.",
          "type": "boolean"
        },
        "autoattachMemBalloon": {
          "description": "Whether to attach the Memory balloon device with default period. Period can be adjusted in virt-config. Defaults to true.",
          "type": "boolean"
        },
        "autoattachPodInterface": {
          "description": "Whether to attach a pod network interface. Defaults to true.",
          "type": "boolean"
        },
        "autoattachSerialConsole": {
          "description": "Whether to attach the default serial console or not. Serial console access will not be available if set to false. Defaults to true.",
          "type": "boolean"
        },
        "blockMultiQueue": {
          "description": "Whether or not to enable virtio multi-queue for block devices. Defaults to false.",
          "type": "boolean"
        },
        "disableHotplug": {
          "description": "DisableHotplug disabled the ability to hotplug disks.",
          "type": "boolean"
        },
        "disks": {
          "description": "Disks describes disks, cdroms, floppy and luns which are connected to the vmi.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.Disk"
          }
        },
        "filesystems": {
          "description": "Filesystems describes filesystem which is connected to the vmi.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.Filesystem"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "gpus": {
          "description": "Whether to attach a GPU device to the vmi.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.GPU"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "hostDevices": {
          "description": "Whether to attach a host device to the vmi.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.HostDevice"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "inputs": {
          "description": "Inputs describe input devices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.Input"
          }
        },
        "interfaces": {
          "description": "Interfaces describe network interfaces which are added to the vmi.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.Interface"
          }
        },
        "networkInterfaceMultiqueue": {
          "description": "If specified, virtual network interfaces configured with a virtio bus will also enable the vhost multiqueue feature for network devices. The number of queues created depends on additional factors of the VirtualMachineInstance, like the number of guest CPUs.",
          "type": "boolean"
        },
        "rng": {
          "description": "Whether to have random number generator from host",
          "$ref": "#/definitions/kubevirt.io.v1.Rng"
        },
        "useVirtioTransitional": {
          "description": "Fall back to legacy virtio 0.9 support if virtio bus is selected on devices. This is helpful for old machines like CentOS6 or RHEL6 which do not understand virtio_non_transitional (virtio 1.0).",
          "type": "boolean"
        },
        "watchdog": {
          "description": "Watchdog describes a watchdog device which can be added to the vmi.",
          "$ref": "#/definitions/kubevirt.io.v1.Watchdog"
        }
      }
    },
    "kubevirt.io.v1.Disk": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "bootOrder": {
          "description": "BootOrder is an integer value \u003e 0, used to determine ordering of boot devices. Lower values take precedence. Each disk or interface that has a boot order must have a unique value. Disks without a boot order are not tried if a disk with a boot order exists.",
          "type": "integer",
          "format": "int32"
        },
        "cache": {
          "description": "Cache specifies which kvm disk cache mode should be used. Supported values are: CacheNone, CacheWriteThrough.",
          "type": "string"
        },
        "cdrom": {
          "description": "Attach a volume as a cdrom to the vmi.",
          "$ref": "#/definitions/kubevirt.io.v1.CDRomTarget"
        },
        "dedicatedIOThread": {
          "description": "dedicatedIOThread indicates this disk should have an exclusive IO Thread. Enabling this implies useIOThreads = true. Defaults to false.",
          "type": "boolean"
        },
        "disk": {
          "description": "Attach a volume as a disk to the vmi.",
          "$ref": "#/definitions/kubevirt.io.v1.DiskTarget"
        },
        "floppy": {
          "description": "Attach a volume as a floppy to the vmi.",
          "$ref": "#/definitions/kubevirt.io.v1.FloppyTarget"
        },
        "io": {
          "description": "IO specifies which QEMU disk IO mode should be used. Supported values are: native, default, threads.",
          "type": "string"
        },
        "lun": {
          "description": "Attach a volume as a LUN to the vmi.",
          "$ref": "#/definitions/kubevirt.io.v1.LunTarget"
        },
        "name": {
          "description": "Name is the device name",
          "type": "string"
        },
        "serial": {
          "description": "Serial provides the ability to specify a serial number for the disk device.",
          "type": "string"
        },
        "tag": {
          "description": "If specified, disk address and its tag will be provided to the guest via config drive metadata",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.DiskTarget": {
      "type": "object",
      "properties": {
        "bus": {
          "description": "Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.",
          "type": "string"
        },
        "pciAddress": {
          "description": "If specified, the virtual disk will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10",
          "type": "string"
        },
        "readonly": {
          "description": "ReadOnly. Defaults to false.",
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.v1.DomainSpec": {
      "type": "object",
      "required": [
        "devices"
      ],
      "properties": {
        "chassis": {
          "description": "Chassis specifies the chassis info passed to the domain.",
          "$ref": "#/definitions/kubevirt.io.v1.Chassis"
        },
        "clock": {
          "description": "Clock sets the clock and timers of the vmi.",
          "$ref": "#/definitions/kubevirt.io.v1.Clock"
        },
        "cpu": {
          "description": "CPU allow specified the detailed CPU topology inside the vmi.",
          "$ref": "#/definitions/kubevirt.io.v1.CPU"
        },
        "devices": {
          "description": "Devices allows adding disks, network interfaces, and others",
          "$ref": "#/definitions/kubevirt.io.v1.Devices"
        },
        "features": {
          "description": "Features like acpi, apic, hyperv, smm.",
          "$ref": "#/definitions/kubevirt.io.v1.Features"
        },
        "firmware": {
          "description": "Firmware.",
          "$ref": "#/definitions/kubevirt.io.v1.Firmware"
        },
        "ioThreadsPolicy": {
          "description": "Controls whether or not disks will share IOThreads. Omitting IOThreadsPolicy disables use of IOThreads. One of: shared, auto",
          "type": "string"
        },
        "machine": {
          "description": "Machine type.",
          "$ref": "#/definitions/kubevirt.io.v1.Machine"
        },
        "memory": {
          "description": "Memory allow specifying the VMI memory features.",
          "$ref": "#/definitions/kubevirt.io.v1.Memory"
        },
        "resources": {
          "description": "Resources describes the Compute Resources required by this vmi.",
          "$ref": "#/definitions/kubevirt.io.v1.ResourceRequirements"
        }
      }
    },
    "kubevirt.io.v1.DownwardAPIVolumeSource": {
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info.",
      "type": "object",
      "properties": {
        "fields": {
          "description": "Fields is a list of downward API volume file",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.DownwardAPIVolumeFile"
          }
        },
        "volumeLabel": {
          "description": "The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values. Typical values are \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart).",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.EFI": {
      "description": "If set, EFI will be used instead of BIOS.",
      "type": "object",
      "properties": {
        "secureBoot": {
          "description": "If set, SecureBoot will be enabled and the OVMF roms will be swapped for SecureBoot-enabled ones. Requires SMM to be enabled. Defaults to true",
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.v1.EmptyDiskSource": {
      "description": "EmptyDisk represents a temporary disk which shares the vmis lifecycle.",
      "type": "object",
      "required": [
        "capacity"
      ],
      "properties": {
        "capacity": {
          "description": "Capacity of the sparse disk.",
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "kubevirt.io.v1.EphemeralVolumeSource": {
      "type": "object",
      "properties": {
        "persistentVolumeClaim": {
          "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. Directly attached to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimVolumeSource"
        }
      }
    },
    "kubevirt.io.v1.FeatureAPIC": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.",
          "type": "boolean"
        },
        "endOfInterrupt": {
          "description": "EndOfInterrupt enables the end of interrupt notification in the guest. Defaults to false.",
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.v1.FeatureHyperv": {
      "description": "Hyperv specific features.",
      "type": "object",
      "properties": {
        "evmcs": {
          "description": "EVMCS Speeds up L2 vmexits, but disables other virtualization features. Requires vapic. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "frequencies": {
          "description": "Frequencies improves the TSC clock source handling for Hyper-V on KVM. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "ipi": {
          "description": "IPI improves performances in overcommited environments. Requires vpindex. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "reenlightenment": {
          "description": "Reenlightenment enables the notifications on TSC frequency changes. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "relaxed": {
          "description": "Relaxed instructs the guest OS to disable watchdog timeouts. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "reset": {
          "description": "Reset enables Hyperv reboot/reset for the vmi. Requires synic. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "runtime": {
          "description": "Runtime improves the time accounting to improve scheduling in the guest. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "spinlocks": {
          "description": "Spinlocks allows to configure the spinlock retry attempts.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureSpinlocks"
        },
        "synic": {
          "description": "SyNIC enables the Synthetic Interrupt Controller. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "synictimer": {
          "description": "SyNICTimer enables Synthetic Interrupt Controller Timers, reducing CPU load. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.SyNICTimer"
        },
        "tlbflush": {
          "description": "TLBFlush improves performances in overcommited environments. Requires vpindex. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "vapic": {
          "description": "VAPIC improves the paravirtualized handling of interrupts. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "vendorid": {
          "description": "VendorID allows setting the hypervisor vendor id. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureVendorID"
        },
        "vpindex": {
          "description": "VPIndex enables the Virtual Processor Index to help windows identifying virtual processors. Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        }
      }
    },
    "kubevirt.io.v1.FeatureKVM": {
      "type": "object",
      "properties": {
        "hidden": {
          "description": "Hide the KVM hypervisor from standard MSR based discovery. Defaults to false",
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.v1.FeatureSpinlocks": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.",
          "type": "boolean"
        },
        "spinlocks": {
          "description": "Retries indicates the number of retries. Must be a value greater or equal 4096. Defaults to 4096.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "kubevirt.io.v1.FeatureState": {
      "description": "Represents if a feature is enabled or disabled.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.",
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.v1.FeatureVendorID": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.",
          "type": "boolean"
        },
        "vendorid": {
          "description": "VendorID sets the hypervisor vendor id, visible to the vmi. String up to twelve characters.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.Features": {
      "type": "object",
      "properties": {
        "acpi": {
          "description": "ACPI enables/disables ACPI inside the guest. Defaults to enabled.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "apic": {
          "description": "Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureAPIC"
        },
        "hyperv": {
          "description": "Defaults to the machine type setting.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureHyperv"
        },
        "kvm": {
          "description": "Configure how KVM presence is exposed to the guest.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureKVM"
        },
        "pvspinlock": {
          "description": "Notify the guest that the host supports paravirtual spinlocks. For older kernels this feature should be explicitly disabled.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "smm": {
          "description": "SMM enables/disables System Management Mode. TSEG not yet implemented.",
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        }
      }
    },
    "kubevirt.io.v1.Filesystem": {
      "type": "object",
      "required": [
        "name",
        "virtiofs"
      ],
      "properties": {
        "name": {
          "description": "Name is the device name",
          "type": "string"
        },
        "virtiofs": {
          "description": "Virtiofs is supported",
          "$ref": "#/definitions/kubevirt.io.v1.FilesystemVirtiofs"
        }
      }
    },
    "kubevirt.io.v1.FilesystemVirtiofs": {
      "type": "object"
    },
    "kubevirt.io.v1.Firmware": {
      "type": "object",
      "properties": {
        "bootloader": {
          "description": "Settings to control the bootloader that is used.",
          "$ref": "#/definitions/kubevirt.io.v1.Bootloader"
        },
        "serial": {
          "description": "The system-serial-number in SMBIOS",
          "type": "string"
        },
        "uuid": {
          "description": "UUID reported by the vmi bios. Defaults to a random generated uid.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.FloppyTarget": {
      "type": "object",
      "properties": {
        "readonly": {
          "description": "ReadOnly. Defaults to false.",
          "type": "boolean"
        },
        "tray": {
          "description": "Tray indicates if the tray of the device is open or closed. Allowed values are \"open\" and \"closed\". Defaults to closed.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.GPU": {
      "type": "object",
      "required": [
        "name",
        "deviceName"
      ],
      "properties": {
        "deviceName": {
          "type": "string"
        },
        "name": {
          "description": "Name of the GPU device as exposed by a device plugin",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.HPETTimer": {
      "type": "object",
      "properties": {
        "present": {
          "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.",
          "type": "boolean"
        },
        "tickPolicy": {
          "description": "TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of \"delay\", \"catchup\", \"merge\", \"discard\".",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.HostDevice": {
      "type": "object",
      "required": [
        "name",
        "deviceName"
      ],
      "properties": {
        "deviceName": {
          "description": "DeviceName is the resource name of the host device exposed by a device plugin",
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.HostDisk": {
      "description": "Represents a disk created on the cluster level",
      "type": "object",
      "required": [
        "path",
        "type"
      ],
      "properties": {
        "capacity": {
          "description": "Capacity of the sparse disk",
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
        },
        "path": {
          "description": "The path to HostDisk image located on the cluster",
          "type": "string"
        },
        "shared": {
          "description": "Shared indicate whether the path is shared between nodes",
          "type": "boolean"
        },
        "type": {
          "description": "Contains information if disk.img exists or should be created allowed options are 'Disk' and 'DiskOrCreate'",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.HotplugVolumeSource": {
      "description": "HotplugVolumeSource Represents the source of a volume to mount which are capable of being hotplugged on a live running VMI. Only one of its members may be specified.",
      "type": "object",
      "properties": {
        "dataVolume": {
          "description": "DataVolume represents the dynamic creation a PVC for this volume as well as the process of populating that PVC with a disk image.",
          "$ref": "#/definitions/kubevirt.io.v1.DataVolumeSource"
        },
        "persistentVolumeClaim": {
          "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. Directly attached to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimVolumeSource"
        }
      }
    },
    "kubevirt.io.v1.HotplugVolumeStatus": {
      "description": "HotplugVolumeStatus represents the hotplug status of the volume",
      "type": "object",
      "properties": {
        "attachPodName": {
          "description": "AttachPodName is the name of the pod used to attach the volume to the node.",
          "type": "string"
        },
        "attachPodUID": {
          "description": "AttachPodUID is the UID of the pod used to attach the volume to the node.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.Hugepages": {
      "description": "Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.",
      "type": "object",
      "properties": {
        "pageSize": {
          "description": "PageSize specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.HypervTimer": {
      "type": "object",
      "properties": {
        "present": {
          "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.",
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.v1.I6300ESBWatchdog": {
      "description": "i6300esb watchdog device.",
      "type": "object",
      "properties": {
        "action": {
          "description": "The action to take. Valid values are poweroff, reset, shutdown. Defaults to reset.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.Input": {
      "type": "object",
      "required": [
        "type",
        "name"
      ],
      "properties": {
        "bus": {
          "description": "Bus indicates the bus of input device to emulate. Supported values: virtio, usb.",
          "type": "string"
        },
        "name": {
          "description": "Name is the device name",
          "type": "string"
        },
        "type": {
          "description": "Type indicated the type of input device. Supported values: tablet.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.Interface": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "bootOrder": {
          "description": "BootOrder is an integer value \u003e 0, used to determine ordering of boot devices. Lower values take precedence. Each interface or disk that has a boot order must have a unique value. Interfaces without a boot order are not tried.",
          "type": "integer",
          "format": "int32"
        },
        "bridge": {
          "$ref": "#/definitions/kubevirt.io.v1.InterfaceBridge"
        },
        "dhcpOptions": {
          "description": "If specified the network interface will pass additional DHCP options to the VMI",
          "$ref": "#/definitions/kubevirt.io.v1.DHCPOptions"
        },
        "macAddress": {
          "description": "Interface MAC address. For example: de:ad:00:00:be:af or DE-AD-00-00-BE-AF.",
          "type": "string"
        },
        "macvtap": {
          "$ref": "#/definitions/kubevirt.io.v1.InterfaceMacvtap"
        },
        "masquerade": {
          "$ref": "#/definitions/kubevirt.io.v1.InterfaceMasquerade"
        },
        "model": {
          "description": "Interface model. One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio. Defaults to virtio.",
          "type": "string"
        },
        "name": {
          "description": "Logical name of the interface as well as a reference to the associated networks. Must match the Name of a Network.",
          "type": "string"
        },
        "pciAddress": {
          "description": "If specified, the virtual network interface will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10",
          "type": "string"
        },
        "ports": {
          "description": "List of ports to be forwarded to the virtual machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.Port"
          }
        },
        "slirp": {
          "$ref": "#/definitions/kubevirt.io.v1.InterfaceSlirp"
        },
        "sriov": {
          "$ref": "#/definitions/kubevirt.io.v1.InterfaceSRIOV"
        },
        "tag": {
          "description": "If specified, the virtual network interface address and its tag will be provided to the guest via config drive",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.InterfaceBridge": {
      "type": "object"
    },
    "kubevirt.io.v1.InterfaceMacvtap": {
      "type": "object"
    },
    "kubevirt.io.v1.InterfaceMasquerade": {
      "type": "object"
    },
    "kubevirt.io.v1.InterfaceSRIOV": {
      "type": "object"
    },
    "kubevirt.io.v1.InterfaceSlirp": {
      "type": "object"
    },
    "kubevirt.io.v1.KVMTimer": {
      "type": "object",
      "properties": {
        "present": {
          "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.",
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.v1.LunTarget": {
      "type": "object",
      "properties": {
        "bus": {
          "description": "Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.",
          "type": "string"
        },
        "readonly": {
          "description": "ReadOnly. Defaults to false.",
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.v1.Machine": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "QEMU machine type is the actual chipset of the VirtualMachineInstance.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.Memory": {
      "description": "Memory allows specifying the VirtualMachineInstance memory features.",
      "type": "object",
      "properties": {
        "guest": {
          "description": "Guest allows to specifying the amount of memory which is visible inside the Guest OS. The Guest must lie between Requests and Limits from the resources section. Defaults to the requested memory in the resources section if not specified.",
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
        },
        "hugepages": {
          "description": "Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.",
          "$ref": "#/definitions/kubevirt.io.v1.Hugepages"
        }
      }
    },
    "kubevirt.io.v1.MultusNetwork": {
      "description": "Represents the multus cni network.",
      "type": "object",
      "required": [
        "networkName"
      ],
      "properties": {
        "default": {
          "description": "Select the default network and add it to the multus-cni.io/default-network annotation.",
          "type": "boolean"
        },
        "networkName": {
          "description": "References to a NetworkAttachmentDefinition CRD object. Format: \u003cnetworkName\u003e, \u003cnamespace\u003e/\u003cnetworkName\u003e. If namespace is not specified, VMI namespace is assumed.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.Network": {
      "description": "Network represents a network type and a resource that should be connected to the vm.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "multus": {
          "$ref": "#/definitions/kubevirt.io.v1.MultusNetwork"
        },
        "name": {
          "description": "Network name. Must be a DNS_LABEL and unique within the vm. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "pod": {
          "$ref": "#/definitions/kubevirt.io.v1.PodNetwork"
        }
      }
    },
    "kubevirt.io.v1.PITTimer": {
      "type": "object",
      "properties": {
        "present": {
          "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.",
          "type": "boolean"
        },
        "tickPolicy": {
          "description": "TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of \"delay\", \"catchup\", \"discard\".",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.PodNetwork": {
      "description": "Represents the stock pod network interface.",
      "type": "object",
      "properties": {
        "vmNetworkCIDR": {
          "description": "CIDR for vm network. Default 10.0.2.0/24 if not specified.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.Port": {
      "description": "Port repesents a port to expose from the virtual machine. Default protocol TCP. The port field is mandatory",
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "name": {
          "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
          "type": "string"
        },
        "port": {
          "description": "Number of port to expose for the virtual machine. This must be a valid port number, 0 \u003c x \u003c 65536.",
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.Probe": {
      "description": "Probe describes a health check to be performed against a VirtualMachineInstance to determine whether it is alive or ready to receive traffic.",
      "type": "object",
      "properties": {
        "failureThreshold": {
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "httpGet": {
          "description": "HTTPGet specifies the http request to perform.",
          "$ref": "#/definitions/k8s.io.v1.HTTPGetAction"
        },
        "initialDelaySeconds": {
          "description": "Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "tcpSocket": {
          "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
          "$ref": "#/definitions/k8s.io.v1.TCPSocketAction"
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "kubevirt.io.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation": {
      "type": "object",
      "required": [
        "users"
      ],
      "properties": {
        "users": {
          "description": "Users represents a list of guest users that should have the ssh public keys added to their authorized_keys file.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        }
      }
    },
    "kubevirt.io.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation": {
      "type": "object"
    },
    "kubevirt.io.v1.RTCTimer": {
      "type": "object",
      "properties": {
        "present": {
          "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.",
          "type": "boolean"
        },
        "tickPolicy": {
          "description": "TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of \"delay\", \"catchup\".",
          "type": "string"
        },
        "track": {
          "description": "Track the guest or the wall clock.",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.RemoveVolumeOptions": {
      "description": "RemoveVolumeOptions is provided when dynamically hot unplugging volume and disk",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name represents the name that maps to both the disk and volume that should be removed",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.ResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "description": "Limits describes the maximum amount of compute resources allowed. Valid resource keys are \"memory\" and \"cpu\".",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "overcommitGuestOverhead": {
          "description": "Don't ask the scheduler to take the guest-management overhead into account. Instead put the overhead only into the container's memory limit. This can lead to crashes if all memory is in use on a node. Defaults to false.",
          "type": "boolean"
        },
        "requests": {
          "description": "Requests is a description of the initial vmi resources. Valid resource keys are \"memory\" and \"cpu\".",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
          }
        }
      }
    },
    "kubevirt.io.v1.Rng": {
      "description": "Rng represents the random device passed from host",
      "type": "object"
    },
    "kubevirt.io.v1.SSHPublicKeyAccessCredential": {
      "description": "SSHPublicKeyAccessCredential represents a source and propagation method for injecting ssh public keys into a vm guest",
      "type": "object",
      "required": [
        "source",
        "propagationMethod"
      ],
      "properties": {
        "propagationMethod": {
          "description": "PropagationMethod represents how the public key is injected into the vm guest.",
          "$ref": "#/definitions/kubevirt.io.v1.SSHPublicKeyAccessCredentialPropagationMethod"
        },
        "source": {
          "description": "Source represents where the public keys are pulled from",
          "$ref": "#/definitions/kubevirt.io.v1.SSHPublicKeyAccessCredentialSource"
        }
      }
    },
    "kubevirt.io.v1.SSHPublicKeyAccessCredentialPropagationMethod": {
      "description": "SSHPublicKeyAccessCredentialPropagationMethod represents the method used to inject a ssh public key into the vm guest. Only one of its members may be specified.",
      "type": "object",
      "properties": {
        "configDrive": {
          "description": "ConfigDrivePropagation means that the ssh public keys are injected into the VM using metadata using the configDrive cloud-init provider",
          "$ref": "#/definitions/kubevirt.io.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation"
        },
        "qemuGuestAgent": {
          "description": "QemuGuestAgentAccessCredentailPropagation means ssh public keys are dynamically injected into the vm at runtime via the qemu guest agent. This feature requires the qemu guest agent to be running within the guest.",
          "$ref": "#/definitions/kubevirt.io.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation"
        }
      }
    },
    "kubevirt.io.v1.SSHPublicKeyAccessCredentialSource": {
      "description": "SSHPublicKeyAccessCredentialSource represents where to retrieve the ssh key credentials Only one of its members may be specified.",
      "type": "object",
      "properties": {
        "secret": {
          "description": "Secret means that the access credential is pulled from a kubernetes secret",
          "$ref": "#/definitions/kubevirt.io.v1.AccessCredentialSecretSource"
        }
      }
    },
    "kubevirt.io.v1.SecretVolumeSource": {
      "description": "SecretVolumeSource adapts a Secret into a volume.",
      "type": "object",
      "properties": {
        "optional": {
          "description": "Specify whether the Secret or it's keys must be defined",
          "type": "boolean"
        },
        "secretName": {
          "description": "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
          "type": "string"
        },
        "volumeLabel": {
          "description": "The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values. Typical values are \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart).",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.ServiceAccountVolumeSource": {
      "description": "ServiceAccountVolumeSource adapts a ServiceAccount into a volume.",
      "type": "object",
      "properties": {
        "serviceAccountName": {
          "description": "Name of the service account in the pod's namespace to use. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.SyNICTimer": {
      "type": "object",
      "properties": {
        "direct": {
          "$ref": "#/definitions/kubevirt.io.v1.FeatureState"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "kubevirt.io.v1.SysprepSource": {
      "description": "Represents a Sysprep volume source.",
      "type": "object",
      "properties": {
        "configMap": {
          "description": "ConfigMap references a ConfigMap that contains Sysprep answer file named autounattend.xml that should be attached as disk of CDROM type.",
          "$ref": "#/definitions/k8s.io.v1.LocalObjectReference"
        },
        "secret": {
          "description": "Secret references a k8s Secret that contains Sysprep answer file named autounattend.xml that should be attached as disk of CDROM type.",
          "$ref": "#/definitions/k8s.io.v1.LocalObjectReference"
        }
      }
    },
    "kubevirt.io.v1.Timer": {
      "description": "Represents all available timers in a vmi.",
      "type": "object",
      "properties": {
        "hpet": {
          "description": "HPET (High Precision Event Timer) - multiple timers with periodic interrupts.",
          "$ref": "#/definitions/kubevirt.io.v1.HPETTimer"
        },
        "hyperv": {
          "description": "Hyperv (Hypervclock) - lets guests read the host’s wall clock time (paravirtualized). For windows guests.",
          "$ref": "#/definitions/kubevirt.io.v1.HypervTimer"
        },
        "kvm": {
          "description": "KVM \t(KVM clock) - lets guests read the host’s wall clock time (paravirtualized). For linux guests.",
          "$ref": "#/definitions/kubevirt.io.v1.KVMTimer"
        },
        "pit": {
          "description": "PIT (Programmable Interval Timer) - a timer with periodic interrupts.",
          "$ref": "#/definitions/kubevirt.io.v1.PITTimer"
        },
        "rtc": {
          "description": "RTC (Real Time Clock) - a continuously running timer with periodic interrupts.",
          "$ref": "#/definitions/kubevirt.io.v1.RTCTimer"
        }
      }
    },
    "kubevirt.io.v1.UserPasswordAccessCredential": {
      "description": "UserPasswordAccessCredential represents a source and propagation method for injecting user passwords into a vm guest Only one of its members may be specified.",
      "type": "object",
      "required": [
        "source",
        "propagationMethod"
      ],
      "properties": {
        "propagationMethod": {
          "description": "propagationMethod represents how the user passwords are injected into the vm guest.",
          "$ref": "#/definitions/kubevirt.io.v1.UserPasswordAccessCredentialPropagationMethod"
        },
        "source": {
          "description": "Source represents where the user passwords are pulled from",
          "$ref": "#/definitions/kubevirt.io.v1.UserPasswordAccessCredentialSource"
        }
      }
    },
    "kubevirt.io.v1.UserPasswordAccessCredentialPropagationMethod": {
      "description": "UserPasswordAccessCredentialPropagationMethod represents the method used to inject a user passwords into the vm guest. Only one of its members may be specified.",
      "type": "object",
      "properties": {
        "qemuGuestAgent": {
          "description": "QemuGuestAgentAccessCredentailPropagation means passwords are dynamically injected into the vm at runtime via the qemu guest agent. This feature requires the qemu guest agent to be running within the guest.",
          "$ref": "#/definitions/kubevirt.io.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation"
        }
      }
    },
    "kubevirt.io.v1.UserPasswordAccessCredentialSource": {
      "description": "UserPasswordAccessCredentialSource represents where to retrieve the user password credentials Only one of its members may be specified.",
      "type": "object",
      "properties": {
        "secret": {
          "description": "Secret means that the access credential is pulled from a kubernetes secret",
          "$ref": "#/definitions/kubevirt.io.v1.AccessCredentialSecretSource"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachine": {
      "description": "VirtualMachine handles the VirtualMachines that are not running or are in a stopped state The VirtualMachine contains the template to create the VirtualMachineInstance. It also mirrors the running state of the created VirtualMachineInstance in its status.",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec contains the specification of VirtualMachineInstance created",
          "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineSpec"
        },
        "status": {
          "description": "Status holds the current state of the controller and brief information about its associated VirtualMachineInstance",
          "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineStatus"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineCondition": {
      "description": "VirtualMachineCondition represents the state of VirtualMachine",
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastProbeTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstance": {
      "description": "VirtualMachineInstance is *the* VirtualMachineInstance Definition. It represents a virtual machine in the runtime environment of kubernetes.",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "description": "VirtualMachineInstance Spec contains the VirtualMachineInstance specification.",
          "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceSpec"
        },
        "status": {
          "description": "Status is the high level overview of how the VirtualMachineInstance is doing. It contains information available to controllers and users.",
          "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceStatus"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastProbeTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceGuestOSInfo": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Guest OS Id",
          "type": "string"
        },
        "kernelRelease": {
          "description": "Guest OS Kernel Release",
          "type": "string"
        },
        "kernelVersion": {
          "description": "Kernel version of the Guest OS",
          "type": "string"
        },
        "machine": {
          "description": "Machine type of the Guest OS",
          "type": "string"
        },
        "name": {
          "description": "Name of the Guest OS",
          "type": "string"
        },
        "prettyName": {
          "description": "Guest OS Pretty Name",
          "type": "string"
        },
        "version": {
          "description": "Guest OS Version",
          "type": "string"
        },
        "versionId": {
          "description": "Version ID of the Guest OS",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceList": {
      "description": "VirtualMachineInstanceList is a list of VirtualMachines",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstance"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceMigration": {
      "description": "VirtualMachineInstanceMigration represents the object tracking a VMI's migration to another host in the cluster",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigrationSpec"
        },
        "status": {
          "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigrationStatus"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceMigrationCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastProbeTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceMigrationList": {
      "description": "VirtualMachineInstanceMigrationList is a list of VirtualMachineMigrations",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigration"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceMigrationSpec": {
      "type": "object",
      "properties": {
        "vmiName": {
          "description": "The name of the VMI to perform the migration on. VMI must exist in the migration objects namespace",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceMigrationState": {
      "type": "object",
      "properties": {
        "abortRequested": {
          "description": "Indicates that the migration has been requested to abort",
          "type": "boolean"
        },
        "abortStatus": {
          "description": "Indicates the final status of the live migration abortion",
          "type": "string"
        },
        "completed": {
          "description": "Indicates the migration completed",
          "type": "boolean"
        },
        "endTimestamp": {
          "description": "The time the migration action ended",
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "failed": {
          "description": "Indicates that the migration failed",
          "type": "boolean"
        },
        "migrationUid": {
          "description": "The VirtualMachineInstanceMigration object associated with this migration",
          "type": "string"
        },
        "mode": {
          "description": "Lets us know if the vmi is currently running pre or post copy migration",
          "type": "string"
        },
        "sourceNode": {
          "description": "The source node that the VMI originated on",
          "type": "string"
        },
        "startTimestamp": {
          "description": "The time the migration action began",
          "$ref": "#/definitions/k8s.io.v1.Time"
        },
        "targetDirectMigrationNodePorts": {
          "description": "The list of ports opened for live migration on the destination node",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "targetNode": {
          "description": "The target node that the VMI is moving to",
          "type": "string"
        },
        "targetNodeAddress": {
          "description": "The address of the target node to use for the migration",
          "type": "string"
        },
        "targetNodeDomainDetected": {
          "description": "The Target Node has seen the Domain Start Event",
          "type": "boolean"
        },
        "targetPod": {
          "description": "The target pod that the VMI is moving to",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceMigrationStatus": {
      "description": "VirtualMachineInstanceMigration reprents information pertaining to a VMI's migration.",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigrationCondition"
          }
        },
        "phase": {
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceNetworkInterface": {
      "type": "object",
      "properties": {
        "interfaceName": {
          "description": "The interface name inside the Virtual Machine",
          "type": "string"
        },
        "ipAddress": {
          "description": "IP address of a Virtual Machine interface. It is always the first item of IPs",
          "type": "string"
        },
        "ipAddresses": {
          "description": "List of all IP addresses of a Virtual Machine interface",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mac": {
          "description": "Hardware address of a Virtual Machine interface",
          "type": "string"
        },
        "name": {
          "description": "Name of the interface, corresponds to name of the network assigned to the interface",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceSpec": {
      "description": "VirtualMachineInstanceSpec is a description of a VirtualMachineInstance.",
      "type": "object",
      "required": [
        "domain"
      ],
      "properties": {
        "accessCredentials": {
          "description": "Specifies a set of public keys to inject into the vm guest",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.AccessCredential"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "affinity": {
          "description": "If affinity is specifies, obey all the affinity rules",
          "$ref": "#/definitions/k8s.io.v1.Affinity"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/k8s.io.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
          "type": "string"
        },
        "domain": {
          "description": "Specification of the desired behavior of the VirtualMachineInstance on the host.",
          "$ref": "#/definitions/kubevirt.io.v1.DomainSpec"
        },
        "evictionStrategy": {
          "description": "EvictionStrategy can be set to \"LiveMigrate\" if the VirtualMachineInstance should be migrated instead of shut-off in case of a node drain.",
          "type": "string"
        },
        "hostname": {
          "description": "Specifies the hostname of the vmi If not specified, the hostname will be set to the name of the vmi, if dhcp or cloud-init is configured properly.",
          "type": "string"
        },
        "livenessProbe": {
          "description": "Periodic probe of VirtualMachineInstance liveness. VirtualmachineInstances will be stopped if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/kubevirt.io.v1.Probe"
        },
        "networks": {
          "description": "List of networks that can be attached to a vm's virtual interface.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.Network"
          }
        },
        "nodeSelector": {
          "description": "NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "priorityClassName": {
          "description": "If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.",
          "type": "string"
        },
        "readinessProbe": {
          "description": "Periodic probe of VirtualMachineInstance service readiness. VirtualmachineInstances will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/kubevirt.io.v1.Probe"
        },
        "schedulerName": {
          "description": "If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.",
          "type": "string"
        },
        "subdomain": {
          "description": "If specified, the fully qualified vmi hostname will be \"\u003chostname\u003e.\u003csubdomain\u003e.\u003cpod namespace\u003e.svc.\u003ccluster domain\u003e\". If not specified, the vmi will not have a domainname at all. The DNS entry will resolve to the vmi, no matter if the vmi itself can pick up a hostname.",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "description": "Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "If toleration is specified, obey all the toleration rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.v1.Toleration"
          }
        },
        "volumes": {
          "description": "List of volumes that can be mounted by disks belonging to the vmi.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.Volume"
          }
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceStatus": {
      "description": "VirtualMachineInstanceStatus represents information about the status of a VirtualMachineInstance. Status may trail the actual state of a system.",
      "type": "object",
      "properties": {
        "activePods": {
          "description": "ActivePods is a mapping of pod UID to node name. It is possible for multiple pods to be running for a single VMI during migration.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "conditions": {
          "description": "Conditions are specific points in VirtualMachineInstance's pod runtime.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceCondition"
          }
        },
        "evacuationNodeName": {
          "description": "EvacuationNodeName is used to track the eviction process of a VMI. It stores the name of the node that we want to evacuate. It is meant to be used by KubeVirt core components only and can't be set or modified by users.",
          "type": "string"
        },
        "guestOSInfo": {
          "description": "Guest OS Information",
          "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceGuestOSInfo"
        },
        "interfaces": {
          "description": "Interfaces represent the details of available network interfaces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceNetworkInterface"
          }
        },
        "launcherContainerImageVersion": {
          "description": "LauncherContainerImageVersion indicates what container image is currently active for the vmi.",
          "type": "string"
        },
        "migrationMethod": {
          "description": "Represents the method using which the vmi can be migrated: live migration or block migration",
          "type": "string"
        },
        "migrationState": {
          "description": "Represents the status of a live migration",
          "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceMigrationState"
        },
        "nodeName": {
          "description": "NodeName is the name where the VirtualMachineInstance is currently running.",
          "type": "string"
        },
        "phase": {
          "description": "Phase is the status of the VirtualMachineInstance in kubernetes world. It is not the VirtualMachineInstance status, but partially correlates to it.",
          "type": "string"
        },
        "qosClass": {
          "description": "The Quality of Service (QOS) classification assigned to the virtual machine instance based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md",
          "type": "string"
        },
        "reason": {
          "description": "A brief CamelCase message indicating details about why the VMI is in this state. e.g. 'NodeUnresponsive'",
          "type": "string"
        },
        "volumeStatus": {
          "description": "VolumeStatus contains the statuses of all the volumes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.VolumeStatus"
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineInstanceTemplateSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "spec": {
          "description": "VirtualMachineInstance Spec contains the VirtualMachineInstance specification.",
          "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceSpec"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineList": {
      "description": "VirtualMachineList is a list of virtualmachines",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.VirtualMachine"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineSpec": {
      "description": "VirtualMachineSpec describes how the proper VirtualMachine should look like",
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "dataVolumeTemplates": {
          "description": "dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance template can reference. DataVolumes in this list are dynamically created for the VirtualMachine and are tied to the VirtualMachine's life-cycle.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.DataVolumeTemplateSpec"
          }
        },
        "runStrategy": {
          "description": "Running state indicates the requested running state of the VirtualMachineInstance mutually exclusive with Running",
          "type": "string"
        },
        "running": {
          "description": "Running controls whether the associatied VirtualMachineInstance is created or not Mutually exclusive with RunStrategy",
          "type": "boolean"
        },
        "template": {
          "description": "Template is the direct specification of VirtualMachineInstance",
          "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineInstanceTemplateSpec"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineStateChangeRequest": {
      "type": "object",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "description": "Indicates the type of action that is requested. e.g. Start or Stop",
          "type": "string"
        },
        "data": {
          "description": "Provides additional data in order to perform the Action",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uid": {
          "description": "Indicates the UUID of an existing Virtual Machine Instance that this change request applies to -- if applicable",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineStatus": {
      "description": "VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Hold the state information of the VirtualMachine and its VirtualMachineInstance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineCondition"
          }
        },
        "created": {
          "description": "Created indicates if the virtual machine is created in the cluster",
          "type": "boolean"
        },
        "ready": {
          "description": "Ready indicates if the virtual machine is running and ready",
          "type": "boolean"
        },
        "snapshotInProgress": {
          "description": "SnapshotInProgress is the name of the VirtualMachineSnapshot currently executing",
          "type": "string"
        },
        "stateChangeRequests": {
          "description": "StateChangeRequests indicates a list of actions that should be taken on a VMI e.g. stop a specific VMI then start a new one.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineStateChangeRequest"
          }
        },
        "volumeRequests": {
          "description": "VolumeRequests indicates a list of volumes add or remove from the VMI template and hotplug on an active running VMI.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.VirtualMachineVolumeRequest"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "volumeSnapshotStatuses": {
          "description": "VolumeSnapshotStatuses indicates a list of statuses whether snapshotting is supported by each volume.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kubevirt.io.v1.VolumeSnapshotStatus"
          }
        }
      }
    },
    "kubevirt.io.v1.VirtualMachineVolumeRequest": {
      "type": "object",
      "properties": {
        "addVolumeOptions": {
          "description": "AddVolumeOptions when set indicates a volume should be added. The details within this field specify how to add the volume",
          "$ref": "#/definitions/kubevirt.io.v1.AddVolumeOptions"
        },
        "removeVolumeOptions": {
          "description": "RemoveVolumeOptions when set indicates a volume should be removed. The details within this field specify how to add the volume",
          "$ref": "#/definitions/kubevirt.io.v1.RemoveVolumeOptions"
        }
      }
    },
    "kubevirt.io.v1.Volume": {
      "description": "Volume represents a named volume in a vmi.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "cloudInitConfigDrive": {
          "description": "CloudInitConfigDrive represents a cloud-init Config Drive user-data source. The Config Drive data will be added as a disk to the vmi. A proper cloud-init installation is required inside the guest. More info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html",
          "$ref": "#/definitions/kubevirt.io.v1.CloudInitConfigDriveSource"
        },
        "cloudInitNoCloud": {
          "description": "CloudInitNoCloud represents a cloud-init NoCloud user-data source. The NoCloud data will be added as a disk to the vmi. A proper cloud-init installation is required inside the guest. More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html",
          "$ref": "#/definitions/kubevirt.io.v1.CloudInitNoCloudSource"
        },
        "configMap": {
          "description": "ConfigMapSource represents a reference to a ConfigMap in the same namespace. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/",
          "$ref": "#/definitions/kubevirt.io.v1.ConfigMapVolumeSource"
        },
        "containerDisk": {
          "description": "ContainerDisk references a docker image, embedding a qcow or raw disk. More info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html",
          "$ref": "#/definitions/kubevirt.io.v1.ContainerDiskSource"
        },
        "dataVolume": {
          "description": "DataVolume represents the dynamic creation a PVC for this volume as well as the process of populating that PVC with a disk image.",
          "$ref": "#/definitions/kubevirt.io.v1.DataVolumeSource"
        },
        "downwardAPI": {
          "description": "DownwardAPI represents downward API about the pod that should populate this volume",
          "$ref": "#/definitions/kubevirt.io.v1.DownwardAPIVolumeSource"
        },
        "emptyDisk": {
          "description": "EmptyDisk represents a temporary disk which shares the vmis lifecycle. More info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html",
          "$ref": "#/definitions/kubevirt.io.v1.EmptyDiskSource"
        },
        "ephemeral": {
          "description": "Ephemeral is a special volume source that \"wraps\" specified source and provides copy-on-write image on top of it.",
          "$ref": "#/definitions/kubevirt.io.v1.EphemeralVolumeSource"
        },
        "hostDisk": {
          "description": "HostDisk represents a disk created on the cluster level",
          "$ref": "#/definitions/kubevirt.io.v1.HostDisk"
        },
        "name": {
          "description": "Volume's name. Must be a DNS_LABEL and unique within the vmi. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "persistentVolumeClaim": {
          "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. Directly attached to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/k8s.io.v1.PersistentVolumeClaimVolumeSource"
        },
        "secret": {
          "description": "SecretVolumeSource represents a reference to a secret data in the same namespace. More info: https://kubernetes.io/docs/concepts/configuration/secret/",
          "$ref": "#/definitions/kubevirt.io.v1.SecretVolumeSource"
        },
        "serviceAccount": {
          "description": "ServiceAccountVolumeSource represents a reference to a service account. There can only be one volume of this type! More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
          "$ref": "#/definitions/kubevirt.io.v1.ServiceAccountVolumeSource"
        },
        "sysprep": {
          "description": "Represents a Sysprep volume source.",
          "$ref": "#/definitions/kubevirt.io.v1.SysprepSource"
        }
      }
    },
    "kubevirt.io.v1.VolumeSnapshotStatus": {
      "type": "object",
      "required": [
        "name",
        "enabled"
      ],
      "properties": {
        "enabled": {
          "description": "True if the volume supports snapshotting",
          "type": "boolean"
        },
        "name": {
          "description": "Volume name",
          "type": "string"
        },
        "reason": {
          "description": "Empty if snapshotting is enabled, contains reason otherwise",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.VolumeStatus": {
      "description": "VolumeStatus represents information about the status of volumes attached to the VirtualMachineInstance.",
      "type": "object",
      "required": [
        "name",
        "target"
      ],
      "properties": {
        "hotplugVolume": {
          "description": "If the volume is hotplug, this will contain the hotplug status.",
          "$ref": "#/definitions/kubevirt.io.v1.HotplugVolumeStatus"
        },
        "message": {
          "description": "Message is a detailed message about the current hotplug volume phase",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of the volume",
          "type": "string"
        },
        "phase": {
          "description": "Phase is the phase",
          "type": "string"
        },
        "reason": {
          "description": "Reason is a brief description of why we are in the current hotplug volume phase",
          "type": "string"
        },
        "target": {
          "description": "Target is the target name used when adding the volume to the VM, eg: vda",
          "type": "string"
        }
      }
    },
    "kubevirt.io.v1.Watchdog": {
      "description": "Named watchdog device.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "i6300esb": {
          "description": "i6300esb watchdog device.",
          "$ref": "#/definitions/kubevirt.io.v1.I6300ESBWatchdog"
        },
        "name": {
          "description": "Name of the watchdog.",
          "type": "string"
        }
      }
    },
    "management.cattle.io.v3.BasicLogin": {
      "description": "BasicLogin is a the input for local auth login action",
      "type": "object",
      "properties": {
        "password": {
          "description": "Password for the login.",
          "type": "string"
        },
        "username": {
          "description": "Username for the login.",
          "type": "string"
        }
      }
    },
    "management.cattle.io.v3.User": {
      "type": "object",
      "required": [
        "description",
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "me": {
          "type": "boolean"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ObjectMeta"
        },
        "mustChangePassword": {
          "type": "boolean"
        },
        "password": {
          "type": "string"
        },
        "principalIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "spec": {
          "$ref": "#/definitions/management.cattle.io.v3.UserSpec"
        },
        "status": {
          "$ref": "#/definitions/management.cattle.io.v3.UserStatus"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "management.cattle.io.v3.UserCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another.",
          "type": "string"
        },
        "lastUpdateTime": {
          "description": "The last time this condition was updated.",
          "type": "string"
        },
        "message": {
          "description": "Human-readable message indicating details about last transition",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of user condition.",
          "type": "string"
        }
      }
    },
    "management.cattle.io.v3.UserList": {
      "description": "UserList is a list of User resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/management.cattle.io.v3.User"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.v1.ListMeta"
        }
      }
    },
    "management.cattle.io.v3.UserSpec": {
      "type": "object"
    },
    "management.cattle.io.v3.UserStatus": {
      "type": "object",
      "required": [
        "conditions"
      ],
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/management.cattle.io.v3.UserCondition"
          }
        }
      }
    }
  }
}