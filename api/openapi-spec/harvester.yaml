openapi: 3.0.1
info:
  title: Harvester APIs
  version: v1beta1
security:
- Basic: []
- Bearer: []
servers:
- url: /
paths:
  /api/v1/namespaces/{namespace}/persistentvolumeclaims:
    get:
      tags:
      - Volumes
      summary: List Persistent Volume Claims
      description: Get a list of PersistentVolumeClaim objects in a namespace.
      operationId: listNamespacedPersistentVolumeClaim
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Volumes
      summary: Create a Persistent Volume Claim
      description: Create a PersistentVolumeClaim object.
      operationId: createNamespacedPersistentVolumeClaim
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}:
    get:
      tags:
      - Volumes
      summary: Read a Persistent Volume Claim
      description: Get a PersistentVolumeClaim object.
      operationId: readNamespacedPersistentVolumeClaim
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Volumes
      summary: Replace a Persistent Volume Claim
      description: Update a PersistentVolumeClaim object.
      operationId: replaceNamespacedPersistentVolumeClaim
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Volumes
      summary: Delete a Persistent Volume Claim
      description: Delete a PersistentVolumeClaim object.
      operationId: deleteNamespacedPersistentVolumeClaim
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Volumes
      summary: Patch a Persistent Volume Claim
      description: Patch a PersistentVolumeClaim object.
      operationId: patchNamespacedPersistentVolumeClaim
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /api/v1/persistentvolumeclaims:
    get:
      tags:
      - Volumes
      summary: List Persistent Volume Claims For All Namespaces
      description: Get a list of all PersistentVolumeClaim objects.
      operationId: listPersistentVolumeClaimForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/harvesterhci.io/v1beta1/keypairs:
    get:
      tags:
      - SSH Keys
      summary: List Key Pairs For All Namespaces
      description: Get a list of all KeyPair objects.
      operationId: listKeyPairForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/keypairs:
    get:
      tags:
      - SSH Keys
      summary: List Key Pairs
      description: Get a list of KeyPair objects in a namespace.
      operationId: listNamespacedKeyPair
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - SSH Keys
      summary: Create a Key Pair
      description: Create a KeyPair object.
      operationId: createNamespacedKeyPair
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/keypairs/{name}:
    get:
      tags:
      - SSH Keys
      summary: Read a Key Pair
      description: Get a KeyPair object.
      operationId: readNamespacedKeyPair
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - SSH Keys
      summary: Replace a Key Pair
      description: Update a KeyPair object.
      operationId: replaceNamespacedKeyPair
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - SSH Keys
      summary: Delete a Key Pair
      description: Delete a KeyPair object.
      operationId: deleteNamespacedKeyPair
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - SSH Keys
      summary: Patch a Key Pair
      description: Patch a KeyPair object.
      operationId: patchNamespacedKeyPair
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/supportbundles:
    get:
      tags:
      - Support Bundles
      summary: List Support Bundles
      description: Get a list of SupportBundle objects in a namespace.
      operationId: listNamespacedSupportBundle
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Support Bundles
      summary: Create a Support Bundle
      description: Create a SupportBundle object.
      operationId: createNamespacedSupportBundle
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/supportbundles/{name}:
    get:
      tags:
      - Support Bundles
      summary: Read a Support Bundle
      description: Get a SupportBundle object.
      operationId: readNamespacedSupportBundle
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Support Bundles
      summary: Replace a Support Bundle
      description: Update a SupportBundle object.
      operationId: replaceNamespacedSupportBundle
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Support Bundles
      summary: Delete a Support Bundle
      description: Delete a SupportBundle object.
      operationId: deleteNamespacedSupportBundle
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Support Bundles
      summary: Patch a Support Bundle
      description: Patch a SupportBundle object.
      operationId: patchNamespacedSupportBundle
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/upgrades:
    get:
      tags:
      - Upgrades
      summary: List Upgrades
      description: Get a list of Upgrade objects in a namespace.
      operationId: listNamespacedUpgrade
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Upgrades
      summary: Create an Upgrade
      description: Create a Upgrade object.
      operationId: createNamespacedUpgrade
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/upgrades/{name}:
    get:
      tags:
      - Upgrades
      summary: Read an Upgrade
      description: Get a Upgrade object.
      operationId: readNamespacedUpgrade
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Upgrades
      summary: Replace an Upgrade
      description: Update a Upgrade object.
      operationId: replaceNamespacedUpgrade
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Upgrades
      summary: Delete an Upgrade
      description: Delete a Upgrade object.
      operationId: deleteNamespacedUpgrade
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Upgrades
      summary: Patch an Upgrade
      description: Patch a Upgrade object.
      operationId: patchNamespacedUpgrade
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinebackups:
    get:
      tags:
      - Backups
      summary: List Virtual Machine Backups
      description: Get a list of VirtualMachineBackup objects in a namespace.
      operationId: listNamespacedVirtualMachineBackup
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
          pattern: '[a-z0-9][a-z0-9-]*'
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Backups
      summary: Create a Virtual Machine Backup
      description: Create a VirtualMachineBackup object.
      operationId: createNamespacedVirtualMachineBackup
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinebackups/{name}:
    get:
      tags:
      - Backups
      summary: Read a Virtual Machine Backup
      description: Get a VirtualMachineBackup object.
      operationId: readNamespacedVirtualMachineBackup
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Backups
      summary: Replace a Virtual Machine Backup
      description: Update a VirtualMachineBackup object.
      operationId: replaceNamespacedVirtualMachineBackup
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Backups
      summary: Delete a Virtual Machine Backup
      description: Delete a VirtualMachineBackup object.
      operationId: deleteNamespacedVirtualMachineBackup
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Backups
      summary: Patch a Virtual Machine Backup
      description: Patch a VirtualMachineBackup object.
      operationId: patchNamespacedVirtualMachineBackup
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachineimages:
    get:
      tags:
      - Images
      summary: List Virtual Machine Images
      description: Get a list of VirtualMachineImage objects in a namespace.
      operationId: listNamespacedVirtualMachineImage
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Images
      summary: Create a Virtual Machine Image
      description: Create a VirtualMachineImage object.
      operationId: createNamespacedVirtualMachineImage
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachineimages/{name}:
    get:
      tags:
      - Images
      summary: Read a Virtual Machine Image
      description: Get a VirtualMachineImage object.
      operationId: readNamespacedVirtualMachineImage
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Images
      summary: Replace a Virtual Machine Image
      description: Update a VirtualMachineImage object.
      operationId: replaceNamespacedVirtualMachineImage
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Images
      summary: Delete a Virtual Machine Image
      description: Delete a VirtualMachineImage object.
      operationId: deleteNamespacedVirtualMachineImage
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Images
      summary: Patch a Virtual Machine Image
      description: Patch a VirtualMachineImage object.
      operationId: patchNamespacedVirtualMachineImage
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinerestores:
    get:
      tags:
      - Restores
      summary: List Virtual Machine Restores
      description: Get a list of VirtualMachineRestore objects in a namespace.
      operationId: listNamespacedVirtualMachineRestore
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Restores
      summary: Create a Virtual Machine Restore
      description: Create a VirtualMachineRestore object.
      operationId: createNamespacedVirtualMachineRestore
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinerestores/{name}:
    get:
      tags:
      - Restores
      summary: Read a Virtual Machine Restore
      description: Get a VirtualMachineRestore object.
      operationId: readNamespacedVirtualMachineRestore
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Restores
      summary: Replace a Virtual Machine Restore
      description: Update a VirtualMachineRestore object.
      operationId: replaceNamespacedVirtualMachineRestore
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Restores
      summary: Delete a Virtual Machine Restore
      description: Delete a VirtualMachineRestore object.
      operationId: deleteNamespacedVirtualMachineRestore
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Restores
      summary: Patch a Virtual Machine Restore
      description: Patch a VirtualMachineRestore object.
      operationId: patchNamespacedVirtualMachineRestore
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinetemplates:
    get:
      tags:
      - Virtual Machine Templates
      summary: List Virtual Machine Templates
      description: Get a list of VirtualMachineTemplate objects in a namespace.
      operationId: listNamespacedVirtualMachineTemplate
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Virtual Machine Templates
      summary: Create a Virtual Machine Template
      description: Create a VirtualMachineTemplate object.
      operationId: createNamespacedVirtualMachineTemplate
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinetemplates/{name}:
    get:
      tags:
      - Virtual Machine Templates
      summary: Read a Virtual Machine Template
      description: Get a VirtualMachineTemplate object.
      operationId: readNamespacedVirtualMachineTemplate
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Virtual Machine Templates
      summary: Replace a Virtual Machine Template
      description: Update a VirtualMachineTemplate object.
      operationId: replaceNamespacedVirtualMachineTemplate
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Virtual Machine Templates
      summary: Delete a Virtual Machine Template
      description: Delete a VirtualMachineTemplate object.
      operationId: deleteNamespacedVirtualMachineTemplate
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Virtual Machine Templates
      summary: Patch a Virtual Machine Template
      description: Patch a VirtualMachineTemplate object.
      operationId: patchNamespacedVirtualMachineTemplate
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinetemplateversions:
    get:
      tags:
      - Virtual Machine Templates
      summary: List Virtual Machine Template Versions
      description: Get a list of VirtualMachineTemplateVersion objects in a namespace.
      operationId: listNamespacedVirtualMachineTemplateVersion
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Virtual Machine Templates
      summary: Create a Virtual Machine Template Version
      description: Create a VirtualMachineTemplateVersion object.
      operationId: createNamespacedVirtualMachineTemplateVersion
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  ? /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinetemplateversions/{name}
  : get:
      tags:
      - Virtual Machine Templates
      summary: Read a Virtual Machine Template Version
      description: Get a VirtualMachineTemplateVersion object.
      operationId: readNamespacedVirtualMachineTemplateVersion
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Virtual Machine Templates
      summary: Replace a Virtual Machine Template Version
      description: Update a VirtualMachineTemplateVersion object.
      operationId: replaceNamespacedVirtualMachineTemplateVersion
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Virtual Machine Templates
      summary: Delete a Virtual Machine Template Version
      description: Delete a VirtualMachineTemplateVersion object.
      operationId: deleteNamespacedVirtualMachineTemplateVersion
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Virtual Machine Templates
      summary: Patch a Virtual Machine Template Version
      description: Patch a VirtualMachineTemplateVersion object.
      operationId: patchNamespacedVirtualMachineTemplateVersion
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/harvesterhci.io/v1beta1/supportbundles:
    get:
      tags:
      - Support Bundles
      summary: List Support Bundles For All Namespaces
      description: Get a list of all SupportBundle objects.
      operationId: listSupportBundleForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/harvesterhci.io/v1beta1/upgrades:
    get:
      tags:
      - Upgrades
      summary: List Upgrades For All Namespaces
      description: Get a list of all Upgrade objects.
      operationId: listUpgradeForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/harvesterhci.io/v1beta1/virtualmachinebackups:
    get:
      tags:
      - Backups
      summary: List Virtual Machine Backups For All Namespaces
      description: Get a list of all VirtualMachineBackup objects.
      operationId: listVirtualMachineBackupForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/harvesterhci.io/v1beta1/virtualmachineimages:
    get:
      tags:
      - Images
      summary: List Virtual Machine Images For All Namespaces
      description: Get a list of all VirtualMachineImage objects.
      operationId: listVirtualMachineImageForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/harvesterhci.io/v1beta1/virtualmachinerestores:
    get:
      tags:
      - Restores
      summary: List Virtual Machine Restores For All Namespaces
      description: Get a list of all VirtualMachineRestore objects.
      operationId: listVirtualMachineRestoreForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/harvesterhci.io/v1beta1/virtualmachinetemplates:
    get:
      tags:
      - Virtual Machine Templates
      summary: List Virtual Machine Templates For All Namespaces
      description: Get a list of all VirtualMachineTemplate objects.
      operationId: listVirtualMachineTemplateForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/harvesterhci.io/v1beta1/virtualmachinetemplateversions:
    get:
      tags:
      - Virtual Machine Templates
      summary: List Virtual Machine Template Versions For All Namespaces
      description: Get a list of all VirtualMachineTemplateVersion objects.
      operationId: listVirtualMachineTemplateVersionForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/k8s.cni.cncf.io/v1/namespaces/{namespace}/network-attachment-definitions:
    get:
      tags:
      - Networks
      summary: List Network Attachment Definitions
      description: Get a list of NetworkAttachmentDefinition objects in a namespace.
      operationId: listNamespacedNetworkAttachmentDefinition
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Networks
      summary: Create a Network Attachment Definition
      description: Create a NetworkAttachmentDefinition object.
      operationId: createNamespacedNetworkAttachmentDefinition
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/k8s.cni.cncf.io/v1/namespaces/{namespace}/network-attachment-definitions/{name}:
    get:
      tags:
      - Networks
      summary: Read a Network Attachment Definition
      description: Get a NetworkAttachmentDefinition object.
      operationId: readNamespacedNetworkAttachmentDefinition
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Networks
      summary: Replace a Network Attachment Definition
      description: Update a NetworkAttachmentDefinition object.
      operationId: replaceNamespacedNetworkAttachmentDefinition
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Networks
      summary: Delete a Network Attachment Definition
      description: Delete a NetworkAttachmentDefinition object.
      operationId: deleteNamespacedNetworkAttachmentDefinition
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Networks
      summary: Patch a Network Attachment Definition
      description: Patch a NetworkAttachmentDefinition object.
      operationId: patchNamespacedNetworkAttachmentDefinition
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/k8s.cni.cncf.io/v1/network-attachment-definitions:
    get:
      tags:
      - Networks
      summary: List Network Attachment Definitions For All Namespaces
      description: Get a list of all NetworkAttachmentDefinition objects.
      operationId: listNetworkAttachmentDefinitionForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstancemigrations:
    get:
      tags:
      - Migrations
      summary: List Virtual Machine Instance Migrations
      description: Get a list of VirtualMachineInstanceMigration objects in a namespace.
      operationId: listNamespacedVirtualMachineInstanceMigration
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Migrations
      summary: Create a Virtual Machine Instance Migration
      description: Create a VirtualMachineInstanceMigration object.
      operationId: createNamespacedVirtualMachineInstanceMigration
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
          application/yaml:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstancemigrations/{name}:
    get:
      tags:
      - Migrations
      summary: Read a Virtual Machine Instance Migration
      description: Get a VirtualMachineInstanceMigration object.
      operationId: readNamespacedVirtualMachineInstanceMigration
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Migrations
      summary: Replace a Virtual Machine Instance Migration
      description: Update a VirtualMachineInstanceMigration object.
      operationId: replaceNamespacedVirtualMachineInstanceMigration
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
          application/yaml:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Migrations
      summary: Delete a Virtual Machine Instance Migration
      description: Delete a VirtualMachineInstanceMigration object.
      operationId: deleteNamespacedVirtualMachineInstanceMigration
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Migrations
      summary: Patch a Virtual Machine Instance Migration
      description: Patch a VirtualMachineInstanceMigration object.
      operationId: patchNamespacedVirtualMachineInstanceMigration
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances:
    get:
      tags:
      - Virtual Machines
      summary: List Virtual Machine Instances
      description: Get a list of VirtualMachineInstance objects in a namespace.
      operationId: listNamespacedVirtualMachineInstance
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}:
    get:
      tags:
      - Virtual Machines
      summary: Read a Virtual Machine Instance
      description: Get a VirtualMachineInstance object.
      operationId: readNamespacedVirtualMachineInstance
      parameters:
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstance'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstance'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstance'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachines:
    get:
      tags:
      - Virtual Machines
      summary: List Virtual Machines
      description: Get a list of VirtualMachine objects in a namespace.
      operationId: listNamespacedVirtualMachine
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Virtual Machines
      summary: Create a Virtual Machine
      description: Create a VirtualMachine object.
      operationId: createNamespacedVirtualMachine
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
          application/yaml:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}:
    get:
      tags:
      - Virtual Machines
      summary: Read a Virtual Machine
      description: Get a VirtualMachine object.
      operationId: readNamespacedVirtualMachine
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Virtual Machines
      summary: Replace a Virtual Machine
      description: Update a VirtualMachine object.
      operationId: replaceNamespacedVirtualMachine
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
          application/yaml:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Virtual Machines
      summary: Delete a Virtual Machine
      description: Delete a VirtualMachine object.
      operationId: deleteNamespacedVirtualMachine
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Virtual Machines
      summary: Patch a Virtual Machine
      description: Patch a VirtualMachine object.
      operationId: patchNamespacedVirtualMachine
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/kubevirt.io/v1/virtualmachineinstancemigrations:
    get:
      tags:
      - Migrations
      summary: List Virtual Machine Instance Migrations For All Namespaces
      description: Get a list of all VirtualMachineInstanceMigration objects.
      operationId: listVirtualMachineInstanceMigrationForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/kubevirt.io/v1/virtualmachineinstances:
    get:
      tags:
      - Virtual Machines
      summary: List Virtual Machine Instances For All Namespaces
      description: Get a list of all VirtualMachineInstance objects.
      operationId: listVirtualMachineInstanceForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/kubevirt.io/v1/virtualmachines:
    get:
      tags:
      - Virtual Machines
      summary: List Virtual Machines For All Namespaces
      description: Get a list of all VirtualMachine objects.
      operationId: listVirtualMachineForAllNamespaces
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
  /apis/network.harvesterhci.io/v1beta1/clusternetworks:
    get:
      tags:
      - Networks
      summary: List Cluster Networks
      description: Get a list of ClusterNetwork objects in a namespace.
      operationId: listNamespacedClusterNetwork
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetworkList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetworkList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetworkList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Networks
      summary: Create a Cluster Network
      description: Create a ClusterNetwork object.
      operationId: createNamespacedClusterNetwork
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
          application/yaml:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/network.harvesterhci.io/v1beta1/clusternetworks/{name}:
    get:
      tags:
      - Networks
      summary: Read a Cluster Network
      description: Get a ClusterNetwork object.
      operationId: readNamespacedClusterNetwork
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Networks
      summary: Replace a Cluster Network
      description: Update a ClusterNetwork object.
      operationId: replaceNamespacedClusterNetwork
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
          application/yaml:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Networks
      summary: Delete a Cluster Network
      description: Delete a ClusterNetwork object.
      operationId: deleteNamespacedClusterNetwork
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Networks
      summary: Patch a Cluster Network
      description: Patch a ClusterNetwork object.
      operationId: patchNamespacedClusterNetwork
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/network.harvesterhci.io/v1beta1/nodenetworks:
    get:
      tags:
      - Networks
      summary: List Node Networks
      description: Get a list of NodeNetwork objects in a namespace.
      operationId: listNamespacedNodeNetwork
      parameters:
      - name: continue
        in: query
        description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        schema:
          type: string
      - name: fieldSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        schema:
          type: string
      - name: includeUninitialized
        in: query
        description: "If true, partially initialized resources are included in the\
          \ response."
        schema:
          type: boolean
      - name: labelSelector
        in: query
        description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        schema:
          type: integer
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: resourceVersion
        in: query
        description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        schema:
          type: string
      - name: timeoutSeconds
        in: query
        description: TimeoutSeconds for the list/watch call.
        schema:
          type: integer
      - name: watch
        in: query
        description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    post:
      tags:
      - Networks
      summary: Create a Node Network
      description: Create a NodeNetwork object.
      operationId: createNamespacedNodeNetwork
      parameters:
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
          application/yaml:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /apis/network.harvesterhci.io/v1beta1/nodenetworks/{name}:
    get:
      tags:
      - Networks
      summary: Read a Node Network
      description: Get a NodeNetwork object.
      operationId: readNamespacedNodeNetwork
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          pattern: '[a-z0-9][a-z0-9-]*'
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: exact
        in: query
        description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        schema:
          type: boolean
      - name: export
        in: query
        description: Should this value be exported. Export strips fields that a user
          can not specify.
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
    put:
      tags:
      - Networks
      summary: Replace a Node Network
      description: Update a NodeNetwork object.
      operationId: replaceNamespacedNodeNetwork
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
          application/yaml:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
        "201":
          description: Create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Networks
      summary: Delete a Node Network
      description: Delete a NodeNetwork object.
      operationId: deleteNamespacedNodeNetwork
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      - name: gracePeriodSeconds
        in: query
        description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        schema:
          type: integer
      - name: orphanDependents
        in: query
        description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
      x-codegen-request-body-name: body
    patch:
      tags:
      - Networks
      summary: Patch a Node Network
      description: Patch a NodeNetwork object.
      operationId: patchNamespacedNodeNetwork
      parameters:
      - name: name
        in: path
        description: Name of the resource
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: "Object name and auth scope, such as for teams and projects"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
components:
  securitySchemes:
    Basic:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    harvesterhci.io.v1beta1.BackupTarget:
      type: object
      properties:
        bucketName:
          type: string
        bucketRegion:
          type: string
        endpoint:
          type: string
    harvesterhci.io.v1beta1.Condition:
      required:
      - status
      - type
      type: object
      properties:
        lastTransitionTime:
          type: string
        lastUpdateTime:
          type: string
        message:
          type: string
        reason:
          type: string
        status:
          type: string
          default: ""
        type:
          type: string
          default: ""
    harvesterhci.io.v1beta1.Error:
      type: object
      properties:
        message:
          type: string
        time:
          $ref: '#/components/schemas/k8s.io.v1.Time'
    harvesterhci.io.v1beta1.KeyPair:
      required:
      - apiVersion
      - kind
      - spec
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairSpec'
        status:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairStatus'
    harvesterhci.io.v1beta1.KeyPairList:
      required:
      - apiVersion
      - items
      - kind
      - metadata
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    harvesterhci.io.v1beta1.KeyPairSpec:
      required:
      - publicKey
      type: object
      properties:
        publicKey:
          type: string
          default: ""
    harvesterhci.io.v1beta1.KeyPairStatus:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
        fingerPrint:
          type: string
    harvesterhci.io.v1beta1.NodeUpgradeStatus:
      type: object
      properties:
        message:
          type: string
        reason:
          type: string
        state:
          type: string
    harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimSpec'
    harvesterhci.io.v1beta1.SecretBackup:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
            format: byte
        name:
          type: string
    harvesterhci.io.v1beta1.SupportBundle:
      required:
      - apiVersion
      - kind
      - spec
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleSpec'
        status:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleStatus'
    harvesterhci.io.v1beta1.SupportBundleList:
      required:
      - apiVersion
      - items
      - kind
      - metadata
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    harvesterhci.io.v1beta1.SupportBundleSpec:
      required:
      - description
      type: object
      properties:
        description:
          type: string
          default: ""
        issueURL:
          type: string
          default: ""
    harvesterhci.io.v1beta1.SupportBundleStatus:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
        filename:
          type: string
        filesize:
          type: integer
          format: int64
        progress:
          type: integer
          format: int32
        state:
          type: string
    harvesterhci.io.v1beta1.Upgrade:
      required:
      - apiVersion
      - kind
      - spec
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeSpec'
        status:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeStatus'
    harvesterhci.io.v1beta1.UpgradeList:
      required:
      - apiVersion
      - items
      - kind
      - metadata
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    harvesterhci.io.v1beta1.UpgradeSpec:
      type: object
      properties:
        image:
          type: string
          default: ""
        logEnabled:
          type: boolean
          default: false
        version:
          type: string
          default: ""
    harvesterhci.io.v1beta1.UpgradeStatus:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
        imageID:
          type: string
        nodeStatuses:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.NodeUpgradeStatus'
        previousVersion:
          type: string
        repoInfo:
          type: string
        singleNode:
          type: string
        upgradeLog:
          type: string
    harvesterhci.io.v1beta1.VirtualMachineBackup:
      required:
      - apiVersion
      - kind
      - spec
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupSpec'
        status:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupStatus'
    harvesterhci.io.v1beta1.VirtualMachineBackupList:
      required:
      - apiVersion
      - items
      - kind
      - metadata
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    harvesterhci.io.v1beta1.VirtualMachineBackupSpec:
      required:
      - source
      type: object
      properties:
        source:
          $ref: '#/components/schemas/k8s.io.v1.TypedLocalObjectReference'
        type:
          type: string
    harvesterhci.io.v1beta1.VirtualMachineBackupStatus:
      type: object
      properties:
        backupTarget:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.BackupTarget'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
        creationTime:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        csiDriverVolumeSnapshotClassNames:
          type: object
          additionalProperties:
            type: string
            default: ""
        error:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.Error'
        progress:
          type: integer
          format: int32
        readyToUse:
          type: boolean
        secretBackups:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.SecretBackup'
        source:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineSourceSpec'
        sourceUID:
          type: string
        volumeBackups:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.VolumeBackup'
    harvesterhci.io.v1beta1.VirtualMachineImage:
      required:
      - apiVersion
      - kind
      - spec
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageSpec'
        status:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageStatus'
    harvesterhci.io.v1beta1.VirtualMachineImageList:
      required:
      - apiVersion
      - items
      - kind
      - metadata
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    harvesterhci.io.v1beta1.VirtualMachineImageSpec:
      required:
      - displayName
      - sourceType
      type: object
      properties:
        checksum:
          type: string
          default: ""
        description:
          type: string
        displayName:
          type: string
          default: ""
        pvcName:
          type: string
          default: ""
        pvcNamespace:
          type: string
          default: ""
        retry:
          type: integer
          format: int32
          default: 0
        sourceType:
          type: string
          default: ""
        storageClassParameters:
          type: object
          additionalProperties:
            type: string
            default: ""
        url:
          type: string
          default: ""
    harvesterhci.io.v1beta1.VirtualMachineImageStatus:
      type: object
      properties:
        appliedUrl:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
        failed:
          type: integer
          format: int32
          default: 0
        lastFailedTime:
          type: string
        progress:
          type: integer
          format: int32
        size:
          type: integer
          format: int64
        storageClassName:
          type: string
    harvesterhci.io.v1beta1.VirtualMachineRestore:
      required:
      - apiVersion
      - kind
      - spec
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreSpec'
        status:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreStatus'
    harvesterhci.io.v1beta1.VirtualMachineRestoreList:
      required:
      - apiVersion
      - items
      - kind
      - metadata
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    harvesterhci.io.v1beta1.VirtualMachineRestoreSpec:
      required:
      - target
      - virtualMachineBackupName
      - virtualMachineBackupNamespace
      type: object
      properties:
        deletionPolicy:
          type: string
        keepMacAddress:
          type: boolean
        newVM:
          type: boolean
        target:
          $ref: '#/components/schemas/k8s.io.v1.TypedLocalObjectReference'
        virtualMachineBackupName:
          type: string
          default: ""
        virtualMachineBackupNamespace:
          type: string
          default: ""
    harvesterhci.io.v1beta1.VirtualMachineRestoreStatus:
      type: object
      properties:
        complete:
          type: boolean
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
        deletedVolumes:
          type: array
          items:
            type: string
            default: ""
        progress:
          type: integer
          format: int32
        restoreTime:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        restores:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.VolumeRestore'
        targetUID:
          type: string
    harvesterhci.io.v1beta1.VirtualMachineSourceSpec:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineSpec'
    harvesterhci.io.v1beta1.VirtualMachineTemplate:
      required:
      - apiVersion
      - kind
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateSpec'
        status:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateStatus'
    harvesterhci.io.v1beta1.VirtualMachineTemplateList:
      required:
      - apiVersion
      - items
      - kind
      - metadata
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    harvesterhci.io.v1beta1.VirtualMachineTemplateSpec:
      type: object
      properties:
        defaultVersionId:
          type: string
          default: ""
        description:
          type: string
    harvesterhci.io.v1beta1.VirtualMachineTemplateStatus:
      type: object
      properties:
        defaultVersion:
          type: integer
          format: int32
        latestVersion:
          type: integer
          format: int32
    harvesterhci.io.v1beta1.VirtualMachineTemplateVersion:
      required:
      - apiVersion
      - kind
      - spec
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec'
        status:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus'
    harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList:
      required:
      - apiVersion
      - items
      - kind
      - metadata
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec:
      required:
      - templateId
      type: object
      properties:
        description:
          type: string
        imageId:
          type: string
        keyPairIds:
          type: array
          items:
            type: string
            default: ""
        templateId:
          type: string
          default: ""
        vm:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineSourceSpec'
    harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
        version:
          type: integer
          format: int32
    harvesterhci.io.v1beta1.VolumeBackup:
      required:
      - csiDriverName
      - persistentVolumeClaim
      - volumeName
      type: object
      properties:
        creationTime:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        csiDriverName:
          type: string
          default: ""
        error:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.Error'
        longhornBackupName:
          type: string
        name:
          type: string
        persistentVolumeClaim:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec'
        progress:
          type: integer
          format: int32
        readyToUse:
          type: boolean
        volumeName:
          type: string
          default: ""
        volumeSize:
          type: integer
          format: int64
    harvesterhci.io.v1beta1.VolumeRestore:
      type: object
      properties:
        longhornEngineName:
          type: string
        persistentVolumeClaimSpec:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec'
        progress:
          type: integer
          format: int32
        volumeBackupName:
          type: string
        volumeName:
          type: string
        volumeSize:
          type: integer
          format: int64
    k8s.cni.cncf.io.v1.NetworkAttachmentDefinition:
      required:
      - apiVersion
      - kind
      - spec
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionSpec'
    k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList:
      required:
      - apiVersion
      - items
      - kind
      - metadata
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionSpec:
      required:
      - config
      type: object
      properties:
        config:
          type: string
          default: ""
    k8s.io.apimachinery.pkg.api.resource.Quantity:
      type: string
    k8s.io.apimachinery.pkg.util.intstr.IntOrString:
      type: string
      format: int-or-string
    k8s.io.v1.Affinity:
      type: object
      properties:
        nodeAffinity:
          $ref: '#/components/schemas/k8s.io.v1.NodeAffinity'
        podAffinity:
          $ref: '#/components/schemas/k8s.io.v1.PodAffinity'
        podAntiAffinity:
          $ref: '#/components/schemas/k8s.io.v1.PodAntiAffinity'
    k8s.io.v1.DeleteOptions:
      required:
      - apiVersion
      - kind
      type: object
      properties:
        apiVersion:
          type: string
        dryRun:
          type: array
          items:
            type: string
            default: ""
        gracePeriodSeconds:
          type: integer
          format: int64
        kind:
          type: string
        orphanDependents:
          type: boolean
        preconditions:
          $ref: '#/components/schemas/k8s.io.v1.Preconditions'
        propagationPolicy:
          type: string
    k8s.io.v1.DownwardAPIVolumeFile:
      required:
      - path
      type: object
      properties:
        fieldRef:
          $ref: '#/components/schemas/k8s.io.v1.ObjectFieldSelector'
        mode:
          type: integer
          format: int32
        path:
          type: string
          default: ""
        resourceFieldRef:
          $ref: '#/components/schemas/k8s.io.v1.ResourceFieldSelector'
    k8s.io.v1.ExecAction:
      type: object
      properties:
        command:
          type: array
          items:
            type: string
            default: ""
    k8s.io.v1.FieldsV1:
      type: object
    k8s.io.v1.HTTPGetAction:
      required:
      - port
      type: object
      properties:
        host:
          type: string
        httpHeaders:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.HTTPHeader'
        path:
          type: string
        port:
          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.util.intstr.IntOrString'
        scheme:
          type: string
          enum:
          - HTTP
          - HTTPS
    k8s.io.v1.HTTPHeader:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
          default: ""
        value:
          type: string
          default: ""
    k8s.io.v1.LabelSelector:
      type: object
      properties:
        matchExpressions:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.LabelSelectorRequirement'
        matchLabels:
          type: object
          additionalProperties:
            type: string
            default: ""
      x-kubernetes-map-type: atomic
    k8s.io.v1.LabelSelectorRequirement:
      required:
      - key
      - operator
      type: object
      properties:
        key:
          type: string
          default: ""
          x-kubernetes-patch-strategy: merge
          x-kubernetes-patch-merge-key: key
        operator:
          type: string
          default: ""
        values:
          type: array
          items:
            type: string
            default: ""
    k8s.io.v1.ListMeta:
      type: object
      properties:
        continue:
          type: string
        remainingItemCount:
          type: integer
          format: int64
        resourceVersion:
          type: string
        selfLink:
          type: string
    k8s.io.v1.LocalObjectReference:
      type: object
      properties:
        name:
          type: string
      x-kubernetes-map-type: atomic
    k8s.io.v1.ManagedFieldsEntry:
      type: object
      properties:
        apiVersion:
          type: string
        fieldsType:
          type: string
        fieldsV1:
          $ref: '#/components/schemas/k8s.io.v1.FieldsV1'
        manager:
          type: string
        operation:
          type: string
        subresource:
          type: string
        time:
          $ref: '#/components/schemas/k8s.io.v1.Time'
    k8s.io.v1.NodeAffinity:
      type: object
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.PreferredSchedulingTerm'
        requiredDuringSchedulingIgnoredDuringExecution:
          $ref: '#/components/schemas/k8s.io.v1.NodeSelector'
    k8s.io.v1.NodeSelector:
      required:
      - nodeSelectorTerms
      type: object
      properties:
        nodeSelectorTerms:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.NodeSelectorTerm'
      x-kubernetes-map-type: atomic
    k8s.io.v1.NodeSelectorRequirement:
      required:
      - key
      - operator
      type: object
      properties:
        key:
          type: string
          default: ""
        operator:
          type: string
          default: ""
          enum:
          - DoesNotExist
          - Exists
          - Gt
          - In
          - Lt
          - NotIn
        values:
          type: array
          items:
            type: string
            default: ""
    k8s.io.v1.NodeSelectorTerm:
      type: object
      properties:
        matchExpressions:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.NodeSelectorRequirement'
        matchFields:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.NodeSelectorRequirement'
      x-kubernetes-map-type: atomic
    k8s.io.v1.ObjectFieldSelector:
      required:
      - fieldPath
      type: object
      properties:
        apiVersion:
          type: string
        fieldPath:
          type: string
          default: ""
      x-kubernetes-map-type: atomic
    k8s.io.v1.ObjectMeta:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
    k8s.io.v1.OwnerReference:
      required:
      - apiVersion
      - kind
      - name
      - uid
      type: object
      properties:
        apiVersion:
          type: string
          default: ""
        blockOwnerDeletion:
          type: boolean
        controller:
          type: boolean
        kind:
          type: string
          default: ""
        name:
          type: string
          default: ""
        uid:
          type: string
          default: ""
      x-kubernetes-map-type: atomic
    k8s.io.v1.Patch:
      type: object
    k8s.io.v1.PersistentVolumeClaim:
      required:
      - apiVersion
      - kind
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimSpec'
        status:
          $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimStatus'
    k8s.io.v1.PersistentVolumeClaimCondition:
      required:
      - status
      - type
      type: object
      properties:
        lastProbeTime:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        lastTransitionTime:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        message:
          type: string
        reason:
          type: string
        status:
          type: string
          default: ""
        type:
          type: string
          default: ""
    k8s.io.v1.PersistentVolumeClaimList:
      required:
      - apiVersion
      - items
      - kind
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    k8s.io.v1.PersistentVolumeClaimSpec:
      type: object
      properties:
        accessModes:
          type: array
          items:
            type: string
            default: ""
        dataSource:
          $ref: '#/components/schemas/k8s.io.v1.TypedLocalObjectReference'
        dataSourceRef:
          $ref: '#/components/schemas/k8s.io.v1.TypedObjectReference'
        resources:
          $ref: '#/components/schemas/k8s.io.v1.ResourceRequirements'
        selector:
          $ref: '#/components/schemas/k8s.io.v1.LabelSelector'
        storageClassName:
          type: string
        volumeMode:
          type: string
        volumeName:
          type: string
    k8s.io.v1.PersistentVolumeClaimStatus:
      type: object
      properties:
        accessModes:
          type: array
          items:
            type: string
            default: ""
        allocatedResources:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
        capacity:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimCondition'
          x-kubernetes-patch-strategy: merge
          x-kubernetes-patch-merge-key: type
        phase:
          type: string
          enum:
          - Bound
          - Lost
          - Pending
        resizeStatus:
          type: string
    k8s.io.v1.PersistentVolumeClaimVolumeSource:
      required:
      - claimName
      type: object
      properties:
        claimName:
          type: string
          default: ""
        readOnly:
          type: boolean
    k8s.io.v1.PodAffinity:
      type: object
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.WeightedPodAffinityTerm'
        requiredDuringSchedulingIgnoredDuringExecution:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.PodAffinityTerm'
    k8s.io.v1.PodAffinityTerm:
      required:
      - topologyKey
      type: object
      properties:
        labelSelector:
          $ref: '#/components/schemas/k8s.io.v1.LabelSelector'
        namespaceSelector:
          $ref: '#/components/schemas/k8s.io.v1.LabelSelector'
        namespaces:
          type: array
          items:
            type: string
            default: ""
        topologyKey:
          type: string
          default: ""
    k8s.io.v1.PodAntiAffinity:
      type: object
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.WeightedPodAffinityTerm'
        requiredDuringSchedulingIgnoredDuringExecution:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.PodAffinityTerm'
    k8s.io.v1.PodDNSConfig:
      type: object
      properties:
        nameservers:
          type: array
          items:
            type: string
            default: ""
        options:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.PodDNSConfigOption'
        searches:
          type: array
          items:
            type: string
            default: ""
    k8s.io.v1.PodDNSConfigOption:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    k8s.io.v1.Preconditions:
      type: object
      properties:
        resourceVersion:
          type: string
        uid:
          type: string
    k8s.io.v1.PreferredSchedulingTerm:
      required:
      - preference
      - weight
      type: object
      properties:
        preference:
          $ref: '#/components/schemas/k8s.io.v1.NodeSelectorTerm'
        weight:
          type: integer
          format: int32
          default: 0
    k8s.io.v1.ResourceClaim:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          default: ""
    k8s.io.v1.ResourceFieldSelector:
      required:
      - resource
      type: object
      properties:
        containerName:
          type: string
        divisor:
          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
        resource:
          type: string
          default: ""
      x-kubernetes-map-type: atomic
    k8s.io.v1.ResourceRequirements:
      type: object
      properties:
        claims:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.ResourceClaim'
          x-kubernetes-list-type: map
          x-kubernetes-list-map-keys:
          - name
        limits:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
        requests:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
    k8s.io.v1.Status:
      required:
      - apiVersion
      - kind
      type: object
      properties:
        apiVersion:
          type: string
        code:
          type: integer
          format: int32
        details:
          $ref: '#/components/schemas/k8s.io.v1.StatusDetails'
        kind:
          type: string
        message:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
        reason:
          type: string
        status:
          type: string
    k8s.io.v1.StatusCause:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
        reason:
          type: string
    k8s.io.v1.StatusDetails:
      type: object
      properties:
        causes:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.StatusCause'
        group:
          type: string
        kind:
          type: string
        name:
          type: string
        retryAfterSeconds:
          type: integer
          format: int32
        uid:
          type: string
    k8s.io.v1.TCPSocketAction:
      required:
      - port
      type: object
      properties:
        host:
          type: string
        port:
          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.util.intstr.IntOrString'
    k8s.io.v1.Time:
      type: string
      default: ""
    k8s.io.v1.Toleration:
      type: object
      properties:
        effect:
          type: string
          enum:
          - NoExecute
          - NoSchedule
          - PreferNoSchedule
        key:
          type: string
        operator:
          type: string
          enum:
          - Equal
          - Exists
        tolerationSeconds:
          type: integer
          format: int64
        value:
          type: string
    k8s.io.v1.TopologySpreadConstraint:
      required:
      - maxSkew
      - topologyKey
      - whenUnsatisfiable
      type: object
      properties:
        labelSelector:
          $ref: '#/components/schemas/k8s.io.v1.LabelSelector'
        matchLabelKeys:
          type: array
          items:
            type: string
            default: ""
          x-kubernetes-list-type: atomic
        maxSkew:
          type: integer
          format: int32
          default: 0
        minDomains:
          type: integer
          format: int32
        nodeAffinityPolicy:
          type: string
        nodeTaintsPolicy:
          type: string
        topologyKey:
          type: string
          default: ""
        whenUnsatisfiable:
          type: string
          default: ""
          enum:
          - DoNotSchedule
          - ScheduleAnyway
    k8s.io.v1.TypedLocalObjectReference:
      required:
      - kind
      - name
      type: object
      properties:
        apiGroup:
          type: string
        kind:
          type: string
          default: ""
        name:
          type: string
          default: ""
      x-kubernetes-map-type: atomic
    k8s.io.v1.TypedObjectReference:
      required:
      - kind
      - name
      type: object
      properties:
        apiGroup:
          type: string
        kind:
          type: string
          default: ""
        name:
          type: string
          default: ""
        namespace:
          type: string
    k8s.io.v1.WeightedPodAffinityTerm:
      required:
      - podAffinityTerm
      - weight
      type: object
      properties:
        podAffinityTerm:
          $ref: '#/components/schemas/k8s.io.v1.PodAffinityTerm'
        weight:
          type: integer
          format: int32
          default: 0
    kubevirt.io.api.core.v1.AccessCredential:
      type: object
      properties:
        sshPublicKey:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential'
        userPassword:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.UserPasswordAccessCredential'
    kubevirt.io.api.core.v1.AccessCredentialSecretSource:
      required:
      - secretName
      type: object
      properties:
        secretName:
          type: string
          default: ""
    kubevirt.io.api.core.v1.AddVolumeOptions:
      required:
      - disk
      - name
      - volumeSource
      type: object
      properties:
        disk:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Disk'
        dryRun:
          type: array
          items:
            type: string
            default: ""
          x-kubernetes-list-type: atomic
        name:
          type: string
          default: ""
        volumeSource:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.HotplugVolumeSource'
    kubevirt.io.api.core.v1.BIOS:
      type: object
      properties:
        useSerial:
          type: boolean
    kubevirt.io.api.core.v1.BlockSize:
      type: object
      properties:
        custom:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.CustomBlockSize'
        matchVolume:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
    kubevirt.io.api.core.v1.Bootloader:
      type: object
      properties:
        bios:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.BIOS'
        efi:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.EFI'
    kubevirt.io.api.core.v1.CDRomTarget:
      type: object
      properties:
        bus:
          type: string
        readonly:
          type: boolean
        tray:
          type: string
    kubevirt.io.api.core.v1.CPU:
      type: object
      properties:
        cores:
          type: integer
          format: int64
        dedicatedCpuPlacement:
          type: boolean
        features:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.CPUFeature'
        isolateEmulatorThread:
          type: boolean
        maxSockets:
          type: integer
          format: int64
        model:
          type: string
        numa:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.NUMA'
        realtime:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Realtime'
        sockets:
          type: integer
          format: int64
        threads:
          type: integer
          format: int64
    kubevirt.io.api.core.v1.CPUFeature:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          default: ""
        policy:
          type: string
    kubevirt.io.api.core.v1.CPUTopology:
      type: object
      properties:
        cores:
          type: integer
          format: int64
        sockets:
          type: integer
          format: int64
        threads:
          type: integer
          format: int64
    kubevirt.io.api.core.v1.Chassis:
      type: object
      properties:
        asset:
          type: string
        manufacturer:
          type: string
        serial:
          type: string
        sku:
          type: string
        version:
          type: string
    kubevirt.io.api.core.v1.ClientPassthroughDevices:
      type: object
    kubevirt.io.api.core.v1.Clock:
      type: object
      properties:
        timer:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Timer'
        timezone:
          type: string
        utc:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.ClockOffsetUTC'
    kubevirt.io.api.core.v1.ClockOffsetUTC:
      type: object
      properties:
        offsetSeconds:
          type: integer
          format: int32
    kubevirt.io.api.core.v1.CloudInitConfigDriveSource:
      type: object
      properties:
        networkData:
          type: string
        networkDataBase64:
          type: string
        networkDataSecretRef:
          $ref: '#/components/schemas/k8s.io.v1.LocalObjectReference'
        secretRef:
          $ref: '#/components/schemas/k8s.io.v1.LocalObjectReference'
        userData:
          type: string
        userDataBase64:
          type: string
    kubevirt.io.api.core.v1.CloudInitNoCloudSource:
      type: object
      properties:
        networkData:
          type: string
        networkDataBase64:
          type: string
        networkDataSecretRef:
          $ref: '#/components/schemas/k8s.io.v1.LocalObjectReference'
        secretRef:
          $ref: '#/components/schemas/k8s.io.v1.LocalObjectReference'
        userData:
          type: string
        userDataBase64:
          type: string
    kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation:
      type: object
    kubevirt.io.api.core.v1.ConfigMapVolumeSource:
      type: object
      properties:
        name:
          type: string
        optional:
          type: boolean
        volumeLabel:
          type: string
    kubevirt.io.api.core.v1.ContainerDiskSource:
      required:
      - image
      type: object
      properties:
        image:
          type: string
          default: ""
        imagePullPolicy:
          type: string
          enum:
          - Always
          - IfNotPresent
          - Never
        imagePullSecret:
          type: string
        path:
          type: string
    kubevirt.io.api.core.v1.CustomBlockSize:
      required:
      - logical
      - physical
      type: object
      properties:
        logical:
          type: integer
          format: int32
          default: 0
        physical:
          type: integer
          format: int32
          default: 0
    kubevirt.io.api.core.v1.DHCPOptions:
      type: object
      properties:
        bootFileName:
          type: string
        ntpServers:
          type: array
          items:
            type: string
            default: ""
        privateOptions:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.DHCPPrivateOptions'
        tftpServerName:
          type: string
    kubevirt.io.api.core.v1.DHCPPrivateOptions:
      required:
      - option
      - value
      type: object
      properties:
        option:
          type: integer
          format: int32
          default: 0
        value:
          type: string
          default: ""
    kubevirt.io.api.core.v1.DataVolumeSource:
      required:
      - name
      type: object
      properties:
        hotpluggable:
          type: boolean
        name:
          type: string
          default: ""
    kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus:
      type: object
    kubevirt.io.api.core.v1.DataVolumeTemplateSpec:
      required:
      - apiVersion
      - kind
      - spec
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec'
        status:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus'
    kubevirt.io.api.core.v1.Devices:
      type: object
      properties:
        autoattachGraphicsDevice:
          type: boolean
        autoattachInputDevice:
          type: boolean
        autoattachMemBalloon:
          type: boolean
        autoattachPodInterface:
          type: boolean
        autoattachSerialConsole:
          type: boolean
        autoattachVSOCK:
          type: boolean
        blockMultiQueue:
          type: boolean
        clientPassthrough:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.ClientPassthroughDevices'
        disableHotplug:
          type: boolean
        disks:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.Disk'
        downwardMetrics:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.DownwardMetrics'
        filesystems:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.Filesystem'
          x-kubernetes-list-type: atomic
        gpus:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.GPU'
          x-kubernetes-list-type: atomic
        hostDevices:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.HostDevice'
          x-kubernetes-list-type: atomic
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.Input'
        interfaces:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.Interface'
        logSerialConsole:
          type: boolean
        networkInterfaceMultiqueue:
          type: boolean
        rng:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Rng'
        sound:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.SoundDevice'
        tpm:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.TPMDevice'
        useVirtioTransitional:
          type: boolean
        watchdog:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Watchdog'
    kubevirt.io.api.core.v1.Disk:
      required:
      - name
      type: object
      properties:
        blockSize:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.BlockSize'
        bootOrder:
          type: integer
          format: int32
        cache:
          type: string
        cdrom:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.CDRomTarget'
        dedicatedIOThread:
          type: boolean
        disk:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.DiskTarget'
        errorPolicy:
          type: string
        io:
          type: string
        lun:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.LunTarget'
        name:
          type: string
          default: ""
        serial:
          type: string
        shareable:
          type: boolean
        tag:
          type: string
    kubevirt.io.api.core.v1.DiskTarget:
      type: object
      properties:
        bus:
          type: string
        pciAddress:
          type: string
        readonly:
          type: boolean
    kubevirt.io.api.core.v1.DomainMemoryDumpInfo:
      type: object
      properties:
        claimName:
          type: string
        endTimestamp:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        startTimestamp:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        targetFileName:
          type: string
    kubevirt.io.api.core.v1.DomainSpec:
      required:
      - devices
      type: object
      properties:
        chassis:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Chassis'
        clock:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Clock'
        cpu:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.CPU'
        devices:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Devices'
        features:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Features'
        firmware:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Firmware'
        ioThreadsPolicy:
          type: string
        launchSecurity:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.LaunchSecurity'
        machine:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Machine'
        memory:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Memory'
        resources:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.ResourceRequirements'
    kubevirt.io.api.core.v1.DownwardAPIVolumeSource:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.DownwardAPIVolumeFile'
        volumeLabel:
          type: string
    kubevirt.io.api.core.v1.DownwardMetrics:
      type: object
    kubevirt.io.api.core.v1.DownwardMetricsVolumeSource:
      type: object
    kubevirt.io.api.core.v1.EFI:
      type: object
      properties:
        persistent:
          type: boolean
        secureBoot:
          type: boolean
    kubevirt.io.api.core.v1.EmptyDiskSource:
      required:
      - capacity
      type: object
      properties:
        capacity:
          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
    kubevirt.io.api.core.v1.EphemeralVolumeSource:
      type: object
      properties:
        persistentVolumeClaim:
          $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimVolumeSource'
    kubevirt.io.api.core.v1.FeatureAPIC:
      type: object
      properties:
        enabled:
          type: boolean
        endOfInterrupt:
          type: boolean
    kubevirt.io.api.core.v1.FeatureHyperv:
      type: object
      properties:
        evmcs:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        frequencies:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        ipi:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        reenlightenment:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        relaxed:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        reset:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        runtime:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        spinlocks:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureSpinlocks'
        synic:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        synictimer:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.SyNICTimer'
        tlbflush:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        vapic:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        vendorid:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureVendorID'
        vpindex:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
    kubevirt.io.api.core.v1.FeatureKVM:
      type: object
      properties:
        hidden:
          type: boolean
    kubevirt.io.api.core.v1.FeatureSpinlocks:
      type: object
      properties:
        enabled:
          type: boolean
        spinlocks:
          type: integer
          format: int64
    kubevirt.io.api.core.v1.FeatureState:
      type: object
      properties:
        enabled:
          type: boolean
    kubevirt.io.api.core.v1.FeatureVendorID:
      type: object
      properties:
        enabled:
          type: boolean
        vendorid:
          type: string
    kubevirt.io.api.core.v1.Features:
      type: object
      properties:
        acpi:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        apic:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureAPIC'
        hyperv:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureHyperv'
        kvm:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureKVM'
        pvspinlock:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        smm:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
    kubevirt.io.api.core.v1.Filesystem:
      required:
      - name
      - virtiofs
      type: object
      properties:
        name:
          type: string
          default: ""
        virtiofs:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FilesystemVirtiofs'
    kubevirt.io.api.core.v1.FilesystemVirtiofs:
      type: object
    kubevirt.io.api.core.v1.Firmware:
      type: object
      properties:
        bootloader:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Bootloader'
        kernelBoot:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.KernelBoot'
        serial:
          type: string
        uuid:
          type: string
    kubevirt.io.api.core.v1.GPU:
      required:
      - deviceName
      - name
      type: object
      properties:
        deviceName:
          type: string
          default: ""
        name:
          type: string
          default: ""
        tag:
          type: string
        virtualGPUOptions:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VGPUOptions'
    kubevirt.io.api.core.v1.GuestAgentPing:
      type: object
    kubevirt.io.api.core.v1.HPETTimer:
      type: object
      properties:
        present:
          type: boolean
        tickPolicy:
          type: string
    kubevirt.io.api.core.v1.HostDevice:
      required:
      - deviceName
      - name
      type: object
      properties:
        deviceName:
          type: string
          default: ""
        name:
          type: string
          default: ""
        tag:
          type: string
    kubevirt.io.api.core.v1.HostDisk:
      required:
      - path
      - type
      type: object
      properties:
        capacity:
          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
        path:
          type: string
          default: ""
        shared:
          type: boolean
        type:
          type: string
          default: ""
    kubevirt.io.api.core.v1.HotplugVolumeSource:
      type: object
      properties:
        dataVolume:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.DataVolumeSource'
        persistentVolumeClaim:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource'
    kubevirt.io.api.core.v1.HotplugVolumeStatus:
      type: object
      properties:
        attachPodName:
          type: string
        attachPodUID:
          type: string
    kubevirt.io.api.core.v1.Hugepages:
      type: object
      properties:
        pageSize:
          type: string
    kubevirt.io.api.core.v1.HypervTimer:
      type: object
      properties:
        present:
          type: boolean
    kubevirt.io.api.core.v1.I6300ESBWatchdog:
      type: object
      properties:
        action:
          type: string
    kubevirt.io.api.core.v1.Input:
      required:
      - name
      - type
      type: object
      properties:
        bus:
          type: string
        name:
          type: string
          default: ""
        type:
          type: string
          default: ""
    kubevirt.io.api.core.v1.InstancetypeMatcher:
      type: object
      properties:
        inferFromVolume:
          type: string
        inferFromVolumeFailurePolicy:
          type: string
        kind:
          type: string
        name:
          type: string
        revisionName:
          type: string
    kubevirt.io.api.core.v1.Interface:
      required:
      - name
      type: object
      properties:
        acpiIndex:
          type: integer
          format: int32
        binding:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.PluginBinding'
        bootOrder:
          type: integer
          format: int32
        bridge:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.InterfaceBridge'
        dhcpOptions:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.DHCPOptions'
        macAddress:
          type: string
        macvtap:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.InterfaceMacvtap'
        masquerade:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.InterfaceMasquerade'
        model:
          type: string
        name:
          type: string
          default: ""
        passt:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.InterfacePasst'
        pciAddress:
          type: string
        ports:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.Port'
        slirp:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.InterfaceSlirp'
        sriov:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.InterfaceSRIOV'
        state:
          type: string
        tag:
          type: string
    kubevirt.io.api.core.v1.InterfaceBridge:
      type: object
    kubevirt.io.api.core.v1.InterfaceMacvtap:
      type: object
    kubevirt.io.api.core.v1.InterfaceMasquerade:
      type: object
    kubevirt.io.api.core.v1.InterfacePasst:
      type: object
    kubevirt.io.api.core.v1.InterfaceSRIOV:
      type: object
    kubevirt.io.api.core.v1.InterfaceSlirp:
      type: object
    kubevirt.io.api.core.v1.KVMTimer:
      type: object
      properties:
        present:
          type: boolean
    kubevirt.io.api.core.v1.KernelBoot:
      type: object
      properties:
        container:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.KernelBootContainer'
        kernelArgs:
          type: string
    kubevirt.io.api.core.v1.KernelBootContainer:
      required:
      - image
      type: object
      properties:
        image:
          type: string
          default: ""
        imagePullPolicy:
          type: string
          enum:
          - Always
          - IfNotPresent
          - Never
        imagePullSecret:
          type: string
        initrdPath:
          type: string
        kernelPath:
          type: string
    kubevirt.io.api.core.v1.LaunchSecurity:
      type: object
      properties:
        sev:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.SEV'
    kubevirt.io.api.core.v1.LiveUpdateAffinity:
      type: object
    kubevirt.io.api.core.v1.LiveUpdateCPU:
      type: object
      properties:
        maxSockets:
          type: integer
          format: int64
    kubevirt.io.api.core.v1.LiveUpdateFeatures:
      type: object
      properties:
        affinity:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.LiveUpdateAffinity'
        cpu:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.LiveUpdateCPU'
        memory:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.LiveUpdateMemory'
    kubevirt.io.api.core.v1.LiveUpdateMemory:
      type: object
      properties:
        maxGuest:
          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
    kubevirt.io.api.core.v1.LunTarget:
      type: object
      properties:
        bus:
          type: string
        readonly:
          type: boolean
        reservation:
          type: boolean
    kubevirt.io.api.core.v1.Machine:
      type: object
      properties:
        type:
          type: string
          default: ""
    kubevirt.io.api.core.v1.Memory:
      type: object
      properties:
        guest:
          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
        hugepages:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Hugepages'
        maxGuest:
          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
    kubevirt.io.api.core.v1.MemoryDumpVolumeSource:
      required:
      - claimName
      type: object
      properties:
        claimName:
          type: string
          default: ""
        hotpluggable:
          type: boolean
        readOnly:
          type: boolean
    kubevirt.io.api.core.v1.MemoryStatus:
      type: object
      properties:
        guestAtBoot:
          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
        guestCurrent:
          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
        guestRequested:
          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
    kubevirt.io.api.core.v1.MigrationConfiguration:
      type: object
      properties:
        allowAutoConverge:
          type: boolean
        allowPostCopy:
          type: boolean
        bandwidthPerMigration:
          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
        completionTimeoutPerGiB:
          type: integer
          format: int64
        disableTLS:
          type: boolean
        matchSELinuxLevelOnMigration:
          type: boolean
        network:
          type: string
        nodeDrainTaintKey:
          type: string
        parallelMigrationsPerCluster:
          type: integer
          format: int64
        parallelOutboundMigrationsPerNode:
          type: integer
          format: int64
        progressTimeout:
          type: integer
          format: int64
        unsafeMigrationOverride:
          type: boolean
    kubevirt.io.api.core.v1.MultusNetwork:
      required:
      - networkName
      type: object
      properties:
        default:
          type: boolean
        networkName:
          type: string
          default: ""
    kubevirt.io.api.core.v1.NUMA:
      type: object
      properties:
        guestMappingPassthrough:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough'
    kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough:
      type: object
    kubevirt.io.api.core.v1.Network:
      required:
      - name
      type: object
      properties:
        multus:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.MultusNetwork'
        name:
          type: string
          default: ""
        pod:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.PodNetwork'
    kubevirt.io.api.core.v1.NoCloudSSHPublicKeyAccessCredentialPropagation:
      type: object
    kubevirt.io.api.core.v1.PITTimer:
      type: object
      properties:
        present:
          type: boolean
        tickPolicy:
          type: string
    kubevirt.io.api.core.v1.PersistentVolumeClaimInfo:
      type: object
      properties:
        accessModes:
          type: array
          items:
            type: string
            default: ""
          x-kubernetes-list-type: atomic
        capacity:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
        filesystemOverhead:
          type: string
        preallocated:
          type: boolean
        requests:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
        volumeMode:
          type: string
    kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource:
      required:
      - claimName
      type: object
      properties:
        claimName:
          type: string
          default: ""
        hotpluggable:
          type: boolean
        readOnly:
          type: boolean
    kubevirt.io.api.core.v1.PluginBinding:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          default: ""
    kubevirt.io.api.core.v1.PodNetwork:
      type: object
      properties:
        vmIPv6NetworkCIDR:
          type: string
        vmNetworkCIDR:
          type: string
    kubevirt.io.api.core.v1.Port:
      required:
      - port
      type: object
      properties:
        name:
          type: string
        port:
          type: integer
          format: int32
          default: 0
        protocol:
          type: string
    kubevirt.io.api.core.v1.PreferenceMatcher:
      type: object
      properties:
        inferFromVolume:
          type: string
        inferFromVolumeFailurePolicy:
          type: string
        kind:
          type: string
        name:
          type: string
        revisionName:
          type: string
    kubevirt.io.api.core.v1.Probe:
      type: object
      properties:
        exec:
          $ref: '#/components/schemas/k8s.io.v1.ExecAction'
        failureThreshold:
          type: integer
          format: int32
        guestAgentPing:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.GuestAgentPing'
        httpGet:
          $ref: '#/components/schemas/k8s.io.v1.HTTPGetAction'
        initialDelaySeconds:
          type: integer
          format: int32
        periodSeconds:
          type: integer
          format: int32
        successThreshold:
          type: integer
          format: int32
        tcpSocket:
          $ref: '#/components/schemas/k8s.io.v1.TCPSocketAction'
        timeoutSeconds:
          type: integer
          format: int32
    kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation:
      required:
      - users
      type: object
      properties:
        users:
          type: array
          items:
            type: string
            default: ""
          x-kubernetes-list-type: set
    kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation:
      type: object
    kubevirt.io.api.core.v1.RTCTimer:
      type: object
      properties:
        present:
          type: boolean
        tickPolicy:
          type: string
        track:
          type: string
    kubevirt.io.api.core.v1.Realtime:
      type: object
      properties:
        mask:
          type: string
    kubevirt.io.api.core.v1.RemoveVolumeOptions:
      required:
      - name
      type: object
      properties:
        dryRun:
          type: array
          items:
            type: string
            default: ""
          x-kubernetes-list-type: atomic
        name:
          type: string
          default: ""
    kubevirt.io.api.core.v1.ResourceRequirements:
      type: object
      properties:
        limits:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
        overcommitGuestOverhead:
          type: boolean
        requests:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
    kubevirt.io.api.core.v1.Rng:
      type: object
    kubevirt.io.api.core.v1.SEV:
      type: object
      properties:
        attestation:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.SEVAttestation'
        dhCert:
          type: string
        policy:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.SEVPolicy'
        session:
          type: string
    kubevirt.io.api.core.v1.SEVAttestation:
      type: object
    kubevirt.io.api.core.v1.SEVPolicy:
      type: object
      properties:
        encryptedState:
          type: boolean
    kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential:
      required:
      - propagationMethod
      - source
      type: object
      properties:
        propagationMethod:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod'
        source:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource'
    kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod:
      type: object
      properties:
        configDrive:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation'
        noCloud:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.NoCloudSSHPublicKeyAccessCredentialPropagation'
        qemuGuestAgent:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation'
    kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource:
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.AccessCredentialSecretSource'
    kubevirt.io.api.core.v1.SecretVolumeSource:
      type: object
      properties:
        optional:
          type: boolean
        secretName:
          type: string
        volumeLabel:
          type: string
    kubevirt.io.api.core.v1.ServiceAccountVolumeSource:
      type: object
      properties:
        serviceAccountName:
          type: string
    kubevirt.io.api.core.v1.SoundDevice:
      required:
      - name
      type: object
      properties:
        model:
          type: string
        name:
          type: string
          default: ""
    kubevirt.io.api.core.v1.SyNICTimer:
      type: object
      properties:
        direct:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        enabled:
          type: boolean
    kubevirt.io.api.core.v1.SysprepSource:
      type: object
      properties:
        configMap:
          $ref: '#/components/schemas/k8s.io.v1.LocalObjectReference'
        secret:
          $ref: '#/components/schemas/k8s.io.v1.LocalObjectReference'
    kubevirt.io.api.core.v1.TPMDevice:
      type: object
      properties:
        persistent:
          type: boolean
    kubevirt.io.api.core.v1.Timer:
      type: object
      properties:
        hpet:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.HPETTimer'
        hyperv:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.HypervTimer'
        kvm:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.KVMTimer'
        pit:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.PITTimer'
        rtc:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.RTCTimer'
    kubevirt.io.api.core.v1.TopologyHints:
      type: object
      properties:
        tscFrequency:
          type: integer
          format: int64
    kubevirt.io.api.core.v1.UserPasswordAccessCredential:
      required:
      - propagationMethod
      - source
      type: object
      properties:
        propagationMethod:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod'
        source:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource'
    kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod:
      type: object
      properties:
        qemuGuestAgent:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation'
    kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource:
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.AccessCredentialSecretSource'
    kubevirt.io.api.core.v1.VGPUDisplayOptions:
      type: object
      properties:
        enabled:
          type: boolean
        ramFB:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
    kubevirt.io.api.core.v1.VGPUOptions:
      type: object
      properties:
        display:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VGPUDisplayOptions'
    kubevirt.io.api.core.v1.VirtualMachine:
      required:
      - apiVersion
      - kind
      - spec
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineSpec'
        status:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineStatus'
    kubevirt.io.api.core.v1.VirtualMachineCondition:
      required:
      - status
      - type
      type: object
      properties:
        lastProbeTime:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        lastTransitionTime:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        message:
          type: string
        reason:
          type: string
        status:
          type: string
          default: ""
        type:
          type: string
          default: ""
    kubevirt.io.api.core.v1.VirtualMachineInstance:
      required:
      - apiVersion
      - kind
      - spec
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceSpec'
        status:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceStatus'
    kubevirt.io.api.core.v1.VirtualMachineInstanceCondition:
      required:
      - status
      - type
      type: object
      properties:
        lastProbeTime:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        lastTransitionTime:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        message:
          type: string
        reason:
          type: string
        status:
          type: string
          default: ""
        type:
          type: string
          default: ""
    kubevirt.io.api.core.v1.VirtualMachineInstanceGuestOSInfo:
      type: object
      properties:
        id:
          type: string
        kernelRelease:
          type: string
        kernelVersion:
          type: string
        machine:
          type: string
        name:
          type: string
        prettyName:
          type: string
        version:
          type: string
        versionId:
          type: string
    kubevirt.io.api.core.v1.VirtualMachineInstanceList:
      required:
      - apiVersion
      - items
      - kind
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstance'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigration:
      required:
      - apiVersion
      - kind
      - spec
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationSpec'
        status:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationStatus'
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationCondition:
      required:
      - status
      - type
      type: object
      properties:
        lastProbeTime:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        lastTransitionTime:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        message:
          type: string
        reason:
          type: string
        status:
          type: string
          default: ""
        type:
          type: string
          default: ""
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList:
      required:
      - apiVersion
      - items
      - kind
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationPhaseTransitionTimestamp:
      type: object
      properties:
        phase:
          type: string
        phaseTransitionTimestamp:
          $ref: '#/components/schemas/k8s.io.v1.Time'
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationSpec:
      type: object
      properties:
        vmiName:
          type: string
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationState:
      type: object
      properties:
        abortRequested:
          type: boolean
        abortStatus:
          type: string
        completed:
          type: boolean
        endTimestamp:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        failed:
          type: boolean
        migrationConfiguration:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.MigrationConfiguration'
        migrationPolicyName:
          type: string
        migrationUid:
          type: string
        mode:
          type: string
        sourceNode:
          type: string
        startTimestamp:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        targetAttachmentPodUID:
          type: string
        targetCPUSet:
          type: array
          items:
            type: integer
            format: int32
            default: 0
          x-kubernetes-list-type: atomic
        targetDirectMigrationNodePorts:
          type: object
          additionalProperties:
            type: integer
            format: int32
            default: 0
        targetNode:
          type: string
        targetNodeAddress:
          type: string
        targetNodeDomainDetected:
          type: boolean
        targetNodeDomainReadyTimestamp:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        targetNodeTopology:
          type: string
        targetPod:
          type: string
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationStatus:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationCondition'
        migrationState:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationState'
        phase:
          type: string
        phaseTransitionTimestamps:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationPhaseTransitionTimestamp'
          x-kubernetes-list-type: atomic
    kubevirt.io.api.core.v1.VirtualMachineInstanceNetworkInterface:
      type: object
      properties:
        infoSource:
          type: string
        interfaceName:
          type: string
        ipAddress:
          type: string
        ipAddresses:
          type: array
          items:
            type: string
            default: ""
        mac:
          type: string
        name:
          type: string
        queueCount:
          type: integer
          format: int32
    kubevirt.io.api.core.v1.VirtualMachineInstancePhaseTransitionTimestamp:
      type: object
      properties:
        phase:
          type: string
        phaseTransitionTimestamp:
          $ref: '#/components/schemas/k8s.io.v1.Time'
    kubevirt.io.api.core.v1.VirtualMachineInstanceSpec:
      required:
      - domain
      type: object
      properties:
        accessCredentials:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.AccessCredential'
          x-kubernetes-list-type: atomic
        affinity:
          $ref: '#/components/schemas/k8s.io.v1.Affinity'
        architecture:
          type: string
        dnsConfig:
          $ref: '#/components/schemas/k8s.io.v1.PodDNSConfig'
        dnsPolicy:
          type: string
          enum:
          - ClusterFirst
          - ClusterFirstWithHostNet
          - Default
          - None
        domain:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.DomainSpec'
        evictionStrategy:
          type: string
        hostname:
          type: string
        livenessProbe:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Probe'
        networks:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.Network'
        nodeSelector:
          type: object
          additionalProperties:
            type: string
            default: ""
        priorityClassName:
          type: string
        readinessProbe:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Probe'
        schedulerName:
          type: string
        startStrategy:
          type: string
        subdomain:
          type: string
        terminationGracePeriodSeconds:
          type: integer
          format: int64
        tolerations:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.Toleration'
        topologySpreadConstraints:
          type: array
          items:
            $ref: '#/components/schemas/k8s.io.v1.TopologySpreadConstraint'
          x-kubernetes-patch-strategy: merge
          x-kubernetes-list-type: map
          x-kubernetes-list-map-keys:
          - topologyKey
          - whenUnsatisfiable
          x-kubernetes-patch-merge-key: topologyKey
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.Volume'
    kubevirt.io.api.core.v1.VirtualMachineInstanceStatus:
      type: object
      properties:
        VSOCKCID:
          type: integer
          format: int64
        activePods:
          type: object
          additionalProperties:
            type: string
            default: ""
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceCondition'
        currentCPUTopology:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.CPUTopology'
        evacuationNodeName:
          type: string
        fsFreezeStatus:
          type: string
        guestOSInfo:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceGuestOSInfo'
        interfaces:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceNetworkInterface'
        launcherContainerImageVersion:
          type: string
        machine:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.Machine'
        memory:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.MemoryStatus'
        migrationMethod:
          type: string
        migrationState:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationState'
        migrationTransport:
          type: string
        nodeName:
          type: string
        phase:
          type: string
        phaseTransitionTimestamps:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstancePhaseTransitionTimestamp'
          x-kubernetes-list-type: atomic
        qosClass:
          type: string
        reason:
          type: string
        runtimeUser:
          type: integer
          format: int64
          default: 0
        selinuxContext:
          type: string
        topologyHints:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.TopologyHints'
        virtualMachineRevisionName:
          type: string
        volumeStatus:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VolumeStatus'
          x-kubernetes-list-type: atomic
    kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceSpec'
    kubevirt.io.api.core.v1.VirtualMachineList:
      required:
      - apiVersion
      - items
      - kind
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    kubevirt.io.api.core.v1.VirtualMachineMemoryDumpRequest:
      required:
      - claimName
      - phase
      type: object
      properties:
        claimName:
          type: string
          default: ""
        endTimestamp:
          $ref: '#/components/schemas/k8s.io.v1.Time'
        fileName:
          type: string
        message:
          type: string
        phase:
          type: string
          default: ""
        remove:
          type: boolean
        startTimestamp:
          $ref: '#/components/schemas/k8s.io.v1.Time'
    kubevirt.io.api.core.v1.VirtualMachineSpec:
      required:
      - template
      type: object
      properties:
        dataVolumeTemplates:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.DataVolumeTemplateSpec'
        instancetype:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.InstancetypeMatcher'
        liveUpdateFeatures:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.LiveUpdateFeatures'
        preference:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.PreferenceMatcher'
        runStrategy:
          type: string
        running:
          type: boolean
        template:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec'
    kubevirt.io.api.core.v1.VirtualMachineStartFailure:
      type: object
      properties:
        consecutiveFailCount:
          type: integer
          format: int32
        lastFailedVMIUID:
          type: string
        retryAfterTimestamp:
          $ref: '#/components/schemas/k8s.io.v1.Time'
    kubevirt.io.api.core.v1.VirtualMachineStateChangeRequest:
      required:
      - action
      type: object
      properties:
        action:
          type: string
          default: ""
        data:
          type: object
          additionalProperties:
            type: string
            default: ""
        uid:
          type: string
    kubevirt.io.api.core.v1.VirtualMachineStatus:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineCondition'
        created:
          type: boolean
        desiredGeneration:
          type: integer
          format: int64
        memoryDumpRequest:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineMemoryDumpRequest'
        observedGeneration:
          type: integer
          format: int64
        printableStatus:
          type: string
        ready:
          type: boolean
        restoreInProgress:
          type: string
        snapshotInProgress:
          type: string
        startFailure:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineStartFailure'
        stateChangeRequests:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineStateChangeRequest'
        volumeRequests:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineVolumeRequest'
          x-kubernetes-list-type: atomic
        volumeSnapshotStatuses:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.api.core.v1.VolumeSnapshotStatus'
    kubevirt.io.api.core.v1.VirtualMachineVolumeRequest:
      type: object
      properties:
        addVolumeOptions:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.AddVolumeOptions'
        removeVolumeOptions:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.RemoveVolumeOptions'
    kubevirt.io.api.core.v1.Volume:
      required:
      - name
      type: object
      properties:
        cloudInitConfigDrive:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.CloudInitConfigDriveSource'
        cloudInitNoCloud:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.CloudInitNoCloudSource'
        configMap:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.ConfigMapVolumeSource'
        containerDisk:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.ContainerDiskSource'
        dataVolume:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.DataVolumeSource'
        downwardAPI:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.DownwardAPIVolumeSource'
        downwardMetrics:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.DownwardMetricsVolumeSource'
        emptyDisk:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.EmptyDiskSource'
        ephemeral:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.EphemeralVolumeSource'
        hostDisk:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.HostDisk'
        memoryDump:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.MemoryDumpVolumeSource'
        name:
          type: string
          default: ""
        persistentVolumeClaim:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource'
        secret:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.SecretVolumeSource'
        serviceAccount:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.ServiceAccountVolumeSource'
        sysprep:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.SysprepSource'
    kubevirt.io.api.core.v1.VolumeSnapshotStatus:
      required:
      - enabled
      - name
      type: object
      properties:
        enabled:
          type: boolean
          default: false
        name:
          type: string
          default: ""
        reason:
          type: string
    kubevirt.io.api.core.v1.VolumeStatus:
      required:
      - name
      - target
      type: object
      properties:
        hotplugVolume:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.HotplugVolumeStatus'
        memoryDumpVolume:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.DomainMemoryDumpInfo'
        message:
          type: string
        name:
          type: string
          default: ""
        persistentVolumeClaimInfo:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.PersistentVolumeClaimInfo'
        phase:
          type: string
        reason:
          type: string
        size:
          type: integer
          format: int64
        target:
          type: string
          default: ""
    kubevirt.io.api.core.v1.Watchdog:
      required:
      - name
      type: object
      properties:
        i6300esb:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.I6300ESBWatchdog'
        name:
          type: string
          default: ""
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage:
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint:
      required:
      - current
      - previous
      type: object
      properties:
        current:
          type: string
          default: ""
        previous:
          type: string
          default: ""
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource:
      type: object
      properties:
        blank:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage'
        gcs:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceGCS'
        http:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP'
        imageio:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO'
        pvc:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC'
        registry:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry'
        s3:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3'
        snapshot:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceSnapshot'
        upload:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload'
        vddk:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK'
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceGCS:
      required:
      - url
      type: object
      properties:
        secretRef:
          type: string
        url:
          type: string
          default: ""
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP:
      required:
      - url
      type: object
      properties:
        certConfigMap:
          type: string
        extraHeaders:
          type: array
          items:
            type: string
            default: ""
        secretExtraHeaders:
          type: array
          items:
            type: string
            default: ""
        secretRef:
          type: string
        url:
          type: string
          default: ""
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO:
      required:
      - diskId
      - url
      type: object
      properties:
        certConfigMap:
          type: string
        diskId:
          type: string
          default: ""
        secretRef:
          type: string
        url:
          type: string
          default: ""
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC:
      required:
      - name
      - namespace
      type: object
      properties:
        name:
          type: string
          default: ""
        namespace:
          type: string
          default: ""
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef:
      required:
      - kind
      - name
      type: object
      properties:
        kind:
          type: string
          default: ""
        name:
          type: string
          default: ""
        namespace:
          type: string
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry:
      type: object
      properties:
        certConfigMap:
          type: string
        imageStream:
          type: string
        pullMethod:
          type: string
        secretRef:
          type: string
        url:
          type: string
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3:
      required:
      - url
      type: object
      properties:
        certConfigMap:
          type: string
        secretRef:
          type: string
        url:
          type: string
          default: ""
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceSnapshot:
      required:
      - name
      - namespace
      type: object
      properties:
        name:
          type: string
          default: ""
        namespace:
          type: string
          default: ""
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload:
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK:
      type: object
      properties:
        backingFile:
          type: string
        initImageURL:
          type: string
        secretRef:
          type: string
        thumbprint:
          type: string
        url:
          type: string
        uuid:
          type: string
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec:
      type: object
      properties:
        checkpoints:
          type: array
          items:
            $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint'
        contentType:
          type: string
        finalCheckpoint:
          type: boolean
        preallocation:
          type: boolean
        priorityClassName:
          type: string
        pvc:
          $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimSpec'
        source:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource'
        sourceRef:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef'
        storage:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec'
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec:
      type: object
      properties:
        accessModes:
          type: array
          items:
            type: string
            default: ""
        dataSource:
          $ref: '#/components/schemas/k8s.io.v1.TypedLocalObjectReference'
        dataSourceRef:
          $ref: '#/components/schemas/k8s.io.v1.TypedObjectReference'
        resources:
          $ref: '#/components/schemas/k8s.io.v1.ResourceRequirements'
        selector:
          $ref: '#/components/schemas/k8s.io.v1.LabelSelector'
        storageClassName:
          type: string
        volumeMode:
          type: string
        volumeName:
          type: string
    network.harvesterhci.io.v1beta1.ClusterNetwork:
      required:
      - apiVersion
      - kind
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        status:
          $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetworkStatus'
    network.harvesterhci.io.v1beta1.ClusterNetworkList:
      required:
      - apiVersion
      - items
      - kind
      - metadata
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    network.harvesterhci.io.v1beta1.ClusterNetworkStatus:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.Condition'
    network.harvesterhci.io.v1beta1.Condition:
      required:
      - status
      - type
      type: object
      properties:
        lastTransitionTime:
          type: string
        lastUpdateTime:
          type: string
        message:
          type: string
        reason:
          type: string
        status:
          type: string
          default: ""
        type:
          type: string
          default: ""
    network.harvesterhci.io.v1beta1.LinkStatus:
      required:
      - name
      type: object
      properties:
        index:
          type: integer
          format: int32
        mac:
          type: string
        masterIndex:
          type: integer
          format: int32
        name:
          type: string
          default: ""
        promiscuous:
          type: boolean
        state:
          type: string
        type:
          type: string
    network.harvesterhci.io.v1beta1.NetworkInterface:
      required:
      - index
      - name
      - state
      - type
      type: object
      properties:
        index:
          type: integer
          format: int32
          default: 0
        masterIndex:
          type: integer
          format: int32
        name:
          type: string
          default: ""
        state:
          type: string
          default: ""
        type:
          type: string
          default: ""
        usedByManagementNetwork:
          type: boolean
        usedByVlanNetwork:
          type: boolean
    network.harvesterhci.io.v1beta1.NodeNetwork:
      required:
      - apiVersion
      - kind
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkSpec'
        status:
          $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkStatus'
    network.harvesterhci.io.v1beta1.NodeNetworkList:
      required:
      - apiVersion
      - items
      - kind
      - metadata
      type: object
      properties:
        apiVersion:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/k8s.io.v1.ListMeta'
    network.harvesterhci.io.v1beta1.NodeNetworkSpec:
      required:
      - nodeName
      type: object
      properties:
        description:
          type: string
        nic:
          type: string
        nodeName:
          type: string
          default: ""
        type:
          type: string
    network.harvesterhci.io.v1beta1.NodeNetworkStatus:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.Condition'
        networkIDs:
          type: array
          items:
            type: integer
            format: int32
            default: 0
        networkLinkStatus:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.LinkStatus'
        nics:
          type: array
          items:
            $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NetworkInterface'
x-original-swagger-version: "2.0"
