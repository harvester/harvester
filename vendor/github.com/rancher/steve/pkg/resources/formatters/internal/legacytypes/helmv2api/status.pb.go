// Copyright The Helm Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: status.proto

package helmv2api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status_Code int32

const (
	// Status_UNKNOWN indicates that a release is in an uncertain state.
	Status_UNKNOWN Status_Code = 0
	// Status_DEPLOYED indicates that the release has been pushed to Kubernetes.
	Status_DEPLOYED Status_Code = 1
	// Status_DELETED indicates that a release has been deleted from Kubernetes.
	Status_DELETED Status_Code = 2
	// Status_SUPERSEDED indicates that this release object is outdated and a newer one exists.
	Status_SUPERSEDED Status_Code = 3
	// Status_FAILED indicates that the release was not successfully deployed.
	Status_FAILED Status_Code = 4
	// Status_DELETING indicates that a delete operation is underway.
	Status_DELETING Status_Code = 5
	// Status_PENDING_INSTALL indicates that an install operation is underway.
	Status_PENDING_INSTALL Status_Code = 6
	// Status_PENDING_UPGRADE indicates that an upgrade operation is underway.
	Status_PENDING_UPGRADE Status_Code = 7
	// Status_PENDING_ROLLBACK indicates that a rollback operation is underway.
	Status_PENDING_ROLLBACK Status_Code = 8
)

// Enum value maps for Status_Code.
var (
	Status_Code_name = map[int32]string{
		0: "UNKNOWN",
		1: "DEPLOYED",
		2: "DELETED",
		3: "SUPERSEDED",
		4: "FAILED",
		5: "DELETING",
		6: "PENDING_INSTALL",
		7: "PENDING_UPGRADE",
		8: "PENDING_ROLLBACK",
	}
	Status_Code_value = map[string]int32{
		"UNKNOWN":          0,
		"DEPLOYED":         1,
		"DELETED":          2,
		"SUPERSEDED":       3,
		"FAILED":           4,
		"DELETING":         5,
		"PENDING_INSTALL":  6,
		"PENDING_UPGRADE":  7,
		"PENDING_ROLLBACK": 8,
	}
)

func (x Status_Code) Enum() *Status_Code {
	p := new(Status_Code)
	*p = x
	return p
}

func (x Status_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[0].Descriptor()
}

func (Status_Code) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[0]
}

func (x Status_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status_Code.Descriptor instead.
func (Status_Code) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{0, 0}
}

// Status defines the status of a release.
type Status struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Code  Status_Code            `protobuf:"varint,1,opt,name=code,proto3,enum=legacytypes.helmv2api.Status_Code" json:"code,omitempty"`
	// Cluster resources as kubectl would print them.
	Resources string `protobuf:"bytes,3,opt,name=resources,proto3" json:"resources,omitempty"`
	// Contains the rendered templates/NOTES.txt if available
	Notes string `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	// LastTestSuiteRun provides results on the last test run on a release
	LastTestSuiteRun *TestSuite `protobuf:"bytes,5,opt,name=last_test_suite_run,json=lastTestSuiteRun,proto3" json:"last_test_suite_run,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_status_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetCode() Status_Code {
	if x != nil {
		return x.Code
	}
	return Status_UNKNOWN
}

func (x *Status) GetResources() string {
	if x != nil {
		return x.Resources
	}
	return ""
}

func (x *Status) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *Status) GetLastTestSuiteRun() *TestSuite {
	if x != nil {
		return x.LastTestSuiteRun
	}
	return nil
}

var File_status_proto protoreflect.FileDescriptor

const file_status_proto_rawDesc = "" +
	"\n" +
	"\fstatus.proto\x12\x15legacytypes.helmv2api\x1a\x10test_suite.proto\"\xe0\x02\n" +
	"\x06Status\x126\n" +
	"\x04code\x18\x01 \x01(\x0e2\".legacytypes.helmv2api.Status.CodeR\x04code\x12\x1c\n" +
	"\tresources\x18\x03 \x01(\tR\tresources\x12\x14\n" +
	"\x05notes\x18\x04 \x01(\tR\x05notes\x12O\n" +
	"\x13last_test_suite_run\x18\x05 \x01(\v2 .legacytypes.helmv2api.TestSuiteR\x10lastTestSuiteRun\"\x98\x01\n" +
	"\x04Code\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\f\n" +
	"\bDEPLOYED\x10\x01\x12\v\n" +
	"\aDELETED\x10\x02\x12\x0e\n" +
	"\n" +
	"SUPERSEDED\x10\x03\x12\n" +
	"\n" +
	"\x06FAILED\x10\x04\x12\f\n" +
	"\bDELETING\x10\x05\x12\x13\n" +
	"\x0fPENDING_INSTALL\x10\x06\x12\x13\n" +
	"\x0fPENDING_UPGRADE\x10\a\x12\x14\n" +
	"\x10PENDING_ROLLBACK\x10\bBRZPgithub.com/rancher/steve/pkg/resources/formatters/internal/legacytypes/helmv2apib\x06proto3"

var (
	file_status_proto_rawDescOnce sync.Once
	file_status_proto_rawDescData []byte
)

func file_status_proto_rawDescGZIP() []byte {
	file_status_proto_rawDescOnce.Do(func() {
		file_status_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_status_proto_rawDesc), len(file_status_proto_rawDesc)))
	})
	return file_status_proto_rawDescData
}

var file_status_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_status_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_status_proto_goTypes = []any{
	(Status_Code)(0),  // 0: legacytypes.helmv2api.Status.Code
	(*Status)(nil),    // 1: legacytypes.helmv2api.Status
	(*TestSuite)(nil), // 2: legacytypes.helmv2api.TestSuite
}
var file_status_proto_depIdxs = []int32{
	0, // 0: legacytypes.helmv2api.Status.code:type_name -> legacytypes.helmv2api.Status.Code
	2, // 1: legacytypes.helmv2api.Status.last_test_suite_run:type_name -> legacytypes.helmv2api.TestSuite
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_status_proto_init() }
func file_status_proto_init() {
	if File_status_proto != nil {
		return
	}
	file_test_suite_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_status_proto_rawDesc), len(file_status_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_status_proto_goTypes,
		DependencyIndexes: file_status_proto_depIdxs,
		EnumInfos:         file_status_proto_enumTypes,
		MessageInfos:      file_status_proto_msgTypes,
	}.Build()
	File_status_proto = out.File
	file_status_proto_goTypes = nil
	file_status_proto_depIdxs = nil
}
