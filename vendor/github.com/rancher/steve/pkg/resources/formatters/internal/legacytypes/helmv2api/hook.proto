// Copyright The Helm Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package legacytypes.helmv2api;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/rancher/steve/pkg/resources/formatters/internal/legacytypes/helmv2api";

// Hook defines a hook object.
message Hook {
	enum Event {
        UNKNOWN = 0;
        PRE_INSTALL = 1;
        POST_INSTALL = 2;
        PRE_DELETE = 3;
        POST_DELETE = 4;
        PRE_UPGRADE = 5;
        POST_UPGRADE = 6;
        PRE_ROLLBACK = 7;
        POST_ROLLBACK = 8;
        RELEASE_TEST_SUCCESS = 9;
        RELEASE_TEST_FAILURE = 10;
        CRD_INSTALL = 11;
	}
	enum DeletePolicy {
	    SUCCEEDED = 0;
	    FAILED = 1;
	    BEFORE_HOOK_CREATION = 2;
	}
	string name = 1;
	// Kind is the Kubernetes kind.
	string kind = 2;
	// Path is the chart-relative path to the template.
	string path = 3;
	// Manifest is the manifest contents.
	string manifest = 4;
	// Events are the events that this hook fires on.
	repeated Event events = 5;
	// LastRun indicates the date/time this was last run.
	google.protobuf.Timestamp last_run = 6;
	// Weight indicates the sort order for execution among similar Hook type
	int32 weight = 7;
	// DeletePolicies are the policies that indicate when to delete the hook
	repeated DeletePolicy delete_policies = 8;
	// DeleteTimeout indicates how long to wait for a resource to be deleted before timing out
	int64 delete_timeout = 9;
}
