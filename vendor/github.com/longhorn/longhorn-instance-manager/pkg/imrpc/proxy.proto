syntax="proto3";

package imrpc;

import "google/protobuf/empty.proto";
import "github.com/longhorn/longhorn-engine/proto/ptypes/controller.proto";
import "github.com/longhorn/longhorn-engine/proto/ptypes/syncagent.proto";

service ProxyEngineService {
	rpc ServerVersionGet(ProxyEngineRequest) returns (EngineVersionProxyResponse);

	rpc VolumeGet(ProxyEngineRequest) returns (EngineVolumeGetProxyResponse);
	rpc VolumeExpand(EngineVolumeExpandRequest) returns (google.protobuf.Empty);
	rpc VolumeFrontendStart(EngineVolumeFrontendStartRequest) returns (google.protobuf.Empty);
	rpc VolumeFrontendShutdown(ProxyEngineRequest) returns (google.protobuf.Empty);

	rpc VolumeSnapshot(EngineVolumeSnapshotRequest) returns (EngineVolumeSnapshotProxyResponse);
	rpc SnapshotList(ProxyEngineRequest) returns (EngineSnapshotListProxyResponse);
	rpc SnapshotRevert(EngineSnapshotRevertRequest) returns (google.protobuf.Empty);
	rpc SnapshotPurge(EngineSnapshotPurgeRequest) returns (google.protobuf.Empty);
	rpc SnapshotPurgeStatus(ProxyEngineRequest) returns (EngineSnapshotPurgeStatusProxyResponse);
	rpc SnapshotClone(EngineSnapshotCloneRequest) returns (google.protobuf.Empty);
	rpc SnapshotCloneStatus(ProxyEngineRequest) returns (EngineSnapshotCloneStatusProxyResponse);
	rpc SnapshotRemove(EngineSnapshotRemoveRequest) returns (google.protobuf.Empty);

	rpc SnapshotBackup(EngineSnapshotBackupRequest) returns (EngineSnapshotBackupProxyResponse);
	rpc SnapshotBackupStatus(EngineSnapshotBackupStatusRequest) returns (EngineSnapshotBackupStatusProxyResponse);
	rpc BackupRestore(EngineBackupRestoreRequest) returns (EngineBackupRestoreProxyResponse);
	rpc BackupRestoreStatus(ProxyEngineRequest) returns (EngineBackupRestoreStatusProxyResponse);

	rpc ReplicaAdd(EngineReplicaAddRequest) returns (google.protobuf.Empty);
	rpc ReplicaList(ProxyEngineRequest) returns (EngineReplicaListProxyResponse);
	rpc ReplicaRebuildingStatus(ProxyEngineRequest) returns (EngineReplicaRebuildStatusProxyResponse);
	rpc ReplicaVerifyRebuild(EngineReplicaVerifyRebuildRequest) returns (google.protobuf.Empty);
	rpc ReplicaRemove(EngineReplicaRemoveRequest) returns (google.protobuf.Empty);
}

message ProxyEngineRequest{
	string address = 1;
}

message EngineVersionProxyResponse {
	ptypes.VersionOutput version = 1;
}

message EngineVolumeGetProxyResponse {
	ptypes.Volume volume = 1;
}

message EngineVolumeExpandRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	ptypes.VolumeExpandRequest expand = 2;
}

message EngineVolumeFrontendStartRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	ptypes.VolumeFrontendStartRequest frontend_start = 2;
}

message EngineVolumeSnapshotRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	ptypes.VolumeSnapshotRequest snapshot_volume = 2;
}

message EngineVolumeSnapshotProxyResponse {
	ptypes.VolumeSnapshotReply snapshot = 1;
}

message EngineSnapshotListProxyResponse {
	map<string, EngineSnapshotDiskInfo> disks = 1;
}

message EngineSnapshotDiskInfo {
	string name = 1;
	string parent = 2;
	map<string, bool> children = 3;
	bool removed = 4;
	bool user_created = 5;
	string created = 6;
	string size = 7;
	map<string, string> labels = 8;
}

message EngineSnapshotRevertRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	string name = 2;
}

message EngineSnapshotPurgeRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	bool skip_if_in_progress = 2;
}

message EngineSnapshotPurgeStatusProxyResponse {
	map<string, ptypes.SnapshotPurgeStatusResponse> status = 1;
}

message EngineSnapshotCloneRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	string from_controller = 2;
	string snapshot_name = 3;
	bool export_backing_image_if_exist = 4;
}

message EngineSnapshotCloneStatusProxyResponse {
	map<string, ptypes.SnapshotCloneStatusResponse> status = 1;
}

message EngineSnapshotRemoveRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	repeated string names = 2;
}

message EngineSnapshotBackupRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	repeated string envs = 8;

	string backup_name = 2;
	string snapshot_name = 3;
	string backup_target = 4;
	string backing_image_name = 5;
	string backing_image_checksum = 6;
	map<string, string> labels = 7;
}

message EngineSnapshotBackupProxyResponse {
	string backup_id = 1;
	string replica = 2;
	bool is_incremental = 3;
}

message EngineSnapshotBackupStatusRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	string backup_name = 2;
	string replica_address = 3;
}

message EngineSnapshotBackupStatusProxyResponse {
	string backup_url = 1;
	string error = 2;
	int32 progress = 3;
	string snapshot_name = 4;
	string state = 5;

	string replica_address = 6;
}

message EngineBackupRestoreRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	repeated string envs = 2;

	string url = 3;
	string target = 4;
	string volume_name = 5;
}

message EngineBackupRestoreProxyResponse {
	bytes taskError = 1;
}

message EngineBackupRestoreStatusProxyResponse {
	map<string, EngineBackupRestoreStatus> status = 1;
}

message EngineBackupRestoreStatus {
	bool is_restoring = 1;
	string last_restored = 2;
	string current_restoring_backup = 3;
	int32 progress = 4;
	string error = 5;
	string filename = 6;
	string state = 7;
	string backup_url = 8;
}

message EngineReplicaAddRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	string replica_address = 2;
	bool restore = 3;
}

message EngineReplicaListProxyResponse {
	ptypes.ReplicaListReply replica_list = 1;
}

message EngineReplicaVerifyRebuildRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	string replica_address = 2;
}

message EngineReplicaRebuildStatusProxyResponse {
	map<string, ptypes.ReplicaRebuildStatusResponse> status = 1;
}

message EngineReplicaRemoveRequest {
	ProxyEngineRequest proxy_engine_request = 1;

	string replica_address = 2;
}
