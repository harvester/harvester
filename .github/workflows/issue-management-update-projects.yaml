name: "[Issue Management] Update Issue Status in Projects"
on:
  issues:
    types: [labeled, milestoned, reopened, closed]
  issue_comment:
    types: [created, edited]

env:
  COMMUNITY_SPRINT_PROJECT_URL: https://github.com/orgs/harvester/projects/10
  HARVESTER_SPRINT_PROJECT_URL: https://github.com/orgs/harvester/projects/7

jobs:
  community:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Is Harvester Member
      id: is-harvester-member
      continue-on-error: true
      uses: rancher/gh-issue-mgr/get-user-teams-membership@main
      with:
        username: ${{ github.event.issue.user.login }}
        organization: harvester
        GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

    - run: |
        echo "is-harvester-member teams: ${{ steps.is-harvester-member.outputs.teams }}"
        echo "is-harvester-member outcome: ${{ steps.is-harvester-member.outcome }}"

    - name: Get Issue
      uses: rancher/gh-issue-mgr/request-action@main
      id: issue
      if: steps.is-harvester-member.outcome == 'success'
      with:
        route: GET /repos/${{ github.repository }}/issues/${{ github.event.issue.number }}
      env:
        GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

    - uses: rancher/gh-issue-mgr/project-fields@main
      id: fields
      continue-on-error: true
      if: steps.is-harvester-member.outcome == 'success'
      with:
        operation: get
        fields: Status
        github_token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        project_url: ${{ env.COMMUNITY_SPRINT_PROJECT_URL }}
        resource_url: https://github.com/harvester/harvester/issues/${{ github.event.issue.number }}

    - run: echo ${{ steps.fields.outputs.values }}

    - name: Add Issue to Community Sprint Project
      id: add-project
      uses: actions/add-to-project@v1.0.2
      if: ${{
        steps.is-harvester-member.outcome == 'success' &&
        steps.fields.outcome == 'success'
        }}
      with:
        project-url: ${{ env.COMMUNITY_SPRINT_PROJECT_URL }}
        github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

    - name: Update Project Item
      if: ${{ 
        steps.is-harvester-member.outcome == 'success' &&
        steps.fields.outcome == 'success' &&
        steps.add-project.outputs.itemId != '' 
        }}
      run: |
        teams=${{ steps.is-harvester-member.outputs.teams }}
        teams=${teams:1:-1}
        IFS=',' read -r -a team_array <<< "$teams"
        team_count=${#team_array[@]}
        echo "team_count: $team_count"

        # If the issue is milestoned by harvester member, update to Resolved
        if [[ $team_count -gt 0 && 
              "${{ github.event_name }}" == "issues" && 
              "${{ github.event.action }}" == "milestoned" ]]; then

          echo "Updating to Resolved since it's milestoned by harvester member"
          echo "field-values=Resolved,[0]" >> $GITHUB_ENV

        # If the issue is closed, update to Closed
        elif [[ "${{ github.event_name }}" == "issues" && 
                "${{ github.event.action }}" == "closed" &&
                "${{ steps.fields.outputs.values }}" != "Resolved" ]]; then

          echo "Updating to Closed since it's closed"
          echo "field-values=Closed" >> $GITHUB_ENV

        # If the issue is reopened with status Closed, update to In Progress
        elif [[ "${{ github.event_name }}" == "issues" && 
                "${{ github.event.action }}" == "reopened" && 
                "${{ steps.fields.outputs.values }}" == "Closed" ]]; then

          echo "Updating to In Progress"
          echo "field-values=In Progress,[0]" >> $GITHUB_ENV

        # If a comment is added or edited and the status is not Resolved or Closed by non-harvester member, update to In Progress
        elif [[ $team_count -eq 0 && 
                "${{ github.event_name }}" == "issue_comment" && 
                ( "${{ github.event.action }}" == "created" || "${{ github.event.action }}" == "edited" ) && 
                ( "${{ steps.fields.outputs.values }}" != "Resolved" && "${{ steps.fields.outputs.values }}" != "Closed" ) ]]; then

          echo "Updating to In Progress"
          echo "field-values=In Progress,[0]" >> $GITHUB_ENV

        # If the issue is labeled as invalid, wontfix or duplicated, update to Closed
        elif [[ "${{ github.event_name }}" == "issues" && 
                "${{ github.event.action }}" == "labeled" && 
                ( "${{ github.event.label.name }}" == "invalid" || 
                  "${{ github.event.label.name }}" == "wontfix" || 
                  "${{ github.event.label.name }}" == "duplicated" ) ]]; then

          echo "Updating to Closed"
          echo "field-values=Closed" >> $GITHUB_ENV

        else
          echo "No matching conditions, skipping update."
          exit 0
        fi

      env:
        GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

    - name: Apply Project Update
      if: ${{
        steps.is-harvester-member.outcome == 'success' &&
        steps.fields.outcome == 'success' &&
        env.field-values != ''
        }}
      uses: rancher/gh-issue-mgr/update-project-fields@main
      with:
        project-url: ${{ env.COMMUNITY_SPRINT_PROJECT_URL }}
        github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        item-id: ${{ steps.add-project.outputs.itemId }}
        field-keys: Status,Sprint
        field-values: ${{ env.field-values }}

    - name: Add Resolved Issue to Harvester Sprint Project
      if: ${{ 
        steps.is-harvester-member.outcome == 'success' &&
        steps.fields.outcome == 'success' &&
        env.field-values != '' &&
        startsWith(env.field-values, 'Resolved')
        }}
      uses: actions/add-to-project@v1.0.2
      with:
        project-url: ${{ env.HARVESTER_SPRINT_PROJECT_URL }}
        github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

    - name: Set Milestone to Resolved Issue
      if: ${{
        steps.is-harvester-member.outcome == 'success' &&
        steps.fields.outcome == 'success' &&
        env.field-values != '' &&
        startsWith(env.field-values, 'Resolved') &&
        github.event.issue.milestone == null
        }}
      env:
        GH_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
      run: |
        ISSUE_NUMBER="${{ github.event.issue.number }}"
        gh issue edit "$ISSUE_NUMBER" --milestone "Planning"